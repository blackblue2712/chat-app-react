{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          toUid\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n        let uid = this.props.userPayload.user._id; // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n        let photo = this.props.userPayload.user.photo;\n        let token = this.props.userPayload.token;\n        this.socket.emit(\"client-send-message-from-individual-user\", {\n          to: toUid,\n          message: textMessage.value,\n          photo,\n          from: uid\n        }, () => {\n          this.setState({\n            messages: this.state.messages.concat({\n              isMe: \"me\",\n              content: textMessage.value\n            })\n          });\n          document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n          textMessage.value = \"\";\n          document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n        }); // save private message to db\n\n        postSavePrivateMessage({\n          sender: uid,\n          receiver: toUid,\n          content: textMessage.value\n        }, token).then(() => {}).catch(err => console.log(err));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMessageIndividualUser = (senderId, receiverId, token) => {\n      getMessageIndividualUser(senderId, receiverId, token).then(res => {\n        console.log(res);\n\n        if (!res.message) {\n          let listMessage = [];\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.sender.photo : mes.receiver.photo;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: this.state.messages.concat(listMessage)\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {}\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        toUid\n      } = this.props.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.getMessageIndividualUser(uid, toUid, token); // get user that send message to\n\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        this.socket.emit(\"join-individual\", {\n          uid,\n          username: name\n        }, () => {\n          console.log(`user ${this.props.userPayload.user.email} joined`);\n        });\n        this.socket.on(\"server-send-message-from-individual-user\", res => {\n          if (res.from === userFriend._id) {\n            this.setState({\n              messages: this.state.messages.concat({\n                content: res.message,\n                photo: res.photo\n              })\n            });\n          }\n\n          document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // get user that send message to\n\n      let {\n        toUid\n      } = nextProps.match.params;\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      messages\n    } = this.state;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Active now\")), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, messages.map((msg, i) => {\n      console.log(msg.created);\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: msg.isMe,\n        content: msg.content,\n        date: moment(msg.created).fromNow() || \"just now\",\n        photo: msg.photo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"btn attach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","withRouter","ItemMessage","Template","socketIOClient","getUserById","getMessageIndividualUser","postSavePrivateMessage","moment","require","ChatArea","Component","constructor","handleSendMessageFromIndividualUser","window","event","preventDefault","toUid","props","match","params","textMessage","document","getElementById","uid","userPayload","user","_id","photo","token","socket","emit","to","message","value","from","setState","messages","state","concat","isMe","content","querySelector","innerText","scrollBy","sender","receiver","then","catch","err","console","log","e","senderId","receiverId","res","listMessage","map","mes","objMessage","date","created","push","checkUserEnter","keyCode","toggleDropdown","drdElement","classList","length","remove","add","addEventListener","onlineUser","userFriend","componentDidMount","name","fullname","email","process","env","REACT_APP_API_URL","transports","on","username","componentWillUnmount","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","el","idTabElement","tabElement","msg","i","fromNow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {}\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let { toUid } = this.props.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      // get list messages\n      this.getMessageIndividualUser(uid, toUid, token)\n      // get user that send message to\n      let userFriend = await getUserById(toUid);\n      this.setState({userFriend})\n\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n      // wait client connect\n      this.socket.on('connect', () => {\n\n        this.socket.emit(\"join-individual\", {uid, username: name}, () => {\n          console.log(`user ${this.props.userPayload.user.email} joined`);\n        });\n\n        this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n          if(res.from === userFriend._id) {\n            this.setState( {messages: this.state.messages.concat( {content: res.message, photo: res.photo} )} );\n          }\n          document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n        });\n      })\n\n\n    } catch(e) { console.log(e) }\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\")\n  }\n\n  handleSendMessageFromIndividualUser = () => {\n    try {\n      window.event.preventDefault();\n      let { toUid } = this.props.match.params;\n      let textMessage = document.getElementById(\"text-message\");\n      let uid = this.props.userPayload.user._id;\n      // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n      let token = this.props.userPayload.token;\n\n      this.socket.emit(\"client-send-message-from-individual-user\", { to: toUid, message: textMessage.value, photo, from: uid }, () => {\n        this.setState( {messages: this.state.messages.concat( {isMe: \"me\", content: textMessage.value} )} );\n        document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n        textMessage.value = \"\";\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n      });\n\n\n      // save private message to db\n      postSavePrivateMessage({\n        sender: uid,\n        receiver: toUid,\n        content: textMessage.value\n      }, token)\n      .then( () => {} )\n      .catch( err => console.log(err) );\n\n    } catch (e) { console.log(e) }\n  }\n\n  getMessageIndividualUser = (senderId, receiverId, token) => {\n    getMessageIndividualUser(senderId, receiverId, token)\n    .then( res => {\n      console.log(res)\n      if(!res.message) {\n        let listMessage = [];\n        res.map( mes => {\n          let objMessage = {};\n          let isMe = mes.sender._id === senderId ? true : false;\n          objMessage.isMe = isMe === true ? \"me\" : \"\";\n          objMessage.content = mes.content;\n          objMessage.date = mes.created;\n          objMessage.photo = isMe === true? mes.sender.photo : mes.receiver.photo;\n          listMessage.push(objMessage);\n        });\n        this.setState( {messages: this.state.messages.concat(listMessage) });\n      }\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n\n      // get user that send message to\n      let { toUid } = nextProps.match.params;\n      let userFriend = await getUserById(toUid);\n      this.setState({userFriend})\n\n\n    } catch(e) { console.log(e) }\n    console.log(\"receive\")\n  }\n\n  checkUserEnter = (e) => {\n    if (e.keyCode === 13) {\n      try {\n        this.handleSendMessageFromIndividualUser();\n      } catch (e) { console.log(e) }\n    }\n  }\n\n  toggleDropdown = () => {\n    try {\n      let drdElement = document.querySelector(\"#chat-area .list-more\");\n      if (drdElement.classList.length > 2) {\n        drdElement.classList.remove(\"active\");\n      } else {\n        drdElement.classList.add(\"active\");\n        document.getElementById(\"root\").addEventListener(\"click\", () => {\n          drdElement.classList.remove(\"active\");\n        });\n      }\n    } catch (e) { }\n  }\n\n  render() {\n    let { userFriend, messages } = this.state;\n\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map( el => { el.classList.remove(\"active\") } );\n    // active tab\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n    if(tabElement) {\n      tabElement.classList.add(\"active\")\n    }\n    return (\n      <Template>\n        <div id=\"chat-area\">\n          <div className=\"top\">\n            <div className=\"inside\">\n              <div className=\"status online\" />\n              <div className=\"data\">\n                <h5><a href=\"/users/\">{ userFriend.fullname || userFriend.email }</a></h5>\n                <span>Active now</span>\n              </div>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-headphone-alt\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-video-camera\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-info\" />\n              </button>\n\n              <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                  <i className=\"ti-gird\" />\n                </button>\n\n                <div className=\"dropdown-list list-more\">\n                  <a href=\"/\" className=\"voice\">Voice Call</a>\n                  <a href=\"/\" className=\"voice\">Video Call</a>\n                  <hr />\n                  <a href=\"/\" className=\"voice\">Clear History</a>\n                  <a href=\"/\" className=\"voice\">Block Contact</a>\n                  <a href=\"/\" className=\"voice\">Delete Contact</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\">\n            <div className=\"container\">\n              {\n                messages.map( (msg, i) => {\n                  console.log(msg.created)\n                  return <ItemMessage \n                    key={i}\n                    isMe={msg.isMe}\n                    content={msg.content}\n                    date={moment(msg.created).fromNow() || \"just now\"}\n                    photo={msg.photo}\n                  />\n                })\n              }\n              {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n\n            </div>\n            <div className=\"scroller\" />\n          </div>\n          <div className=\"bottom\">\n            <form className=\"text-area\">\n              <textarea id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"} />\n              <div className=\"add-smiles\">\n                <span title=\"add icon\" className=\"em em-blush\" />\n              </div>\n              \n              <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n            </form>\n            <label>\n              <input type=\"file\" className=\"d-none\" />\n              <span className=\"btn attach\"><i className=\"ti-clip\" /></span>\n            </label>\n          </div>\n        </div>\n        {/* <div id=\"call-area\">\n            </div> */}\n      </Template>\n    )\n\n  }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}