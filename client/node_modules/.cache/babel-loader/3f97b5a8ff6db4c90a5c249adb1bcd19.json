{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          let {\n            toUid\n          } = this.props.match.params;\n          this.orderItemDiscussionToTop(toUid);\n          let uid = this.props.userPayload.user._id; // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n          let photo = this.props.userPayload.user.photo;\n          let token = this.props.userPayload.token; // emit event\n\n          this.socket.emit(\"client-send-message-from-individual-user\", {\n            to: toUid,\n            message: textMessage.value,\n            photo,\n            from: uid\n          }, () => {\n            this.setState({\n              messages: this.state.messages.concat({\n                isMe: \"me\",\n                content: textMessage.value\n              })\n            });\n            document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n            textMessage.value = \"\";\n            this.scrollToBottom();\n          }); // save private message to db\n\n          this.formData.append(\"sender\", uid);\n          this.formData.append(\"receiver\", toUid);\n          this.formData.append(\"content\", textMessage.value);\n          postSavePrivateMessage(this.formData, token).then(res => {\n            console.log(res);\n            this.formData.delete(\"photo\");\n\n            if (res && res.urlContainImage) {\n              let dataImage = {\n                to: toUid,\n                from: uid,\n                photo,\n                contentPhoto: res.urlContainImage,\n                isMe: \"me\"\n              };\n              this.setState({\n                messages: this.state.messages.concat(dataImage)\n              });\n              this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {});\n            }\n          }).catch(err => console.log(err));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleCreateConnectSocket = (data, userFriend) => {\n      try {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n          transports: ['websocket']\n        }); // wait client connect\n\n        this.socket.on('connect', () => {\n          this.socket.emit(\"join-individual\", {\n            uid: data.uid,\n            username: data.name\n          }, () => {\n            console.log(`user ${this.props.userPayload.user.email} joined`);\n          });\n          this.socket.on(\"server-send-message-from-individual-user\", res => {\n            console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  content: res.message,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, res.message, userFriend._id);\n          });\n          this.socket.on(\"server-send-message-contain-image-from-individual-user\", res => {\n            console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  contentPhoto: res.contentPhoto,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n          });\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.showNewMessageComming = (from, message, userFriendId) => {\n      try {\n        document.querySelector(`#dcs_${from} p`).innerText = message;\n        this.orderItemDiscussionToTop(from);\n        let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n        this.showUnReadMessage(currentUnread, from);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMessageIndividualUser = (senderId, receiverId, token) => {\n      getMessageIndividualUser(senderId, receiverId, token).then(res => {\n        console.log(res);\n\n        if (!res.message) {\n          let listMessage = [];\n          let countUnreadMessage = 0;\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n            objMessage.contentPhoto = mes.photo;\n            if (mes.sender._id !== senderId && mes.isRead === false) countUnreadMessage += 1;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: this.state.messages.concat(listMessage)\n          });\n          this.showUnReadMessage(countUnreadMessage, receiverId);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.orderItemDiscussionToTop = toUid => {\n      let el = document.querySelector(`#dcs_${toUid}`);\n      console.log(el);\n      el.style.order = this.ORDER_ITEM_DISCUSSION;\n      this.ORDER_ITEM_DISCUSSION -= 1;\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.showUnReadMessage = (count, toUid) => {\n      try {\n        if (count > 0) {\n          document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n          document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.showTypingAction = uTyping => {\n      try {\n        document.getElementById(\"typing-action\").classList.add(\"on\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {}\n    };\n    this.formData = new FormData();\n    this.ORDER_ITEM_DISCUSSION = 0;\n  }\n\n  async componentDidMount() {\n    try {\n      window.onload = () => {\n        this.scrollToBottom();\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        toUid\n      } = this.props.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.getMessageIndividualUser(uid, toUid, token); // get user that send message to\n\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        toUid\n      } = nextProps.match.params;\n      this.orderItemDiscussionToTop(toUid);\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let token = this.props.userPayload.token; // get list messages\n\n      this.setState({\n        messages: []\n      });\n      this.getMessageIndividualUser(uid, toUid, token); // get user that send message to\n\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      messages\n    } = this.state;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Active now\")), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, messages.map((msg, i) => {\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: msg.isMe,\n        content: msg.content,\n        contentPhoto: msg.contentPhoto,\n        photo: msg.photo,\n        date: moment(msg.date).fromNow() || \"just now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"typing-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"someone is typing ...\"), React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","withRouter","ItemMessage","Template","socketIOClient","getUserById","getMessageIndividualUser","postSavePrivateMessage","moment","require","ChatArea","Component","constructor","handleSendMessageFromIndividualUser","window","event","preventDefault","textMessage","document","getElementById","value","trim","formData","get","querySelector","src","classList","remove","toUid","props","match","params","orderItemDiscussionToTop","uid","userPayload","user","_id","photo","token","socket","emit","to","message","from","setState","messages","state","concat","isMe","content","innerText","scrollToBottom","append","then","res","console","log","delete","urlContainImage","dataImage","contentPhoto","catch","err","e","handleCreateConnectSocket","data","userFriend","process","env","REACT_APP_API_URL","transports","on","username","name","email","showNewMessageComming","userFriendId","currentUnread","Number","innerHTML","showUnReadMessage","senderId","receiverId","listMessage","countUnreadMessage","map","mes","objMessage","sender","date","created","receiver","isRead","push","el","style","order","ORDER_ITEM_DISCUSSION","scrollIntoView","behavior","count","add","showTypingAction","uTyping","previewPhoto","reader","FileReader","inputAvatar","onload","result","readAsDataURL","target","files","handlePasteToInput","items","clipboardData","originalEvent","blob","i","length","type","indexOf","getAsFile","clearFormDataImage","checkUserEnter","keyCode","toggleDropdown","drdElement","addEventListener","onlineUser","FormData","componentDidMount","fullname","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","idTabElement","tabElement","msg","fromNow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            messages: [],\n            onlineUser: [],\n            userFriend: {}\n        }\n\n        this.formData = new FormData();\n        this.ORDER_ITEM_DISCUSSION = 0;\n    }\n\n    async componentDidMount() {\n        try {\n            window.onload = () => {\n                this.scrollToBottom();\n            }\n\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            let { toUid } = this.props.match.params;\n            let uid = this.props.userPayload.user._id;\n            let token = this.props.userPayload.token;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            // get list messages\n            this.getMessageIndividualUser(uid, toUid, token)\n            // get user that send message to\n            let userFriend = await getUserById(toUid);\n            this.setState({ userFriend })\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n        } catch (e) { console.log(e) }\n    }\n    componentWillUnmount() {\n        console.log(\"unmount\")\n    }\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n    async componentWillReceiveProps(nextProps) {\n        try {\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n\n            let { toUid } = nextProps.match.params;\n            this.orderItemDiscussionToTop(toUid);\n\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            let token = this.props.userPayload.token;\n            // get list messages\n            this.setState({ messages: [] });\n            this.getMessageIndividualUser(uid, toUid, token)\n            // get user that send message to\n            let userFriend = await getUserById(toUid);\n            this.setState({ userFriend });\n            \n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n        } catch (e) { console.log(e) }\n        console.log(\"receive\")\n    }\n\n    handleSendMessageFromIndividualUser = () => {\n        try {\n            window.event.preventDefault();\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n                document.querySelector(\".preview-image #preview\").src = \"\";\n                document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                let { toUid } = this.props.match.params;\n                this.orderItemDiscussionToTop(toUid);\n\n                let uid = this.props.userPayload.user._id;\n                // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                let photo = this.props.userPayload.user.photo;\n                let token = this.props.userPayload.token;\n\n                // emit event\n                this.socket.emit(\"client-send-message-from-individual-user\", { to: toUid, message: textMessage.value, photo, from: uid }, () => {\n                    this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n                    document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n                    textMessage.value = \"\";\n                    this.scrollToBottom();\n                });\n\n\n                // save private message to db\n                this.formData.append(\"sender\", uid);\n                this.formData.append(\"receiver\", toUid);\n                this.formData.append(\"content\", textMessage.value);\n                postSavePrivateMessage(this.formData, token)\n                .then((res) => {\n                    console.log(res)\n                    this.formData.delete(\"photo\");\n                    if (res && res.urlContainImage) {\n                        let dataImage = {\n                          to: toUid,\n                          from: uid,\n                          photo,\n                          contentPhoto: res.urlContainImage,\n                          isMe: \"me\"\n                        }\n                        this.setState({\n                          messages: this.state.messages.concat(dataImage)\n                        });\n\n                        this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {\n                          \n                        });\n                    }\n                })\n                .catch(err => console.log(err));\n            }\n\n        } catch (e) { console.log(e) }\n    }\n\n    handleCreateConnectSocket = (data, userFriend) => {\n        try {\n            this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n            // wait client connect\n            this.socket.on('connect', () => {\n\n                this.socket.emit(\"join-individual\", { uid: data.uid, username: data.name }, () => {\n                    console.log(`user ${this.props.userPayload.user.email} joined`);\n                });\n\n                this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ content: res.message, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, res.message, userFriend._id);\n\n                });\n\n                this.socket.on(\"server-send-message-contain-image-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend)\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ contentPhoto: res.contentPhoto, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n                });\n            })\n        } catch (e) { console.log(e) }\n    }\n\n    showNewMessageComming = (from, message, userFriendId) => {\n        try {\n            document.querySelector(`#dcs_${from} p`).innerText = message;\n            this.orderItemDiscussionToTop(from);\n            let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n            this.showUnReadMessage(currentUnread, from);\n        } catch (e) { console.log(e) }\n    }\n    getMessageIndividualUser = (senderId, receiverId, token) => {\n        getMessageIndividualUser(senderId, receiverId, token)\n            .then(res => {\n                console.log(res)\n                if (!res.message) {\n                    let listMessage = [];\n                    let countUnreadMessage = 0;\n                    res.map(mes => {\n                        let objMessage = {};\n                        let isMe = mes.sender._id === senderId ? true : false;\n                        objMessage.isMe = isMe === true ? \"me\" : \"\";\n                        objMessage.content = mes.content;\n                        objMessage.date = mes.created;\n                        objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n                        objMessage.contentPhoto = mes.photo;\n                        if (mes.sender._id !== senderId && mes.isRead === false) countUnreadMessage += 1;\n                        listMessage.push(objMessage);\n                    });\n                    this.setState({ messages: this.state.messages.concat(listMessage) });\n                    this.showUnReadMessage(countUnreadMessage, receiverId);\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    orderItemDiscussionToTop = (toUid) => {\n        let el = document.querySelector(`#dcs_${toUid}`);\n        console.log(el);\n        el.style.order = this.ORDER_ITEM_DISCUSSION;\n        this.ORDER_ITEM_DISCUSSION -= 1;\n        el.scrollIntoView({behavior: \"smooth\"});\n    } \n    showUnReadMessage = (count, toUid) => {\n        try {\n            if (count > 0) {\n                document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n                document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    showTypingAction = (uTyping) => {\n        try {\n            document.getElementById(\"typing-action\").classList.add(\"on\");\n        } catch (e) { console.log(e) }\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            try {\n                this.handleSendMessageFromIndividualUser();\n            } catch (e) { console.log(e) }\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    render() {\n        let { userFriend, messages } = this.state;\n\n        let tabActive = document.querySelectorAll(\".item-discussions.active\");\n        Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n        // active tab\n        let idTabElement = `dcs_${userFriend._id}`;\n        let tabElement = document.getElementById(idTabElement);\n        if (tabElement) {\n            tabElement.classList.add(\"active\")\n        }\n        return (\n            <Template>\n                <div id=\"chat-area\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n                            <div className=\"status online\" />\n                            <div className=\"data\">\n                                <h5><a href=\"/users/\">{userFriend.fullname || userFriend.email}</a></h5>\n                                <span>Active now</span>\n                            </div>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-info\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a href=\"/\" className=\"voice\">Voice Call</a>\n                                    <a href=\"/\" className=\"voice\">Video Call</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                    <a href=\"/\" className=\"voice\">Delete Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"container\">\n                            {\n                                messages.map((msg, i) => {\n                                    return <ItemMessage\n                                        key={i}\n                                        isMe={msg.isMe}\n                                        content={msg.content}\n                                        contentPhoto={msg.contentPhoto}\n                                        photo={msg.photo}\n                                        date={moment(msg.date).fromNow() || \"just now\"}\n                                    />\n                                })\n                            }\n                            {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n                            <div id=\"end-of-message\"></div>\n                        </div>\n                        <div className=\"scroller\" />\n                    </div>\n                    <div className=\"bottom\">\n                        <form className=\"text-area\">\n                            <div id=\"typing-action\">\n                                someone is typing ...\n              </div>\n                            <textarea\n                                id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                onPaste={this.handlePasteToInput}\n                            />\n                            <div className=\"add-smiles\">\n                                <span title=\"add icon\" className=\"em em-blush\" />\n                            </div>\n\n                            <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                            <label className=\"label-input input-file\">\n                                <input\n                                    type=\"file\" className=\"d-none\"\n                                    onChange={this.previewPhoto}\n                                />\n                                <i className=\"ti-clip\" />\n                            </label>\n                        </form>\n                    </div>\n                    <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                        <img id=\"preview\" src=\"\" alt=\"\" />\n                    </div>\n                </div>\n                {/* <div id=\"call-area\">\n            </div> */}\n            </Template>\n        )\n\n    }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}