{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/component/Discussion.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport settingImage from '../imgs/867443.jpg';\nimport { isAuthenticated, getUsers } from '../controllers/UserController';\n\nclass Discussion extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n\n    try {\n      let uid = isAuthenticated().user._id;\n\n      getUsers(uid).then(res => {\n        this.setState({\n          users: res\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    let listUsers = this.state.users;\n    return React.createElement(\"div\", {\n      className: \"discussions\",\n      id: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Chats\"), React.createElement(\"div\", {\n      className: \"list-group chats\",\n      id: \"chats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, listUsers.map((user, index) => {\n      let username = user.fullname || user.email;\n      return React.createElement(Link, {\n        title: username,\n        style: {\n          order: index + 1\n        },\n        id: `dcs_${user._id}`,\n        tabIndex: index,\n        key: index,\n        to: `/chanels/@me/${user._id}`,\n        className: \"item-discussions single unread\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo || settingImage,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"status online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, username), React.createElement(\"div\", {\n        className: \"count-unread\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"new bg-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"0\")))));\n    }), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Discussion;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/component/Discussion.js"],"names":["React","Link","settingImage","isAuthenticated","getUsers","Discussion","Component","constructor","state","users","componentDidMount","console","log","props","uid","user","_id","then","res","setState","e","render","listUsers","map","index","username","fullname","email","order","photo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,+BAA1C;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;;AACA,QAAI;AACA,UAAIC,GAAG,GAAGX,eAAe,GAAGY,IAAlB,CAAuBC,GAAjC;;AACAZ,MAAAA,QAAQ,CAACU,GAAD,CAAR,CACCG,IADD,CACMC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAES;AAAT,SAAd;AACH,OAHD;AAIH,KAND,CAME,OAAOE,CAAP,EAAU;AAAET,MAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AAAgB;AACjC;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAKd,KAAL,CAAWC,KAA3B;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQa,SAAS,CAACC,GAAV,CAAc,CAACR,IAAD,EAAOS,KAAP,KAAiB;AAC3B,UAAIC,QAAQ,GAAGV,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACY,KAArC;AACA,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,QAAb;AAAuB,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAEJ,KAAK,GAAC;AAAd,SAA9B;AAAgD,QAAA,EAAE,EAAG,OAAMT,IAAI,CAACC,GAAI,EAApE;AAAuE,QAAA,QAAQ,EAAEQ,KAAjF;AAAwF,QAAA,GAAG,EAAEA,KAA7F;AAAoG,QAAA,EAAE,EAAG,gBAAeT,IAAI,CAACC,GAAI,EAAjI;AAAoI,QAAA,SAAS,EAAC,gCAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAED,IAAI,CAACc,KAAL,IAAc3B,YAA9C;AAA4D,QAAA,GAAG,EAAC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,EAGH;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKuB,QAAL,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5B,CADJ,CAFJ,CAHG,CAAP;AAaH,KAfD,CAFR,EAoBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CAFJ,CADJ;AA2BH;;AAjDoC;;AAoDzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport settingImage from '../imgs/867443.jpg';\nimport { isAuthenticated, getUsers } from '../controllers/UserController';\n\n\nclass Discussion extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            users: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        try {\n            let uid = isAuthenticated().user._id;\n            getUsers(uid)\n            .then(res => {\n                this.setState({ users: res });\n            })\n        } catch (e) { console.log(e) }\n    }\n\n    render() {\n        let listUsers = this.state.users;\n        \n        return (\n            <div className=\"discussions\" id=\"scroller\">\n                <h1>Chats</h1>\n                <div className=\"list-group chats\" id=\"chats\">\n                    {\n                        listUsers.map((user, index) => {\n                            let username = user.fullname || user.email;\n                            return <Link title={username} style={{order: index+1}} id={`dcs_${user._id}`} tabIndex={index} key={index} to={`/chanels/@me/${user._id}`} className=\"item-discussions single unread\">\n                                <img className=\"avatar-md\" src={user.photo || settingImage} alt=\"avt\" />\n                                <div className=\"status online\" />\n                                <div className=\"data\">\n                                    <h5>{username}</h5>\n                                    <div className=\"count-unread\">\n                                        <div className=\"new bg-red\"><span>0</span></div>\n                                    </div>\n                                    \n                                    {/* <span>Sun</span>\n                                    <p>How can i improve my chances?</p> */}\n                                </div>\n                            </Link>\n                        })\n                    }\n\n                    <div className=\"scroller\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Discussion;\n"]},"metadata":{},"sourceType":"module"}