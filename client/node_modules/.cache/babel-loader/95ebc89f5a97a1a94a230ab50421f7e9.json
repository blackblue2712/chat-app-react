{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js\";\nimport React from 'react';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.handleCreateConnectSocket = chanelId => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        this.socket.emit(\"join-chanel\", {\n          sid,\n          uid,\n          name,\n          photo,\n          chanelId\n        }, () => {\n          console.log(\"User has join this chanel\", chanelId);\n        });\n        this.socket.on(\"server-send-message-from-chanel\", res => {\n          console.log(\"server-send-message-from-chanel\", sid, res.data);\n          if (uid === res.data.sender._id) res.data.isMe = \"me\";\n          this.setState({\n            messageList: this.state.messageList.concat(res.data)\n          });\n        });\n        this.socket.on(\"list-connected-chanel-users\", users => {\n          this.setState({\n            onlineUsers: users\n          });\n        });\n      });\n    };\n\n    this.handleSendMessageFromChanel = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          chanelId\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          let uid = this.props.userPayload.user._id;\n          let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n          let photo = this.props.userPayload.user.photo;\n          let token = this.props.userPayload.token;\n          let photoBase64 = this.formData.get(\"photo\").toString(\"base64\") || undefined;\n          this.socket.emit(\"client-send-message-from-chanel\", {\n            chanelId,\n            content: textMessage.value,\n            photo: photoBase64,\n            sender: {\n              _id: uid,\n              name,\n              photo\n            }\n          }, () => {\n            textMessage.value = \"\";\n            document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n          });\n          this.formData.append(\"cid\", chanelId);\n          this.formData.append(\"uid\", uid);\n          this.formData.append(\"content\", textMessage.value);\n          postSaveChanelMessage(this.formData, token).then(res => {\n            console.log(res);\n            this.formData.delete(\"photo\");\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n            this.photoBase64 = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n      this.photoBase64 = \"\";\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n        this.photoBase64 = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        this.handleSendMessageFromChanel();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    };\n    this.formData = new FormData();\n    this.photoBase64 = \"\";\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      window.onload = () => {\n        this.scrollToBottom();\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        chanelId\n      } = this.props.match.params; // Get chanel info\n\n      getSingleChanel(chanelId).then(res => {\n        if (!res.message) {\n          this.setState({\n            chanel: res,\n            messageList: res.chanelMessages\n          });\n        }\n      }); // Socket realtime\n\n      this.handleCreateConnectSocket(chanelId);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {\n      chanelId\n    } = nextProps.match.params;\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    let photo = this.props.userPayload.user.photo;\n    this.socket.emit(\"join-chanel\", {\n      sid,\n      uid,\n      name,\n      photo,\n      chanelId\n    }, () => {\n      console.log(\"User has join this chanel\", chanelId);\n    });\n    getSingleChanel(chanelId).then(res => {\n      if (!res.message) {\n        this.setState({\n          chanel: res,\n          messageList: res.chanelMessages\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    let {\n      messageList,\n      onlineUsers,\n      chanel\n    } = this.state;\n    let uid = this.props.userPayload.user._id;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      tabPenel: \"-none\",\n      widthRight: \"calc(100% - 80px)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      className: \"chat-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/chanels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, chanel.chanelName))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, messageList.map((item, i) => {\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: item.sender._id === uid ? \"me\" : \"\",\n        content: item.content,\n        contentPhoto: item.photo,\n        photo: item.sender.photo,\n        date: moment(item.created).fromNow() || \"just now\",\n        name: item.sender.fullname || item.sender.email,\n        uid: item.sender._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromChanel,\n      style: {\n        height: '56x',\n        outline: \"none\"\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container tab-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chanel user-online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Member online\"), onlineUsers.map((user, i) => {\n      return React.createElement(\"a\", {\n        key: i,\n        href: \"#list-chat\",\n        className: \"item-discussions single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, user.name)));\n    }), React.createElement(\"a\", {\n      href: \"#list-chat\",\n      className: \"item-discussions single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: settingImage,\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"status offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Bob Frank\"))))))));\n  }\n\n}\n\nexport default ChatServerArea;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js"],"names":["React","ItemMessage","socketIOClient","Template","settingImage","getSingleChanel","postSaveChanelMessage","moment","require","ChatServerArea","Component","constructor","scrollToBottom","document","querySelector","scrollIntoView","behavior","e","handleCreateConnectSocket","chanelId","socket","process","env","REACT_APP_API_URL","transports","on","sid","id","uid","props","userPayload","user","_id","name","fullname","email","photo","emit","console","log","res","data","sender","isMe","setState","messageList","state","concat","users","onlineUsers","handleSendMessageFromChanel","window","event","preventDefault","match","params","textMessage","getElementById","value","trim","formData","get","src","classList","remove","token","photoBase64","toString","undefined","content","scrollBy","append","then","delete","catch","err","handlePasteToInput","items","clipboardData","originalEvent","blob","i","length","type","indexOf","getAsFile","reader","FileReader","onload","add","result","readAsDataURL","clearFormDataImage","previewPhoto","inputAvatar","target","files","checkUserEnter","keyCode","toggleDropdown","drdElement","addEventListener","chanel","FormData","componentDidMount","message","chanelMessages","componentWillReceiveProps","nextProps","componentDidUpdate","render","tabActive","querySelectorAll","Array","from","map","el","idTabElement","tabElement","chanelName","item","created","fromNow","height","outline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\n\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    }\n\n    this.formData = new FormData();\n    this.photoBase64 = \"\"\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      window.onload = () => {\n        this.scrollToBottom();\n      }\n      \n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter)\n      let { chanelId } = this.props.match.params;\n      // Get chanel info\n      getSingleChanel(chanelId)\n        .then(res => {\n          if (!res.message) {\n            this.setState({\n              chanel: res,\n              messageList: res.chanelMessages\n            });\n          }\n        });\n\n      // Socket realtime\n      this.handleCreateConnectSocket(chanelId);\n\n    } catch (e) { console.log(e) }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { chanelId } = nextProps.match.params;\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    let photo = this.props.userPayload.user.photo;\n    this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId }, () => {\n      console.log(\"User has join this chanel\", chanelId);\n    })\n    getSingleChanel(chanelId)\n    .then(res => {\n      if (!res.message) {\n        this.setState({\n          chanel: res,\n          messageList: res.chanelMessages\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    try {\n      document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n    } catch(e) { }\n  }\n\n  handleCreateConnectSocket = (chanelId) => {\n    this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n    // wait client connect\n    this.socket.on('connect', () => {\n\n      let sid = this.socket.id;\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n\n      this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId }, () => {\n        console.log(\"User has join this chanel\", chanelId);\n      })\n\n      this.socket.on(\"server-send-message-from-chanel\", (res) => {\n        console.log(\"server-send-message-from-chanel\", sid, res.data);\n        if (uid === res.data.sender._id) res.data.isMe = \"me\";\n        this.setState({ messageList: this.state.messageList.concat(res.data) });\n      });\n      this.socket.on(\"list-connected-chanel-users\", users => {\n        this.setState({ onlineUsers: users })\n      })\n\n    });\n  }\n\n  handleSendMessageFromChanel = () => {\n    try {\n      window.event.preventDefault();\n      let { chanelId } = this.props.match.params;\n      let textMessage = document.getElementById(\"text-message\");\n      if(textMessage.value.trim() || this.formData.get(\"photo\")) {\n        document.querySelector(\".preview-image #preview\").src = \"\";\n        document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        let token = this.props.userPayload.token;\n  \n        let photoBase64 = this.formData.get(\"photo\").toString(\"base64\") || undefined;\n        this.socket.emit(\"client-send-message-from-chanel\", { chanelId, content: textMessage.value, photo: photoBase64, sender: { _id: uid, name, photo } }, () => {\n          textMessage.value = \"\";\n          document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n        })\n  \n        this.formData.append(\"cid\", chanelId);\n        this.formData.append(\"uid\", uid);\n        this.formData.append(\"content\", textMessage.value);\n\n        postSaveChanelMessage(this.formData, token)\n          .then(res => {\n            console.log(res);\n            this.formData.delete(\"photo\");\n            \n          })\n          .catch(err => { console.log(err) })\n      }\n\n\n    } catch (e) { console.log(e) }\n  }\n\n  handlePasteToInput = (event) => {\n    try {\n      let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n      // find pasted image among pasted items\n      let blob = null;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf(\"image\") === 0) {\n          blob = items[i].getAsFile();\n        }\n      }\n      // load image if there is a pasted image\n      if (blob !== null) {\n        let reader = new FileReader();\n        reader.onload = function(event) {\n          document.querySelector('.preview-image').classList.add(\"on\");\n          document.querySelector(\".preview-image #preview\").src = this.result;\n          this.photoBase64 = this.result;\n        };\n        reader.readAsDataURL(blob);\n        this.formData.append(\"photo\", blob);\n      }\n    } catch (e) { console.log(e) }\n  }\n\n  clearFormDataImage = () => {\n    document.querySelector('.preview-image').classList.remove(\"on\");\n    document.querySelector('.preview-image #preview').src = \"\";\n    this.formData.delete(\"photo\");\n    this.photoBase64 = \"\";\n  }\n\n  previewPhoto = (event) => {\n    let reader = new FileReader();\n    document.querySelector('.preview-image').classList.add(\"on\");\n    let inputAvatar = document.querySelector('.preview-image #preview');\n    reader.onload = function () {\n      inputAvatar.src = reader.result;\n      this.photoBase64 = reader.result;\n    }\n    try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n    } catch(e) {\n        // do nothing\n    }\n}\n\n  checkUserEnter = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSendMessageFromChanel();\n    }\n  }\n\n  toggleDropdown = () => {\n    try {\n      let drdElement = document.querySelector(\"#chat-area .list-more\");\n      if (drdElement.classList.length > 2) {\n        drdElement.classList.remove(\"active\");\n      } else {\n        drdElement.classList.add(\"active\");\n        document.getElementById(\"root\").addEventListener(\"click\", () => {\n          drdElement.classList.remove(\"active\");\n        });\n      }\n    } catch (e) { }\n  }\n\n  render() {\n    let { messageList, onlineUsers, chanel } = this.state;\n    let uid = this.props.userPayload.user._id;\n\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n    // active tab\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n    if (tabElement) {\n      tabElement.classList.add(\"active\")\n    }\n    return (\n      <Template tabPenel=\"-none\" widthRight=\"calc(100% - 80px)\">\n        <div id=\"chat-area\" className=\"chat-server\">\n          <div className=\"top\">\n            <div className=\"inside\">\n\n              <div className=\"data\">\n                <h5><a href=\"/chanels\">{chanel.chanelName}</a></h5>\n              </div>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-headphone-alt\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-video-camera\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-info\" />\n              </button>\n\n              <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                  <i className=\"ti-gird\" />\n                </button>\n\n                <div className=\"dropdown-list list-more\">\n                  <a href=\"/\" className=\"voice\">Voice Call</a>\n                  <a href=\"/\" className=\"voice\">Video Call</a>\n                  <hr />\n                  <a href=\"/\" className=\"voice\">Clear History</a>\n                  <a href=\"/\" className=\"voice\">Block Contact</a>\n                  <a href=\"/\" className=\"voice\">Delete Contact</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <aside >\n            <div>\n              <div className=\"content\">\n                <div className=\"container\">\n                  {\n                    messageList.map((item, i) => {\n                      return (\n                        <ItemMessage\n                          key={i}\n                          isMe={item.sender._id === uid ? \"me\" : \"\"}\n                          content={item.content}\n                          contentPhoto={item.photo}\n                          photo={item.sender.photo}\n                          date={moment(item.created).fromNow() || \"just now\"}\n                          name={item.sender.fullname || item.sender.email}\n                          uid={item.sender._id}\n                        />\n                      )\n                    })\n                  }\n                  <div id=\"end-of-message\"></div>\n                </div>\n                <div className=\"scroller\" />\n              </div>\n              <div className=\"bottom\">\n                <form className=\"text-area\">\n                  <textarea\n                    id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                    onPaste={this.handlePasteToInput}\n                  />\n                  <div className=\"add-smiles\">\n                    <span title=\"add icon\" className=\"em em-blush\" />\n                  </div>\n                  <button onClick={this.handleSendMessageFromChanel} style={{ height: '56x', outline: \"none\" }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                  <label className=\"label-input input-file\">\n                    <input\n                      type=\"file\" className=\"d-none\"\n                      onChange={this.previewPhoto}\n                    />\n                    <i className=\"ti-clip\" />\n                  </label>\n                </form>\n              </div>\n              <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                <img id=\"preview\" src=\"\" alt=\"\"/>\n              </div>\n            </div>\n            <div className=\"container tab-panel\">\n              <div className=\"chanel user-online\">\n                <header>Member online</header>\n                {\n                  onlineUsers.map((user, i) => {\n                    return <a key={i} href=\"#list-chat\" className=\"item-discussions single\">\n                      <img className=\"avatar-md\" src={user.photo} alt=\"avt\" />\n                      <div className=\"data\">\n                        <h5>{user.name}</h5>\n                      </div>\n                    </a>\n                  })\n                }\n                <a href=\"#list-chat\" className=\"item-discussions single\">\n                  <img className=\"avatar-md\" src={settingImage} alt=\"avt\" />\n                  <div className=\"status offline\" />\n                  <div className=\"data\">\n                    <h5>Bob Frank</h5>\n\n                  </div>\n                </a>\n\n              </div>\n            </div>\n          </aside>\n\n        </div>\n      </Template>\n    )\n  }\n}\n\nexport default ChatServerArea;"]},"metadata":{},"sourceType":"module"}