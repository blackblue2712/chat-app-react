{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/VideoCallRequest.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport \"./VideoCall.css\";\n\nfunction VideoCall({\n  peerSrc,\n  localSrc,\n  config,\n  mediaDevice,\n  status,\n  endCall\n}) {\n  const peerVideo = useRef(null);\n  const localVideo = useRef(null);\n  const [video, setVideo] = useState(config.video);\n  const [audio, setAudio] = useState(config.audio);\n  useEffect(() => {\n    if (peerVideo.current && peerSrc) {\n      peerVideo.current.srcObject = peerSrc;\n    }\n\n    if (localVideo.current && localSrc) {\n      localVideo.current.srcObject = localSrc;\n    }\n  });\n  useEffect(() => {\n    if (mediaDevice) {\n      mediaDevice.toggle('Video', video);\n      mediaDevice.toggle('Audio', audio);\n    }\n  });\n  /**\n  * Turn on/off a media device\n  * @param {String} deviceType - Type of the device eg: Video, Audio\n  */\n\n  const toggleMediaDevice = deviceType => {\n    if (deviceType === 'video') {\n      setVideo(!video);\n      mediaDevice.toggle('Video');\n    }\n\n    if (deviceType === 'audio') {\n      setAudio(!audio);\n      mediaDevice.toggle('Audio');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: `call ${status}`,\n    id: \"call-request\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    id: \"call-local-video\",\n    ref: localVideo,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    id: \"call-remote-video\",\n    controls: true,\n    ref: peerVideo,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"participant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => toggleMediaDevice(\"audio\"),\n    className: `btn option ${audio}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-microphone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => toggleMediaDevice(\"video\"),\n    className: `btn option ${video}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-video-camera\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: () => endCall(true),\n    id: \"end-call-video\",\n    className: \"btn option call-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"ti-close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))))));\n}\n\nexport default VideoCall;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/VideoCallRequest.js"],"names":["React","useState","useRef","useEffect","VideoCall","peerSrc","localSrc","config","mediaDevice","status","endCall","peerVideo","localVideo","video","setVideo","audio","setAudio","current","srcObject","toggle","toggleMediaDevice","deviceType"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport \"./VideoCall.css\";\n\n\nfunction VideoCall({ peerSrc, localSrc, config, mediaDevice, status, endCall }) {\n    const peerVideo = useRef(null);\n    const localVideo = useRef(null);\n    const [video, setVideo] = useState(config.video);\n    const [audio, setAudio] = useState(config.audio);\n\n    useEffect(() => {\n        if (peerVideo.current && peerSrc) {\n            peerVideo.current.srcObject = peerSrc;\n        }\n        if (localVideo.current && localSrc) {\n            localVideo.current.srcObject = localSrc;   \n        }\n    });\n\n    useEffect(() => {\n        if (mediaDevice) {\n            mediaDevice.toggle('Video', video);\n            mediaDevice.toggle('Audio', audio);\n        }\n    });\n\n    /**\n   * Turn on/off a media device\n   * @param {String} deviceType - Type of the device eg: Video, Audio\n   */\n    const toggleMediaDevice = (deviceType) => {\n        if (deviceType === 'video') {\n        setVideo(!video);\n        mediaDevice.toggle('Video');\n        }\n        if (deviceType === 'audio') {\n        setAudio(!audio);\n        mediaDevice.toggle('Audio');\n        }\n    };\n    \n    return (\n        <div className={`call ${status}`} id=\"call-request\">\n            <video id=\"call-local-video\" ref={localVideo} autoPlay></video>\n            <video id=\"call-remote-video\" controls ref={peerVideo} autoPlay></video>\n            <div className=\"content\">\n                <div className=\"container\">\n                    <div className=\"inside\">\n                        <div className=\"panel\">\n                            <div className=\"participant\">\n                                {/* <img className=\"avatar-call\" src=\"https://res.cloudinary.com/dged6fqkf/image/upload/v1581173169/jbwkupd6wxap1udmgfmz.png\" alt=\"avatar\" />\n                                <span>Connecting to Sarah</span> */}\n                                {/* <div className=\"wave\">\n                                    <span className=\"dot\"></span>\n                                    <span className=\"dot\"></span>\n                                    <span className=\"dot\"></span>\n                                </div> */}\n                            </div>\n                            <div className=\"options\">\n                                <button onClick={() => toggleMediaDevice(\"audio\")} className={`btn option ${audio}`}><i className=\"ti-microphone\"></i></button>\n                                <button onClick={() => toggleMediaDevice(\"video\")} className={`btn option ${video}`}><i className=\"ti-video-camera\"></i></button>\n                                <button className=\"btn option\"><i className=\"ti-user\"></i></button>\n                                <button className=\"btn option\"><i className=\"ti-volume\"></i></button>\n                                <button className=\"btn option\"><i className=\"ti-comment\"></i></button>\n                            </div>\n                            <button onClick={() => endCall(true)} id=\"end-call-video\" className=\"btn option call-end\"><i className=\"ti-close\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default VideoCall;"]},"metadata":{},"sourceType":"module"}