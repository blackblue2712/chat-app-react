{"ast":null,"code":"import { searchYoutube } from '../controllers/ChanelController';\nimport YouTubePlayer from 'youtube-player';\n\nclass YoutubePlay {\n  constructor(player, onPlayQueue = [], startSeconds = 0) {\n    console.log(\"call YoutubePlay\");\n    this.onPlayQueue = onPlayQueue;\n    this.onPlayQueueName = [];\n    this.onPlaying = false;\n    this.player = player;\n    this.onPlayingSong = null;\n    this.startSeconds = startSeconds;\n    this.dataEvent = false;\n  }\n\n  searchYoutube(q) {\n    searchYoutube(q).then(res => {\n      let vid = res.videoId;\n      this.onPlayQueueName.push(res.title);\n      this.playVideo(vid);\n    });\n  }\n\n  playVideo(vid) {\n    if (vid) {\n      this.onPlayQueue.push(vid);\n    }\n\n    if (this.onPlaying === false) {\n      console.log(`this.onPlaying === false`, this.onPlaying);\n      this.onPlayingSong = this.onPlayQueue.shift();\n      this.onPlayQueueName.shift();\n      this.player.loadVideoById({\n        videoId: this.onPlayingSong,\n        startSeconds: this.startSeconds\n      });\n      this.player.playVideo();\n      this.onPlaying = true;\n    }\n\n    this.player.on('stateChange', event => {\n      if (event.data === 0) {\n        this.dataEvent = true;\n\n        if (this.dataEvent) {\n          console.log(\"ccc\");\n\n          if (this.onPlayQueue.length > 0 && this.onPlaying) {\n            this.onPlayingSong = this.onPlayQueue.shift();\n            this.onPlayQueueName.shift();\n            this.player.loadVideoById(this.onPlayingSong);\n            this.player.playVideo().then(() => {\n              this.onPlaying = true;\n              this.dataEvent = false;\n            });\n          } else {\n            this.onPlaying = false;\n          }\n        }\n      }\n    });\n  }\n\n  getPlayQueue() {\n    return this.onPlayQueue;\n  }\n\n  getIsPlaying() {\n    return this.onPlaying;\n  }\n\n  getCurrentTime() {\n    return this.player.getCurrentTime();\n  }\n\n  getCurrentSong() {\n    return this.onPlayingSong;\n  }\n\n  getPlayQueueName() {\n    return this.onPlayQueueName;\n  }\n\n}\n\nexport default YoutubePlay;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/YoutubePlay.js"],"names":["searchYoutube","YouTubePlayer","YoutubePlay","constructor","player","onPlayQueue","startSeconds","console","log","onPlayQueueName","onPlaying","onPlayingSong","dataEvent","q","then","res","vid","videoId","push","title","playVideo","shift","loadVideoById","on","event","data","length","getPlayQueue","getIsPlaying","getCurrentTime","getCurrentSong","getPlayQueueName"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iCAA9B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,MAAD,EAASC,WAAW,GAAG,EAAvB,EAA2BC,YAAY,GAAG,CAA1C,EAA6C;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKI,eAAL,GAAuB,EAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKN,MAAL,GAAcA,MAAd;AACA,SAAKO,aAAL,GAAqB,IAArB;AACA,SAAKL,YAAL,GAAoBA,YAApB;AACA,SAAKM,SAAL,GAAiB,KAAjB;AACH;;AAEDZ,EAAAA,aAAa,CAACa,CAAD,EAAI;AACbb,IAAAA,aAAa,CAACa,CAAD,CAAb,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIC,GAAG,GAAGD,GAAG,CAACE,OAAd;AACA,WAAKR,eAAL,CAAqBS,IAArB,CAA0BH,GAAG,CAACI,KAA9B;AACA,WAAKC,SAAL,CAAeJ,GAAf;AACH,KALL;AAOH;;AAEDI,EAAAA,SAAS,CAACJ,GAAD,EAAM;AACX,QAAIA,GAAJ,EAAS;AACL,WAAKX,WAAL,CAAiBa,IAAjB,CAAsBF,GAAtB;AACH;;AAED,QAAI,KAAKN,SAAL,KAAmB,KAAvB,EAA8B;AAC1BH,MAAAA,OAAO,CAACC,GAAR,CAAa,0BAAb,EAAwC,KAAKE,SAA7C;AACA,WAAKC,aAAL,GAAqB,KAAKN,WAAL,CAAiBgB,KAAjB,EAArB;AACA,WAAKZ,eAAL,CAAqBY,KAArB;AACA,WAAKjB,MAAL,CAAYkB,aAAZ,CAA0B;AACtBL,QAAAA,OAAO,EAAE,KAAKN,aADQ;AAEtBL,QAAAA,YAAY,EAAE,KAAKA;AAFG,OAA1B;AAIA,WAAKF,MAAL,CAAYgB,SAAZ;AACA,WAAKV,SAAL,GAAiB,IAAjB;AACH;;AAGD,SAAKN,MAAL,CAAYmB,EAAZ,CAAe,aAAf,EAA+BC,KAAD,IAAW;AACrC,UAAIA,KAAK,CAACC,IAAN,KAAe,CAAnB,EAAsB;AAClB,aAAKb,SAAL,GAAiB,IAAjB;;AACA,YAAG,KAAKA,SAAR,EAAmB;AACfL,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,cAAI,KAAKH,WAAL,CAAiBqB,MAAjB,GAA0B,CAA1B,IAA+B,KAAKhB,SAAxC,EAAmD;AAC/C,iBAAKC,aAAL,GAAqB,KAAKN,WAAL,CAAiBgB,KAAjB,EAArB;AACA,iBAAKZ,eAAL,CAAqBY,KAArB;AACA,iBAAKjB,MAAL,CAAYkB,aAAZ,CAA0B,KAAKX,aAA/B;AACA,iBAAKP,MAAL,CAAYgB,SAAZ,GAAwBN,IAAxB,CAA8B,MAAM;AAChC,mBAAKJ,SAAL,GAAiB,IAAjB;AACA,mBAAKE,SAAL,GAAiB,KAAjB;AACH,aAHD;AAIH,WARD,MAQO;AACH,iBAAKF,SAAL,GAAiB,KAAjB;AACH;AACJ;AACJ;AACJ,KAlBD;AAmBH;;AAEDiB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKtB,WAAZ;AACH;;AAEDuB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKlB,SAAZ;AACH;;AAEDmB,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKzB,MAAL,CAAYyB,cAAZ,EAAP;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKnB,aAAZ;AACH;;AAEDoB,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKtB,eAAZ;AACH;;AA/Ea;;AAkFlB,eAAeP,WAAf","sourcesContent":["import { searchYoutube } from '../controllers/ChanelController';\nimport YouTubePlayer from 'youtube-player';\n\nclass YoutubePlay {\n    constructor(player, onPlayQueue = [], startSeconds = 0) {\n        console.log(\"call YoutubePlay\")\n        this.onPlayQueue = onPlayQueue;\n        this.onPlayQueueName = [];\n        this.onPlaying = false;\n        this.player = player;\n        this.onPlayingSong = null;\n        this.startSeconds = startSeconds;\n        this.dataEvent = false;\n    }\n\n    searchYoutube(q) {\n        searchYoutube(q)\n            .then(res => {\n                let vid = res.videoId;\n                this.onPlayQueueName.push(res.title);\n                this.playVideo(vid)\n            })\n\n    }\n\n    playVideo(vid) {\n        if (vid) {\n            this.onPlayQueue.push(vid);\n        }\n\n        if (this.onPlaying === false) {\n            console.log(`this.onPlaying === false`, this.onPlaying)\n            this.onPlayingSong = this.onPlayQueue.shift();\n            this.onPlayQueueName.shift();\n            this.player.loadVideoById({\n                videoId: this.onPlayingSong,\n                startSeconds: this.startSeconds\n            });\n            this.player.playVideo();\n            this.onPlaying = true;\n        }\n\n\n        this.player.on('stateChange', (event) => {\n            if (event.data === 0) {\n                this.dataEvent = true;\n                if(this.dataEvent) {\n                    console.log(\"ccc\")\n                    if (this.onPlayQueue.length > 0 && this.onPlaying) {\n                        this.onPlayingSong = this.onPlayQueue.shift();\n                        this.onPlayQueueName.shift();\n                        this.player.loadVideoById(this.onPlayingSong);\n                        this.player.playVideo().then( () => {\n                            this.onPlaying = true;\n                            this.dataEvent = false;\n                        });\n                    } else {\n                        this.onPlaying = false;\n                    }\n                }\n            }\n        });\n    }\n    \n    getPlayQueue() {\n        return this.onPlayQueue;\n    }\n\n    getIsPlaying() {\n        return this.onPlaying;\n    }\n\n    getCurrentTime() {\n        return this.player.getCurrentTime();\n    }\n\n    getCurrentSong() {\n        return this.onPlayingSong;\n    }\n\n    getPlayQueueName() {\n        return this.onPlayQueueName;\n    }\n}\n\nexport default YoutubePlay;\n"]},"metadata":{},"sourceType":"module"}