{"ast":null,"code":"import { searchYoutube } from '../controllers/ChanelController';\n\nclass YoutubePlay {\n  constructor(player, onPlayQueue = [], startSeconds = 0) {\n    this.onPlayQueue = onPlayQueue;\n    this.onPlayQueueName = [];\n    this.onPlaying = false;\n    this.player = player;\n    this.onPlayingSong = null;\n    this.startSeconds = startSeconds;\n  }\n\n  searchYoutube(q) {\n    searchYoutube(q).then(res => {\n      console.log(res);\n      let vid = res.videoId;\n      this.onPlayQueueName.push(res.title);\n      this.playVideo(vid);\n    });\n  }\n\n  playVideo(vid) {\n    if (vid) {\n      this.onPlayQueue.push(vid);\n    }\n\n    if (this.onPlaying === false) {\n      console.log(\"this.onPlaying === false\");\n      this.onPlayingSong = this.onPlayQueue.shift();\n      this.onPlayQueueName.shift();\n      this.player.loadVideoById({\n        videoId: this.onPlayingSong,\n        startSeconds: this.startSeconds\n      });\n      this.player.playVideo();\n      this.onPlaying = true;\n    }\n\n    this.player.on('stateChange', event => {\n      if (event.data === 0) {\n        var node = document.createElement(\"div\"); // Create a <li> node\n\n        node.id = \"video-player\";\n        document.getElementById(\"root\").appendChild(node);\n        this.onPlaying = false;\n\n        if (this.onPlayQueue.length > 0) {\n          this.onPlaying = true;\n          this.onPlayingSong = this.onPlayQueue.shift();\n          this.onPlayQueueName.shift();\n          this.player.loadVideoById(this.onPlayingSong);\n          this.player.playVideo();\n        }\n      }\n    });\n    console.log(this.player);\n  }\n\n  getPlayQueue() {\n    return this.onPlayQueue;\n  }\n\n  getIsPlaying() {\n    return this.onPlaying;\n  }\n\n  getCurrentTime() {\n    return this.player.getCurrentTime();\n  }\n\n  getCurrentSong() {\n    return this.onPlayingSong;\n  }\n\n  getPlayQueueName() {\n    return this.onPlayQueueName;\n  }\n\n}\n\nexport default YoutubePlay;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/YoutubePlay.js"],"names":["searchYoutube","YoutubePlay","constructor","player","onPlayQueue","startSeconds","onPlayQueueName","onPlaying","onPlayingSong","q","then","res","console","log","vid","videoId","push","title","playVideo","shift","loadVideoById","on","event","data","node","document","createElement","id","getElementById","appendChild","length","getPlayQueue","getIsPlaying","getCurrentTime","getCurrentSong","getPlayQueueName"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iCAA9B;;AAGA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,MAAD,EAASC,WAAW,GAAG,EAAvB,EAA2BC,YAAY,GAAG,CAA1C,EAA6C;AACpD,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKE,eAAL,GAAuB,EAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKK,aAAL,GAAqB,IAArB;AACA,SAAKH,YAAL,GAAoBA,YAApB;AACH;;AAEDL,EAAAA,aAAa,CAACS,CAAD,EAAI;AACbT,IAAAA,aAAa,CAACS,CAAD,CAAb,CACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAIG,GAAG,GAAGH,GAAG,CAACI,OAAd;AACA,WAAKT,eAAL,CAAqBU,IAArB,CAA0BL,GAAG,CAACM,KAA9B;AACA,WAAKC,SAAL,CAAeJ,GAAf;AACH,KANL;AAQH;;AAEDI,EAAAA,SAAS,CAACJ,GAAD,EAAM;AACX,QAAIA,GAAJ,EAAS;AACL,WAAKV,WAAL,CAAiBY,IAAjB,CAAsBF,GAAtB;AACH;;AAED,QAAI,KAAKP,SAAL,KAAmB,KAAvB,EAA8B;AAC1BK,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAKL,aAAL,GAAqB,KAAKJ,WAAL,CAAiBe,KAAjB,EAArB;AACA,WAAKb,eAAL,CAAqBa,KAArB;AACA,WAAKhB,MAAL,CAAYiB,aAAZ,CAA0B;AACtBL,QAAAA,OAAO,EAAE,KAAKP,aADQ;AAEtBH,QAAAA,YAAY,EAAE,KAAKA;AAFG,OAA1B;AAIA,WAAKF,MAAL,CAAYe,SAAZ;AACA,WAAKX,SAAL,GAAiB,IAAjB;AACH;;AAGD,SAAKJ,MAAL,CAAYkB,EAAZ,CAAe,aAAf,EAA+BC,KAAD,IAAW;AACrC,UAAIA,KAAK,CAACC,IAAN,KAAe,CAAnB,EAAsB;AAClB,YAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX,CADkB,CACwC;;AAC1DF,QAAAA,IAAI,CAACG,EAAL,GAAU,cAAV;AACAF,QAAAA,QAAQ,CAACG,cAAT,CAAwB,MAAxB,EAAgCC,WAAhC,CAA4CL,IAA5C;AACA,aAAKjB,SAAL,GAAiB,KAAjB;;AACA,YAAI,KAAKH,WAAL,CAAiB0B,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,eAAKvB,SAAL,GAAiB,IAAjB;AACA,eAAKC,aAAL,GAAqB,KAAKJ,WAAL,CAAiBe,KAAjB,EAArB;AACA,eAAKb,eAAL,CAAqBa,KAArB;AACA,eAAKhB,MAAL,CAAYiB,aAAZ,CAA0B,KAAKZ,aAA/B;AACA,eAAKL,MAAL,CAAYe,SAAZ;AACH;AACJ;AACJ,KAdD;AAeAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,MAAjB;AACH;;AAED4B,EAAAA,YAAY,GAAG;AACX,WAAO,KAAK3B,WAAZ;AACH;;AAED4B,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKzB,SAAZ;AACH;;AAED0B,EAAAA,cAAc,GAAG;AACb,WAAO,KAAK9B,MAAL,CAAY8B,cAAZ,EAAP;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAK1B,aAAZ;AACH;;AAED2B,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAK7B,eAAZ;AACH;;AA3Ea;;AA8ElB,eAAeL,WAAf","sourcesContent":["import { searchYoutube } from '../controllers/ChanelController';\n\n\nclass YoutubePlay {\n    constructor(player, onPlayQueue = [], startSeconds = 0) {\n        this.onPlayQueue = onPlayQueue;\n        this.onPlayQueueName = [];\n        this.onPlaying = false;\n        this.player = player;\n        this.onPlayingSong = null;\n        this.startSeconds = startSeconds;\n    }\n\n    searchYoutube(q) {\n        searchYoutube(q)\n            .then(res => {\n                console.log(res)\n                let vid = res.videoId;\n                this.onPlayQueueName.push(res.title);\n                this.playVideo(vid)\n            })\n\n    }\n\n    playVideo(vid) {\n        if (vid) {\n            this.onPlayQueue.push(vid);\n        }\n\n        if (this.onPlaying === false) {\n            console.log(\"this.onPlaying === false\")\n            this.onPlayingSong = this.onPlayQueue.shift();\n            this.onPlayQueueName.shift();\n            this.player.loadVideoById({\n                videoId: this.onPlayingSong,\n                startSeconds: this.startSeconds\n            });\n            this.player.playVideo();\n            this.onPlaying = true;\n        }\n\n\n        this.player.on('stateChange', (event) => {\n            if (event.data === 0) {\n                var node = document.createElement(\"div\");                 // Create a <li> node\n                node.id = \"video-player\";\n                document.getElementById(\"root\").appendChild(node);\n                this.onPlaying = false;\n                if (this.onPlayQueue.length > 0) {\n                    this.onPlaying = true;\n                    this.onPlayingSong = this.onPlayQueue.shift();\n                    this.onPlayQueueName.shift();\n                    this.player.loadVideoById(this.onPlayingSong);\n                    this.player.playVideo();\n                }\n            }\n        });\n        console.log(this.player);\n    }\n    \n    getPlayQueue() {\n        return this.onPlayQueue;\n    }\n\n    getIsPlaying() {\n        return this.onPlaying;\n    }\n\n    getCurrentTime() {\n        return this.player.getCurrentTime();\n    }\n\n    getCurrentSong() {\n        return this.onPlayingSong;\n    }\n\n    getPlayQueueName() {\n        return this.onPlayQueueName;\n    }\n}\n\nexport default YoutubePlay;\n"]},"metadata":{},"sourceType":"module"}