{"ast":null,"code":"import { searchYoutube } from '../controllers/ChanelController';\n\nclass YoutubePlay {\n  constructor(player) {\n    this.onPlayQueue = [];\n    this.onPlaying = false;\n    this.player = player;\n  }\n\n  searchYoutube(q) {\n    searchYoutube(q).then(res => {\n      let vid = res.videoId;\n\n      if (vid) {\n        this.onPlayQueue.push(vid);\n      }\n\n      if (!this.onPlaying) {\n        this.player.loadVideoById({\n          videoId: this.onPlayQueue.shift(),\n          startSeconds: 30\n        });\n        this.player.playVideo();\n        this.onPlaying = true;\n      }\n\n      this.player.on('stateChange', event => {\n        if (event.data === 0) {\n          if (this.onPlayQueue.length > 0) {\n            this.onPlaying = true;\n            this.player.loadVideoById(this.onPlayQueue.shift());\n            this.player.playVideo();\n          } else {\n            this.onPlaying = false;\n          }\n        }\n      });\n    });\n    setTimeout(() => {\n      console.log(this.player.getCurrentTime());\n    }, 3000);\n  }\n\n  getPlayQueue() {\n    return this.onPlayQueue;\n  }\n\n  getIsPlaying() {\n    return this.onPlaying;\n  }\n\n  getCurrentTime() {\n    return this.player.getCurrentTime().then(time => time);\n  }\n\n}\n\nexport default YoutubePlay;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/YoutubePlay.js"],"names":["searchYoutube","YoutubePlay","constructor","player","onPlayQueue","onPlaying","q","then","res","vid","videoId","push","loadVideoById","shift","startSeconds","playVideo","on","event","data","length","setTimeout","console","log","getCurrentTime","getPlayQueue","getIsPlaying","time"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iCAA9B;;AAGA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACH;;AAEDH,EAAAA,aAAa,CAACM,CAAD,EAAI;AACbN,IAAAA,aAAa,CAACM,CAAD,CAAb,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIC,GAAG,GAAGD,GAAG,CAACE,OAAd;;AACA,UAAID,GAAJ,EAAS;AACL,aAAKL,WAAL,CAAiBO,IAAjB,CAAsBF,GAAtB;AACH;;AAED,UAAI,CAAC,KAAKJ,SAAV,EAAqB;AACjB,aAAKF,MAAL,CAAYS,aAAZ,CAA0B;AACtBF,UAAAA,OAAO,EAAE,KAAKN,WAAL,CAAiBS,KAAjB,EADa;AAEtBC,UAAAA,YAAY,EAAE;AAFQ,SAA1B;AAIA,aAAKX,MAAL,CAAYY,SAAZ;AACA,aAAKV,SAAL,GAAiB,IAAjB;AACH;;AAGD,WAAKF,MAAL,CAAYa,EAAZ,CAAe,aAAf,EAA+BC,KAAD,IAAW;AACrC,YAAIA,KAAK,CAACC,IAAN,KAAe,CAAnB,EAAsB;AAClB,cAAI,KAAKd,WAAL,CAAiBe,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,iBAAKd,SAAL,GAAiB,IAAjB;AACA,iBAAKF,MAAL,CAAYS,aAAZ,CAA0B,KAAKR,WAAL,CAAiBS,KAAjB,EAA1B;AACA,iBAAKV,MAAL,CAAYY,SAAZ;AACH,WAJD,MAIO;AACH,iBAAKV,SAAL,GAAiB,KAAjB;AACH;AACJ;AACJ,OAVD;AAWH,KA5BL;AA6BIe,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,MAAL,CAAYoB,cAAZ,EAAZ;AACH,KAFS,EAER,IAFQ,CAAV;AAIP;;AAEDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKpB,WAAZ;AACH;;AAEDqB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKpB,SAAZ;AACH;;AAEDkB,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKpB,MAAL,CAAYoB,cAAZ,GAA6BhB,IAA7B,CAAmCmB,IAAI,IAAIA,IAA3C,CAAP;AACH;;AArDa;;AAwDlB,eAAezB,WAAf","sourcesContent":["import { searchYoutube } from '../controllers/ChanelController';\n\n\nclass YoutubePlay {\n    constructor(player) {\n        this.onPlayQueue = [];\n        this.onPlaying = false\n        this.player = player;\n    }\n\n    searchYoutube(q) {\n        searchYoutube(q)\n            .then(res => {\n                let vid = res.videoId;\n                if (vid) {\n                    this.onPlayQueue.push(vid);\n                }\n\n                if (!this.onPlaying) {\n                    this.player.loadVideoById({\n                        videoId: this.onPlayQueue.shift(),\n                        startSeconds: 30\n                    });\n                    this.player.playVideo();\n                    this.onPlaying = true;\n                }\n\n\n                this.player.on('stateChange', (event) => {\n                    if (event.data === 0) {\n                        if (this.onPlayQueue.length > 0) {\n                            this.onPlaying = true;\n                            this.player.loadVideoById(this.onPlayQueue.shift(), );\n                            this.player.playVideo();\n                        } else {\n                            this.onPlaying = false;\n                        }\n                    }\n                });\n            })\n            setTimeout(() => {\n                console.log(this.player.getCurrentTime())\n            },3000)\n\n    }\n    \n    getPlayQueue() {\n        return this.onPlayQueue;\n    }\n\n    getIsPlaying() {\n        return this.onPlaying;\n    }\n\n    getCurrentTime() {\n        return this.player.getCurrentTime().then( time => time);\n    }\n}\n\nexport default YoutubePlay;\n"]},"metadata":{},"sourceType":"module"}