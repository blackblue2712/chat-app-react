{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js\";\nimport React from 'react';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport \"./chatServerArea.css\";\nimport { getSingleChanel, getChanelMessages, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n\n    this.getSingleChanel = () => {\n      if (this.chanelId !== \"anonymous\") {\n        getSingleChanel(this.chanelId).then(res => {\n          if (!res.message) {\n            this.setState({\n              chanel: res\n            });\n          }\n        });\n      } else {\n        this.setState({\n          chanel: {\n            chanelName: \"Anonymus chanel\"\n          }\n        });\n      }\n    };\n\n    this.getChanelMessages = cb => {\n      let token = this.props.userPayload.token;\n      getChanelMessages({\n        cid: this.chanelId,\n        limit: this.LIMIT_MESSAGES,\n        skip: this.SKIP_MESSAGES\n      }, token).then(res => {\n        console.log(\"getChanelMessages\", res);\n\n        if (!res.message) {\n          this.setState({\n            messageList: res.concat(this.state.messageList)\n          });\n          cb();\n          this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.onScrollGetMoreMessages = event => {\n      try {\n        let container = document.querySelector(\"#chat-area .content .container\");\n        console.log(container.scrollTop);\n\n        if (container.scrollTop === 0) {\n          this.getChanelMessages(() => {\n            this.scrollToTop();\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.scrollToTop = () => {\n      try {\n        console.log(\"call\", document.querySelector(\"#start-of-message\"));\n        document.querySelector(\"#start-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.handleCreateConnectSocket = () => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        this.socket.emit(\"join-chanel\", {\n          sid,\n          uid,\n          name,\n          photo,\n          chanelId: this.chanelId\n        }, () => {\n          console.log(\"User has join this chanel\", this.chanelId);\n        });\n        this.socket.on(\"server-send-message-from-chanel\", res => {\n          // console.log(\"server-send-message-from-chanel\", sid, res.data);\n          if (this.chanelId === \"anonymous\") res.data.sender.photo = \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\";\n          if (uid === res.data.sender._id) res.data.isMe = \"me\";\n          this.setState({\n            messageList: this.state.messageList.concat(res.data)\n          });\n        });\n        this.socket.on(\"server-send-message-contain-image-from-chanel\", res => {\n          console.log(\"server-send-message-contain-image-from-chanel\", sid, res.data);\n\n          if (uid !== res.data.sender._id) {\n            this.setState({\n              messageList: this.state.messageList.concat(res.data)\n            });\n          }\n        });\n        this.socket.on(\"list-connected-chanel-users\", users => {\n          this.setState({\n            onlineUsers: users\n          });\n        });\n      });\n    };\n\n    this.handleSendMessageFromChanel = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          chanelId\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          let uid = this.props.userPayload.user._id;\n          let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n          let photo = this.props.userPayload.user.photo;\n          let token = this.props.userPayload.token; // emit event\n\n          let data = {};\n          data.sender = {};\n          data.chanelId = chanelId;\n          data.content = textMessage.value;\n          data.sender._id = uid;\n          data.sender.photo = photo;\n          data.sender.name = name;\n          this.socket.emit(\"client-send-message-from-chanel\", data, () => {\n            textMessage.value = \"\";\n            document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n          });\n\n          if (chanelId !== \"anonymous\") {\n            this.formData.append(\"cid\", chanelId);\n            this.formData.append(\"uid\", uid);\n            this.formData.append(\"content\", textMessage.value);\n            postSaveChanelMessage(this.formData, token).then(res => {\n              console.log(res);\n              this.formData.delete(\"photo\");\n\n              if (res && res.urlContainImage) {\n                let dataImage = {\n                  sender: {\n                    _id: uid,\n                    name,\n                    photo: photo\n                  },\n                  photo: res.urlContainImage\n                };\n                this.setState({\n                  messageList: this.state.messageList.concat(dataImage)\n                });\n                dataImage.chanelId = chanelId;\n                this.socket.emit(\"client-send-message-contain-image-from-chanel\", dataImage, () => {\n                  console.log(\"Server-send-message-contain-image-from-chanel\");\n                });\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        this.handleSendMessageFromChanel();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    };\n    this.formData = new FormData();\n    this.LIMIT_MESSAGES = 10;\n    this.SKIP_MESSAGES = 0;\n  }\n\n  componentDidMount() {\n    try {\n      this.chanelId = this.props.match.params.chanelId; // Scroll content message to bottom\n\n      window.onload = () => {\n        this.scrollToBottom();\n        document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        chanelId\n      } = this.props.match.params; // Get chanel info\n\n      this.getSingleChanel();\n      this.getChanelMessages(() => {}); // Socket realtime\n\n      this.handleCreateConnectSocket();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.chanelId = nextProps.match.params.chanelId;\n    this.SKIP_MESSAGES = 0;\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    let photo = this.props.userPayload.user.photo;\n    this.socket.emit(\"join-chanel\", {\n      sid,\n      uid,\n      name,\n      photo,\n      chanelId: this.chanelId\n    }, () => {\n      console.log(\"User has join this chanel\", this.chanelId);\n    });\n    this.setState({\n      messageList: []\n    });\n    this.getSingleChanel();\n    this.getChanelMessages(() => {});\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    let {\n      messageList,\n      onlineUsers,\n      chanel\n    } = this.state;\n    let uid = this.props.userPayload.user._id;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${this.chanelId}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    let offsetStartOfChat = this.SKIP_MESSAGES - this.LIMIT_MESSAGES;\n    return React.createElement(Template, {\n      tabPenel: \"-none\",\n      widthRight: \"calc(100% - 80px)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      className: \"chat-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/chanels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, chanel.chanelName))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, messageList.map((item, i) => {\n      console.log(i, this.SKIP_MESSAGES);\n\n      if (i === offsetStartOfChat) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          id: \"start-of-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }), React.createElement(ItemMessage, {\n          key: i,\n          isMe: item.sender._id === uid ? \"me\" : \"\",\n          content: item.content,\n          contentPhoto: item.photo,\n          photo: item.sender.photo,\n          date: moment(item.created).fromNow() || \"just now\",\n          name: item.sender.fullname || item.sender.email,\n          uid: item.sender._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: item.sender._id === uid ? \"me\" : \"\",\n        content: item.content,\n        contentPhoto: item.photo,\n        photo: item.sender.photo,\n        date: moment(item.created).fromNow() || \"just now\",\n        name: item.sender.fullname || item.sender.email,\n        uid: item.sender._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromChanel,\n      style: {\n        height: '56x',\n        outline: \"none\"\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      accept: \"image/*\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container tab-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chanel user-online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Member online\"), onlineUsers.map((user, i) => {\n      return React.createElement(\"a\", {\n        key: i,\n        href: \"#list-chat\",\n        className: \"item-discussions single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, user.name)));\n    }), React.createElement(\"a\", {\n      href: \"#list-chat\",\n      className: \"item-discussions single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\",\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"status offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Bob Frank\"))))))));\n  }\n\n}\n\nexport default ChatServerArea;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js"],"names":["React","ItemMessage","socketIOClient","Template","getSingleChanel","getChanelMessages","postSaveChanelMessage","moment","require","ChatServerArea","Component","constructor","chanelId","then","res","message","setState","chanel","chanelName","cb","token","props","userPayload","cid","limit","LIMIT_MESSAGES","skip","SKIP_MESSAGES","console","log","messageList","concat","state","catch","err","onScrollGetMoreMessages","event","container","document","querySelector","scrollTop","scrollToTop","scrollToBottom","scrollIntoView","behavior","e","handleCreateConnectSocket","socket","process","env","REACT_APP_API_URL","transports","on","sid","id","uid","user","_id","name","fullname","email","photo","emit","data","sender","isMe","users","onlineUsers","handleSendMessageFromChanel","window","preventDefault","match","params","textMessage","getElementById","value","trim","formData","get","src","classList","remove","content","scrollBy","append","delete","urlContainImage","dataImage","handlePasteToInput","items","clipboardData","originalEvent","blob","i","length","type","indexOf","getAsFile","reader","FileReader","onload","add","result","readAsDataURL","clearFormDataImage","previewPhoto","inputAvatar","target","files","checkUserEnter","keyCode","toggleDropdown","drdElement","addEventListener","FormData","componentDidMount","componentWillReceiveProps","nextProps","componentDidUpdate","render","tabActive","querySelectorAll","Array","from","map","el","idTabElement","tabElement","offsetStartOfChat","item","created","fromNow","height","outline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport \"./chatServerArea.css\";\n\nimport { getSingleChanel, getChanelMessages, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            messageList: [],\n            onlineUsers: [],\n            chanel: {}\n        }\n\n        this.formData = new FormData();\n        this.LIMIT_MESSAGES = 10;\n        this.SKIP_MESSAGES = 0;\n    }\n\n    componentDidMount() {\n        try {\n            this.chanelId = this.props.match.params.chanelId;\n            // Scroll content message to bottom\n            window.onload = () => {\n                this.scrollToBottom();\n                document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n            }\n\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter)\n            let { chanelId } = this.props.match.params;\n            // Get chanel info\n            this.getSingleChanel();\n            this.getChanelMessages(() => {});\n\n            // Socket realtime\n            this.handleCreateConnectSocket();\n\n        } catch (e) { console.log(e) }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.chanelId = nextProps.match.params.chanelId;\n        this.SKIP_MESSAGES = 0;\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId: this.chanelId }, () => {\n            console.log(\"User has join this chanel\", this.chanelId);\n        })\n        this.setState({messageList: []});\n        this.getSingleChanel();\n        this.getChanelMessages(() => {});\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    getSingleChanel = () => {\n        if(this.chanelId !== \"anonymous\") {\n            getSingleChanel(this.chanelId)\n                .then(res => {\n                    if (!res.message) {\n                        this.setState({\n                            chanel: res,\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                chanel: {chanelName: \"Anonymus chanel\"}\n            })\n        }\n    }\n    getChanelMessages = (cb) => {\n        let token = this.props.userPayload.token;\n\n        getChanelMessages({cid: this.chanelId, limit: this.LIMIT_MESSAGES, skip: this.SKIP_MESSAGES}, token)\n        .then( res => {\n            console.log(\"getChanelMessages\", res);\n            if(!res.message) {\n                this.setState( {messageList: res.concat(this.state.messageList)});\n                cb();\n                this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n            }\n        })\n        .catch(err => console.log(err));\n    }\n    onScrollGetMoreMessages = (event) => {\n        try {\n            let container = document.querySelector(\"#chat-area .content .container\");\n            console.log(container.scrollTop);\n            if(container.scrollTop === 0) {\n                this.getChanelMessages(() => {\n                    this.scrollToTop();\n                });\n            }\n        } catch(err) { console.log(err) }\n    }\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n    scrollToTop = () => {\n        try {\n            console.log(\"call\", document.querySelector(\"#start-of-message\"))\n            document.querySelector(\"#start-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    handleCreateConnectSocket = () => {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n        // wait client connect\n        this.socket.on('connect', () => {\n\n            let sid = this.socket.id;\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            let photo = this.props.userPayload.user.photo;\n\n            this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId: this.chanelId }, () => {\n                console.log(\"User has join this chanel\", this.chanelId);\n            })\n\n            this.socket.on(\"server-send-message-from-chanel\", (res) => {\n                // console.log(\"server-send-message-from-chanel\", sid, res.data);\n                if(this.chanelId === \"anonymous\") res.data.sender.photo = \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\";\n                if (uid === res.data.sender._id) res.data.isMe = \"me\";\n                this.setState({ messageList: this.state.messageList.concat(res.data) });\n            });\n            this.socket.on(\"server-send-message-contain-image-from-chanel\", (res) => {\n                console.log(\"server-send-message-contain-image-from-chanel\", sid, res.data);\n                if (uid !== res.data.sender._id) {\n                    this.setState({ messageList: this.state.messageList.concat(res.data) });\n                }\n            });\n\n            this.socket.on(\"list-connected-chanel-users\", users => {\n                this.setState({ onlineUsers: users })\n            })\n\n        });\n    }\n\n    handleSendMessageFromChanel = () => {\n        try {\n            window.event.preventDefault();\n            let { chanelId } = this.props.match.params;\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n                document.querySelector(\".preview-image #preview\").src = \"\";\n                document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                let uid = this.props.userPayload.user._id;\n                let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                let photo = this.props.userPayload.user.photo;\n                let token = this.props.userPayload.token;\n\n                // emit event\n                let data = {};\n                data.sender = {};\n                data.chanelId = chanelId;\n                data.content = textMessage.value;\n                data.sender._id = uid;\n                data.sender.photo = photo;\n                data.sender.name = name;\n\n                this.socket.emit(\"client-send-message-from-chanel\", data, () => {\n                    textMessage.value = \"\";\n                    document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n                })\n\n                \n                if(chanelId !== \"anonymous\") {\n                    this.formData.append(\"cid\", chanelId);\n                    this.formData.append(\"uid\", uid);\n                    this.formData.append(\"content\", textMessage.value);\n                    postSaveChanelMessage(this.formData, token)\n                    .then(res => {\n                        console.log(res);\n                        this.formData.delete(\"photo\");\n                        if (res && res.urlContainImage) {\n                            let dataImage = {\n                                sender: {\n                                    _id: uid,\n                                    name,\n                                    photo: photo\n                                },\n                                photo: res.urlContainImage,\n                            }\n                            this.setState({\n                                messageList: this.state.messageList.concat(dataImage)\n                            });\n\n                            dataImage.chanelId = chanelId;\n                            this.socket.emit(\"client-send-message-contain-image-from-chanel\", dataImage, () => {\n                                console.log(\"Server-send-message-contain-image-from-chanel\");\n                            })\n                        }\n                    })\n                    .catch(err => { console.log(err) })\n                }\n            }\n\n\n        } catch (e) { console.log(e) }\n    }\n\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            this.handleSendMessageFromChanel();\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n\n    render() {\n        let { messageList, onlineUsers, chanel } = this.state;\n        let uid = this.props.userPayload.user._id;\n\n        let tabActive = document.querySelectorAll(\".item-discussions.active\");\n        Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n        // active tab\n        let idTabElement = `dcs_${this.chanelId}`;\n        let tabElement = document.getElementById(idTabElement);\n        if (tabElement) {\n            tabElement.classList.add(\"active\")\n        }\n\n        let offsetStartOfChat = this.SKIP_MESSAGES - this.LIMIT_MESSAGES;\n        return (\n            <Template tabPenel=\"-none\" widthRight=\"calc(100% - 80px)\">\n                <div id=\"chat-area\" className=\"chat-server\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n\n                            <div className=\"data\">\n                                <h5><a href=\"/chanels\">{chanel.chanelName}</a></h5>\n                            </div>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-info\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a href=\"/\" className=\"voice\">Voice Call</a>\n                                    <a href=\"/\" className=\"voice\">Video Call</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                    <a href=\"/\" className=\"voice\">Delete Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <aside >\n                        <div>\n                            <div className=\"content\">\n                                <div className=\"container\">\n                                    {\n                                        messageList.map((item, i) => {\n                                            console.log(i, this.SKIP_MESSAGES)\n                                            if(i === offsetStartOfChat) {\n                                                return <>\n                                                    <div id=\"start-of-message\"></div>\n                                                    <ItemMessage\n                                                        key={i}\n                                                        isMe={item.sender._id === uid ? \"me\" : \"\"}\n                                                        content={item.content}\n                                                        contentPhoto={item.photo}\n                                                        photo={item.sender.photo}\n                                                        date={moment(item.created).fromNow() || \"just now\"}\n                                                        name={item.sender.fullname || item.sender.email}\n                                                        uid={item.sender._id}\n                                                    />\n                                                </>\n                                            }\n                                            return (\n                                                <ItemMessage\n                                                    key={i}\n                                                    isMe={item.sender._id === uid ? \"me\" : \"\"}\n                                                    content={item.content}\n                                                    contentPhoto={item.photo}\n                                                    photo={item.sender.photo}\n                                                    date={moment(item.created).fromNow() || \"just now\"}\n                                                    name={item.sender.fullname || item.sender.email}\n                                                    uid={item.sender._id}\n                                                />\n                                            )\n                                        })\n                                    }\n                                    <div id=\"end-of-message\"></div>\n                                </div>\n                                <div className=\"scroller\" />\n                            </div>\n                            <div className=\"bottom\">\n                                <form className=\"text-area\">\n                                    <textarea\n                                        id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                        onPaste={this.handlePasteToInput}\n                                    />\n                                    <div className=\"add-smiles\">\n                                        <span title=\"add icon\" className=\"em em-blush\" />\n                                    </div>\n                                    <button onClick={this.handleSendMessageFromChanel} style={{ height: '56x', outline: \"none\" }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                                    <label className=\"label-input input-file\">\n                                        <input\n                                            type=\"file\" className=\"d-none\"\n                                            accept=\"image/*\"\n                                            onChange={this.previewPhoto}\n                                        />\n                                        <i className=\"ti-clip\" />\n                                    </label>\n                                </form>\n                            </div>\n                            <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                                <img id=\"preview\" src=\"\" alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"container tab-panel\">\n                            <div className=\"chanel user-online\">\n                                <header>Member online</header>\n                                {\n                                    onlineUsers.map((user, i) => {\n                                        return <a key={i} href=\"#list-chat\" className=\"item-discussions single\">\n                                            <img className=\"avatar-md\" src={user.photo} alt=\"avt\" />\n                                            <div className=\"data\">\n                                                <h5>{user.name}</h5>\n                                            </div>\n                                        </a>\n                                    })\n                                }\n                                <a href=\"#list-chat\" className=\"item-discussions single\">\n                                    <img className=\"avatar-md\" src=\"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\" alt=\"avt\" />\n                                    <div className=\"status offline\" />\n                                    <div className=\"data\">\n                                        <h5>Bob Frank</h5>\n\n                                    </div>\n                                </a>\n\n                            </div>\n                        </div>\n                    </aside>\n\n                </div>\n            </Template>\n        )\n    }\n}\n\nexport default ChatServerArea;"]},"metadata":{},"sourceType":"module"}