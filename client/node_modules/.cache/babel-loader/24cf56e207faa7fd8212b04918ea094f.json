{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/Chanels.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getChanelJoined } from '../controllers/ChanelController';\nimport { isAuthenticated } from '../controllers/UserController';\nimport \"./Chanels.css\";\n\nclass Chanels extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chanels: []\n    };\n  }\n\n  componentDidMount() {\n    try {\n      // Get chanels\n      let uid = isAuthenticated().user._id;\n\n      getChanelJoined(uid).then(res => {\n        console.log(res);\n\n        if (!res.message && res.chanelId) {\n          this.setState({\n            chanels: res.chanels\n          });\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    let {\n      chanels\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"discussions server-chanels\",\n      id: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-group chats\",\n      id: \"chats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, chanels.map((cn, index) => {\n      return React.createElement(Link, {\n        title: cn.chanelName,\n        id: `dcs_${cn.chanelId._id}`,\n        tabIndex: index,\n        key: index,\n        to: `/chanels/${cn.chanelId._id}`,\n        className: \"item-discussions single unread\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        width: \"48\",\n        height: \"48\",\n        src: cn.chanelId.chanelPhoto.photoIcon,\n        alt: \"chanel-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }), React.createElement(Link, {\n      title: \"anonymous-chanel\",\n      id: `dcs_anonymous`,\n      tabIndex: 2,\n      key: 2,\n      to: \"/chanels/anonymous/ha\",\n      className: \"item-discussions single unread\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\",\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(Chanels);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/Chanels.js"],"names":["React","Link","withRouter","getChanelJoined","isAuthenticated","Chanels","Component","constructor","state","chanels","componentDidMount","uid","user","_id","then","res","console","log","message","chanelId","setState","e","render","map","cn","index","chanelName","chanelPhoto","photoIcon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AACA;AACA,UAAIC,GAAG,GAAGP,eAAe,GAAGQ,IAAlB,CAAuBC,GAAjC;;AACAV,MAAAA,eAAe,CAACQ,GAAD,CAAf,CACCG,IADD,CACMC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAI,CAACA,GAAG,CAACG,OAAL,IAAgBH,GAAG,CAACI,QAAxB,EAAkC;AAC9B,eAAKC,QAAL,CAAc;AACVX,YAAAA,OAAO,EAAEM,GAAG,CAACN;AADH,WAAd;AAGH;AACJ,OARD;AASH,KAZD,CAYE,OAAOY,CAAP,EAAU;AAAEL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAAgB;AACjC;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEb,MAAAA;AAAF,QAAc,KAAKD,KAAvB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,EAAE,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQC,OAAO,CAACc,GAAR,CAAY,CAACC,EAAD,EAAKC,KAAL,KAAe;AACvB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,EAAE,CAACE,UAAhB;AAA4B,QAAA,EAAE,EAAG,OAAMF,EAAE,CAACL,QAAH,CAAYN,GAAI,EAAvD;AAA0D,QAAA,QAAQ,EAAEY,KAApE;AAA2E,QAAA,GAAG,EAAEA,KAAhF;AAAuF,QAAA,EAAE,EAAG,YAAWD,EAAE,CAACL,QAAH,CAAYN,GAAI,EAAvH;AAA0H,QAAA,SAAS,EAAC,gCAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAC,IAAjC;AAAsC,QAAA,MAAM,EAAC,IAA7C;AAAkD,QAAA,GAAG,EAAEW,EAAE,CAACL,QAAH,CAAYQ,WAAZ,CAAwBC,SAA/E;AAA0F,QAAA,GAAG,EAAC,aAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAGH,KAJD,CAFR,EAQI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAC,kBADV;AAC6B,MAAA,EAAE,EAAG,eADlC;AACkD,MAAA,QAAQ,EAAE,CAD5D;AAC+D,MAAA,GAAG,EAAE,CADpE;AACuE,MAAA,EAAE,EAAC,uBAD1E;AACkG,MAAA,SAAS,EAAC,gCAD5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAC,wFAA/B;AAAwH,MAAA,GAAG,EAAC,KAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CARJ,CADJ,CADJ;AAkBH;;AA5CiC;;AA+CtC,eAAe1B,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getChanelJoined } from '../controllers/ChanelController';\nimport { isAuthenticated } from '../controllers/UserController';\nimport \"./Chanels.css\";\n\nclass Chanels extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            chanels: [],\n        }\n    }\n\n    componentDidMount() {\n        try {\n            // Get chanels\n            let uid = isAuthenticated().user._id;\n            getChanelJoined(uid)\n            .then(res => {\n                console.log(res)\n                if (!res.message && res.chanelId) {\n                    this.setState({\n                        chanels: res.chanels\n                    });\n                }\n            });\n        } catch (e) { console.log(e) }\n    }\n\n    render() {\n        let { chanels } = this.state;\n        return (\n            <div className=\"discussions server-chanels\" id=\"scroller\">\n                <div className=\"list-group chats\" id=\"chats\">\n                    {\n                        chanels.map((cn, index) => {\n                            return <Link title={cn.chanelName} id={`dcs_${cn.chanelId._id}`} tabIndex={index} key={index} to={`/chanels/${cn.chanelId._id}`} className=\"item-discussions single unread\">\n                                <img className=\"avatar-md\" width=\"48\" height=\"48\" src={cn.chanelId.chanelPhoto.photoIcon} alt=\"chanel-icon\" />\n                            </Link>\n                        })\n                    }\n                    <Link\n                        title=\"anonymous-chanel\" id={`dcs_anonymous`} tabIndex={2} key={2} to=\"/chanels/anonymous/ha\" className=\"item-discussions single unread\"\n                    >\n                        <img className=\"avatar-md\" src=\"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\" alt=\"avt\"/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Chanels);\n"]},"metadata":{},"sourceType":"module"}