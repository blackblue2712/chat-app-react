{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/VideoCall.js\";\nimport React from 'react';\nimport \"./VideoCall.css\";\nimport adapter from 'webrtc-adapter';\n\nclass VideoCall extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSuccess = stream => {\n      console.log(stream, this.video);\n      this.video.srcObject = stream;\n    };\n\n    this.handleError = error => {\n      console.error('getUserMedia error: ', error);\n    };\n\n    this.gotLocalMediaStream = mediaStream => {\n      localVideo.srcObject = mediaStream;\n      localStream = mediaStream;\n      trace('Received local stream.');\n      callButton.disabled = false; // Enable call button.\n    };\n\n    this.handleLocalMediaStreamError = error => {\n      trace(`navigator.getUserMedia error: ${error.toString()}.`);\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.video = document.querySelector(\"video\");\n    this.constraints = {\n      video: true // video:  {\n      //     width: {\n      //       min: 1280\n      //     },\n      //     height: {\n      //       min: 720\n      //     }\n      // }\n\n    }; // Set up to exchange only video.\n\n    this.offerOptions = {\n      offerToReceiveVideo: 1\n    }; // Define initial start time of the call (defined as connection between peers).\n\n    let startTime = null; // Define peer connections, streams and video elements.\n\n    const localVideo = document.getElementById('call-local-video');\n    const remoteVideo = document.getElementById('call-remote-video');\n    let localStream;\n    let remoteStream;\n    let localPeerConnection;\n    let remotePeerConnection; // navigator.mediaDevices\n    // .getUserMedia(this.constraints)\n    // .then(this.handleSuccess)\n    // .catch(this.handleError);\n  }\n\n  // Set up media stream constant and parameters.\n  // In this codelab, you will be streaming video only: \"video: true\".\n  // Audio will not be streamed because it is set to \"audio: false\" by default.\n  render() {\n    return React.createElement(\"div\", {\n      class: \"call\",\n      id: \"call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"call-local-video\",\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      id: \"call-remote-video\",\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"participant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"avatar-call\",\n      src: \"https://res.cloudinary.com/dged6fqkf/image/upload/v1581173169/jbwkupd6wxap1udmgfmz.png\",\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Connecting to Sarah\"), React.createElement(\"div\", {\n      class: \"wave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-microphone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"button\", {\n      class: \"btn option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-volume\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"btn option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      id: \"end-call-video\",\n      class: \"btn option call-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"ti-close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default VideoCall;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/VideoCall.js"],"names":["React","adapter","VideoCall","Component","constructor","handleSuccess","stream","console","log","video","srcObject","handleError","error","gotLocalMediaStream","mediaStream","localVideo","localStream","trace","callButton","disabled","handleLocalMediaStreamError","toString","state","componentDidMount","document","querySelector","constraints","offerOptions","offerToReceiveVideo","startTime","getElementById","remoteVideo","remoteStream","localPeerConnection","remotePeerConnection","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./VideoCall.css\";\n\nimport adapter from 'webrtc-adapter';\n\nclass VideoCall extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        this.video = document.querySelector(\"video\");\n        this.constraints = {\n            video: true\n            // video:  {\n            //     width: {\n            //       min: 1280\n            //     },\n            //     height: {\n            //       min: 720\n            //     }\n            // }\n        }\n\n        // Set up to exchange only video.\n        this.offerOptions = {\n            offerToReceiveVideo: 1,\n        };\n\n        // Define initial start time of the call (defined as connection between peers).\n        let startTime = null;\n\n        // Define peer connections, streams and video elements.\n        const localVideo = document.getElementById('call-local-video');\n        const remoteVideo = document.getElementById('call-remote-video');\n\n        let localStream;\n        let remoteStream;\n\n        let localPeerConnection;\n        let remotePeerConnection;\n\n        // navigator.mediaDevices\n        // .getUserMedia(this.constraints)\n        // .then(this.handleSuccess)\n        // .catch(this.handleError);\n    }\n\n    handleSuccess = (stream) => {\n        console.log(stream, this.video)\n        this.video.srcObject = stream;\n    }\n\n    handleError = (error) => {\n        console.error('getUserMedia error: ', error);\n    }\n\n    // Define MediaStreams callbacks.\n\n    // Sets the MediaStream as the video element src.\n    gotLocalMediaStream = (mediaStream) => {\n        localVideo.srcObject = mediaStream;\n        localStream = mediaStream;\n        trace('Received local stream.');\n        callButton.disabled = false;  // Enable call button.\n    }\n\n    // Handles error by logging a message to the console.\n    handleLocalMediaStreamError = (error) => {\n        trace(`navigator.getUserMedia error: ${error.toString()}.`);\n    }\n  \n\n    // Set up media stream constant and parameters.\n\n    // In this codelab, you will be streaming video only: \"video: true\".\n    // Audio will not be streamed because it is set to \"audio: false\" by default.\n\n      \n\n    render() {\n        return (\n            <div class=\"call\" id=\"call\">\n                <video id=\"call-local-video\" autoPlay></video>\n                <video id=\"call-remote-video\" autoPlay></video>\n                <div class=\"content\">\n                    <div class=\"container\">\n                        <div class=\"inside\">\n                            <div class=\"panel\">\n                                <div class=\"participant\">\n                                    <img class=\"avatar-call\" src=\"https://res.cloudinary.com/dged6fqkf/image/upload/v1581173169/jbwkupd6wxap1udmgfmz.png\" alt=\"avatar\" />\n                                        <span>Connecting to Sarah</span>\n                                        <div class=\"wave\">\n                                            <span class=\"dot\"></span>\n                                            <span class=\"dot\"></span>\n                                            <span class=\"dot\"></span>\n                                        </div>\n                                </div>\n                                <div class=\"options\">\n                                    <button class=\"btn option\"><i class=\"ti-microphone\"></i></button>\n                                    <button class=\"btn option\"><i class=\"ti-video-camera\"></i></button>\n                                    <button class=\"btn option\"><i class=\"ti-user\">+</i></button>\n                                    <button class=\"btn option\"><i class=\"ti-volume\"></i></button>\n                                    <button class=\"btn option\"><i class=\"ti-comment\"></i></button>\n                                </div>\n                                <button id=\"end-call-video\" class=\"btn option call-end\"><i class=\"ti-close\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoCall;"]},"metadata":{},"sourceType":"module"}