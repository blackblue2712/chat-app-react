{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js\";\nimport React from 'react';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n\n    this.scrollToBottom = () => {\n      try {\n        window.onload = () => {\n          document.querySelector(\"#end-of-message\").scrollIntoView({\n            behavior: \"smooth\"\n          });\n        };\n      } catch (e) {}\n    };\n\n    this.handleCreateConnectSocket = chanelId => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        this.socket.emit(\"join-chanel\", {\n          sid,\n          uid,\n          name,\n          photo,\n          chanelId\n        }, () => {\n          console.log(\"User has join this chanel\", chanelId);\n        });\n        this.socket.on(\"server-send-message-from-chanel\", res => {\n          console.log(\"server-send-message-from-chanel\", sid, res.data);\n          if (uid === res.data.sender._id) res.data.isMe = \"me\";\n          this.setState({\n            messageList: this.state.messageList.concat(res.data)\n          });\n        });\n        this.socket.on(\"list-connected-chanel-users\", users => {\n          this.setState({\n            onlineUsers: users\n          });\n        });\n      });\n    };\n\n    this.handleSendMessageFromChanel = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          chanelId\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        let token = this.props.userPayload.token;\n        this.socket.emit(\"client-send-message-from-chanel\", {\n          chanelId,\n          content: textMessage.value,\n          sender: {\n            _id: uid,\n            name,\n            photo\n          }\n        }, () => {\n          textMessage.value = \"\";\n          document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n        });\n        postSaveChanelMessage({\n          cid: chanelId,\n          uid,\n          content: textMessage.value\n        }, token).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        this.handleSendMessageFromChanel();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    };\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      this.scrollToBottom();\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        chanelId\n      } = this.props.match.params; // Get chanel info\n\n      getSingleChanel(chanelId).then(res => {\n        if (!res.message) {\n          this.setState({\n            chanel: res,\n            messageList: res.chanelMessages\n          });\n        }\n      }); // Socket realtime\n\n      this.handleCreateConnectSocket(chanelId);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {\n      chanelId\n    } = nextProps.match.params;\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    let photo = this.props.userPayload.user.photo;\n    this.socket.emit(\"join-chanel\", {\n      sid,\n      uid,\n      name,\n      photo,\n      chanelId\n    }, () => {\n      console.log(\"User has join this chanel\", chanelId);\n    });\n    getSingleChanel(chanelId).then(res => {\n      if (!res.message) {\n        this.setState({\n          chanel: res,\n          messageList: res.chanelMessages\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    let {\n      messageList,\n      onlineUsers,\n      chanel\n    } = this.state;\n    let uid = this.props.userPayload.user._id;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      tabPenel: \"-none\",\n      widthRight: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      className: \"chat-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/chanels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, chanel.chanelName))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, messageList.map((item, i) => {\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: item.sender._id === uid ? \"me\" : \"\",\n        content: item.content,\n        date: moment(item.created).fromNow() || \"just now\",\n        photo: item.sender.photo,\n        name: item.sender.fullname || item.sender.email,\n        uid: item.sender._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromChanel,\n      style: {\n        height: '56x',\n        outline: \"none\"\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"btn attach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"container tab-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chanel user-online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Member online\"), onlineUsers.map((user, i) => {\n      return React.createElement(\"a\", {\n        key: i,\n        href: \"#list-chat\",\n        className: \"item-discussions single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, user.name)));\n    }), React.createElement(\"a\", {\n      href: \"#list-chat\",\n      className: \"item-discussions single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: settingImage,\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"status offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Bob Frank\"))))))));\n  }\n\n}\n\nexport default ChatServerArea;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js"],"names":["React","ItemMessage","socketIOClient","Template","settingImage","getSingleChanel","postSaveChanelMessage","moment","require","ChatServerArea","Component","constructor","scrollToBottom","window","onload","document","querySelector","scrollIntoView","behavior","e","handleCreateConnectSocket","chanelId","socket","process","env","REACT_APP_API_URL","transports","on","sid","id","uid","props","userPayload","user","_id","name","fullname","email","photo","emit","console","log","res","data","sender","isMe","setState","messageList","state","concat","users","onlineUsers","handleSendMessageFromChanel","event","preventDefault","match","params","textMessage","getElementById","token","content","value","scrollBy","cid","then","catch","err","checkUserEnter","keyCode","toggleDropdown","drdElement","classList","length","remove","add","addEventListener","chanel","componentDidMount","message","chanelMessages","componentWillReceiveProps","nextProps","componentDidUpdate","render","tabActive","querySelectorAll","Array","from","map","el","idTabElement","tabElement","chanelName","item","i","created","fromNow","height","outline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\n\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    }\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      this.scrollToBottom();\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter)\n      let { chanelId } = this.props.match.params;\n      // Get chanel info\n      getSingleChanel(chanelId)\n        .then(res => {\n          if (!res.message) {\n            this.setState({\n              chanel: res,\n              messageList: res.chanelMessages\n            });\n          }\n        });\n\n      // Socket realtime\n      this.handleCreateConnectSocket(chanelId);\n\n    } catch (e) { console.log(e) }\n  }\n\n  scrollToBottom = () => {\n    try {\n      window.onload = () => {\n        document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n      }\n    } catch(e) { }\n  }\n\n  handleCreateConnectSocket = (chanelId) => {\n    this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n    // wait client connect\n    this.socket.on('connect', () => {\n\n      let sid = this.socket.id;\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n\n      this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId }, () => {\n        console.log(\"User has join this chanel\", chanelId);\n      })\n\n      this.socket.on(\"server-send-message-from-chanel\", (res) => {\n        console.log(\"server-send-message-from-chanel\", sid, res.data);\n        if (uid === res.data.sender._id) res.data.isMe = \"me\";\n        this.setState({ messageList: this.state.messageList.concat(res.data) });\n      });\n      this.socket.on(\"list-connected-chanel-users\", users => {\n        this.setState({ onlineUsers: users })\n      })\n\n    });\n  }\n\n  handleSendMessageFromChanel = () => {\n    try {\n      window.event.preventDefault();\n      let { chanelId } = this.props.match.params;\n      let textMessage = document.getElementById(\"text-message\");\n\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n      let token = this.props.userPayload.token;\n\n      this.socket.emit(\"client-send-message-from-chanel\", { chanelId, content: textMessage.value, sender: { _id: uid, name, photo } }, () => {\n        textMessage.value = \"\";\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n      })\n\n      postSaveChanelMessage({ cid: chanelId, uid, content: textMessage.value }, token)\n        .then(res => {\n          console.log(res)\n        })\n        .catch(err => { console.log(err) })\n\n    } catch (e) { console.log(e) }\n  }\n\n  checkUserEnter = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSendMessageFromChanel();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { chanelId } = nextProps.match.params;\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    let photo = this.props.userPayload.user.photo;\n    this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId }, () => {\n      console.log(\"User has join this chanel\", chanelId);\n    })\n    getSingleChanel(chanelId)\n      .then(res => {\n        if (!res.message) {\n          this.setState({\n            chanel: res,\n            messageList: res.chanelMessages\n          });\n        }\n      });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  toggleDropdown = () => {\n    try {\n      let drdElement = document.querySelector(\"#chat-area .list-more\");\n      if (drdElement.classList.length > 2) {\n        drdElement.classList.remove(\"active\");\n      } else {\n        drdElement.classList.add(\"active\");\n        document.getElementById(\"root\").addEventListener(\"click\", () => {\n          drdElement.classList.remove(\"active\");\n        });\n      }\n    } catch (e) { }\n  }\n\n  render() {\n    let { messageList, onlineUsers, chanel } = this.state;\n    let uid = this.props.userPayload.user._id;\n\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n    // active tab\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n    if (tabElement) {\n      tabElement.classList.add(\"active\")\n    }\n    return (\n      <Template tabPenel=\"-none\" widthRight=\"100%\">\n        <div id=\"chat-area\" className=\"chat-server\">\n          <div className=\"top\">\n            <div className=\"inside\">\n\n              <div className=\"data\">\n                <h5><a href=\"/chanels\">{chanel.chanelName}</a></h5>\n              </div>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-headphone-alt\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-video-camera\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-info\" />\n              </button>\n\n              <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                  <i className=\"ti-gird\" />\n                </button>\n\n                <div className=\"dropdown-list list-more\">\n                  <a href=\"/\" className=\"voice\">Voice Call</a>\n                  <a href=\"/\" className=\"voice\">Video Call</a>\n                  <hr />\n                  <a href=\"/\" className=\"voice\">Clear History</a>\n                  <a href=\"/\" className=\"voice\">Block Contact</a>\n                  <a href=\"/\" className=\"voice\">Delete Contact</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <aside >\n            <div>\n              <div className=\"content\">\n                <div className=\"container\">\n                  {\n                    messageList.map((item, i) => {\n                      return (\n                        <ItemMessage\n                          key={i}\n                          isMe={item.sender._id === uid ? \"me\" : \"\"}\n                          content={item.content}\n                          date={moment(item.created).fromNow() || \"just now\"}\n                          photo={item.sender.photo}\n                          name={item.sender.fullname || item.sender.email}\n                          uid={item.sender._id}\n                        />\n                      )\n                    })\n                  }\n                  <div id=\"end-of-message\"></div>\n                </div>\n                <div className=\"scroller\" />\n              </div>\n              <div className=\"bottom\">\n                <form className=\"text-area\">\n                  <textarea\n                    id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n\n                  />\n                  <div className=\"add-smiles\">\n                    <span title=\"add icon\" className=\"em em-blush\" />\n                  </div>\n                  <button onClick={this.handleSendMessageFromChanel} style={{ height: '56x', outline: \"none\" }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                </form>\n                <label>\n                  <input type=\"file\" className=\"d-none\" />\n                  <span className=\"btn attach\"><i className=\"ti-clip\" /></span>\n                </label>\n              </div>\n            </div>\n            <div className=\"container tab-panel\">\n              <div className=\"chanel user-online\">\n                <header>Member online</header>\n                {\n                  onlineUsers.map((user, i) => {\n                    return <a key={i} href=\"#list-chat\" className=\"item-discussions single\">\n                      <img className=\"avatar-md\" src={user.photo} alt=\"avt\" />\n                      <div className=\"data\">\n                        <h5>{user.name}</h5>\n                      </div>\n                    </a>\n                  })\n                }\n                <a href=\"#list-chat\" className=\"item-discussions single\">\n                  <img className=\"avatar-md\" src={settingImage} alt=\"avt\" />\n                  <div className=\"status offline\" />\n                  <div className=\"data\">\n                    <h5>Bob Frank</h5>\n\n                  </div>\n                </a>\n\n              </div>\n            </div>\n          </aside>\n\n        </div>\n      </Template>\n    )\n  }\n}\n\nexport default ChatServerArea;"]},"metadata":{},"sourceType":"module"}