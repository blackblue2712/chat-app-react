{"ast":null,"code":"export const getMessageIndividualUser = (data, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/pm/messages?senderId=${data.senderId}&receiverId=${data.receiverId}&limit=${data.limit}&skip=${data.skip}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR GET PM\");\n  });\n};\nexport const postSavePrivateMessage = (data, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/pm/new-message`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"Application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: data\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR POST PRIVATE MESSAGE\");\n  });\n};\nexport const getTotalUnreadMessages = (uid, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/pm/messages/unread?uid=${uid}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR GET TOTAL UNREAD MESSAGES\");\n  });\n};\nexport const readMessage = uid => {\n  return fetch(`${process.env.REACT_APP_API_URL}/pm/messages/read?uid=${uid}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\"\n    }\n  }).catch(err => {\n    console.log(\"ERROR GET TOTAL UNREAD MESSAGES\");\n  });\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/controllers/PrivateChat.js"],"names":["getMessageIndividualUser","data","token","fetch","process","env","REACT_APP_API_URL","senderId","receiverId","limit","skip","method","headers","Accept","Authorization","then","res","json","catch","err","console","log","postSavePrivateMessage","body","getTotalUnreadMessages","uid","readMessage"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrD,SAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,yBAAwBL,IAAI,CAACM,QAAS,eAAcN,IAAI,CAACO,UAAW,UAASP,IAAI,CAACQ,KAAM,SAAQR,IAAI,CAACS,IAAK,EAA5I,EAA+I;AACvJC,IAAAA,MAAM,EAAE,KAD+I;AAEvJC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAH1B;AAF8I,GAA/I,CAAL,CAQNa,IARM,CAQAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,EAWNC,KAXM,CAWCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAbM,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,sBAAsB,GAAG,CAACrB,IAAD,EAAOC,KAAP,KAAiB;AACnD,SAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAlC,EAAoD;AAC5DK,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAF1B,KAFmD;AAM5DqB,IAAAA,IAAI,EAAEtB;AANsD,GAApD,CAAL,CAQNc,IARM,CAQAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,EAWNC,KAXM,CAWCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GAbM,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMG,sBAAsB,GAAG,CAACC,GAAD,EAAMvB,KAAN,KAAgB;AAClD,SAAOC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,2BAA0BmB,GAAI,EAAhE,EAAmE;AAC3Ed,IAAAA,MAAM,EAAE,KADmE;AAE3EC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAF1B;AAFkE,GAAnE,CAAL,CAONa,IAPM,CAOAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GATM,EAUNC,KAVM,CAUCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAZM,CAAP;AAaH,CAdM;AAiBP,OAAO,MAAMK,WAAW,GAAID,GAAD,IAAS;AAChC,SAAOtB,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,yBAAwBmB,GAAI,EAA9D,EAAiE;AACzEd,IAAAA,MAAM,EAAE,KADiE;AAEzEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAFgE,GAAjE,CAAL,CAMNK,KANM,CAMCC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GARM,CAAP;AASH,CAVM","sourcesContent":["export const getMessageIndividualUser = (data, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/pm/messages?senderId=${data.senderId}&receiverId=${data.receiverId}&limit=${data.limit}&skip=${data.skip}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR GET PM\");\n    });\n}\n\nexport const postSavePrivateMessage = (data, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/pm/new-message`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: data\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR POST PRIVATE MESSAGE\");\n    });\n}\n\nexport const getTotalUnreadMessages = (uid, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/pm/messages/unread?uid=${uid}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            Authorization: `Bearer ${token}`,\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR GET TOTAL UNREAD MESSAGES\");\n    });\n}\n\n\nexport const readMessage = (uid) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/pm/messages/read?uid=${uid}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n        }\n    })\n    .catch( err => {\n        console.log(\"ERROR GET TOTAL UNREAD MESSAGES\");\n    });\n}\n\n"]},"metadata":{},"sourceType":"module"}