{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatAnonymous.js\";\nimport React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\nimport YouTubePlayer from 'youtube-player';\nimport YoutubePlay from \"./YoutubePlay\";\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport \"./chatServerArea.css\";\n\nconst moment = require(\"moment\");\n\nclass ChatAnonymous extends React.Component {\n  constructor() {\n    super();\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.handleCreateConnectSocket = () => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        this.socket.emit(\"join-chanel\", {\n          sid,\n          uid,\n          name,\n          chanelId: this.CHANEL_AN\n        }, () => {\n          console.log(name + \" has join this chanel\", this.chanelId);\n        });\n        this.socket.on(\"server-send-message-from-chanel\", res => {\n          // console.log(\"server-send-message-from-chanel\", sid, res.data);\n          res.data.sender.photo = \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\";\n          if (uid === res.data.sender._id) res.data.isMe = \"me\";\n          this.setState({\n            messageList: this.state.messageList.concat(res.data)\n          });\n        });\n        this.socket.on(\"server-send-message-contain-image-from-chanel\", res => {\n          console.log(\"server-send-message-contain-image-from-chanel\", sid, res.data);\n\n          if (uid !== res.data.sender._id) {\n            this.setState({\n              messageList: this.state.messageList.concat(res.data)\n            });\n          }\n        });\n        this.socket.on(\"list-connected-chanel-users\", users => {\n          this.setState({\n            onlineUsers: users\n          });\n        });\n        this.socket.on(\"play-music\", data => {\n          console.log(data);\n        });\n      });\n    };\n\n    this.handleSendMessageFromChanel = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          chanelId\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          let uid = this.props.userPayload.user._id;\n          let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n          let token = this.props.userPayload.token; // emit event\n\n          let data = {};\n          data.sender = {};\n          data.chanelId = chanelId;\n          data.content = textMessage.value;\n          data.sender._id = uid;\n          data.sender.name = name;\n          this.socket.emit(\"client-send-message-from-chanel\", data, () => {\n            textMessage.value = \"\";\n            document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n          });\n\n          if (data.content.indexOf(\">p\") !== -1) {\n            this.player.searchYoutube(data.content);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        this.handleSendMessageFromChanel();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      onlineUsers: [],\n      messageLista: []\n    };\n    this.CHANEL_AN = \"anonymous\";\n    this.onPlayQueue = [];\n    this.onPlaying = false;\n  }\n\n  componentDidMount() {\n    try {\n      let player = YouTubePlayer('video-player');\n      this.player = new YoutubePlay(player);\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // Socket realtime\n\n      this.handleCreateConnectSocket();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let sid = this.socket.id;\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n    this.socket.emit(\"join-chanel\", {\n      sid,\n      uid,\n      name,\n      chanelId: this.CHANEL_AN\n    }, () => {\n      console.log(\"User has join this chanel\", this.CHANEL_AN);\n    });\n    this.setState({\n      messageList: []\n    });\n  }\n\n  render() {\n    let {\n      messageList,\n      onlineUsers,\n      chanel\n    } = this.state;\n    let uid = this.props.userPayload.user._id;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${this.chanelId}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      tabPenel: \"-none\",\n      widthRight: \"calc(100% - 80px)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"video-player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"chat-area\",\n      className: \"chat-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/chanels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, chanel.chanelName))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, messageList.map((item, i) => {\n      if (i === this.LIMIT_MESSAGES - 1) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          id: \"start-of-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }), React.createElement(ItemMessage, {\n          key: i,\n          isMe: item.sender._id === uid ? \"me\" : \"\",\n          content: item.content,\n          contentPhoto: item.photo,\n          photo: item.sender.photo,\n          date: moment(item.created).fromNow() || \"just now\",\n          name: item.sender.fullname || item.sender.email,\n          uid: item.sender._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: item.sender._id === uid ? \"me\" : \"\",\n        content: item.content,\n        contentPhoto: item.photo,\n        photo: item.sender.photo,\n        date: moment(item.created).fromNow() || \"just now\",\n        name: item.sender.fullname || item.sender.email,\n        uid: item.sender._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromChanel,\n      style: {\n        height: '56x',\n        outline: \"none\"\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      accept: \"image/*\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"container tab-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chanel user-online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Member online\"), onlineUsers.map((user, i) => {\n      return React.createElement(\"a\", {\n        key: i,\n        href: \"#list-chat\",\n        className: \"item-discussions single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, user.name)));\n    }), React.createElement(\"a\", {\n      href: \"#list-chat\",\n      className: \"item-discussions single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\",\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"status offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Bob Frank\"))))))));\n  }\n\n}\n\nexport default ChatAnonymous;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatAnonymous.js"],"names":["React","ItemMessage","YouTubePlayer","YoutubePlay","socketIOClient","Template","moment","require","ChatAnonymous","Component","constructor","scrollToBottom","document","querySelector","scrollIntoView","behavior","e","handleCreateConnectSocket","socket","process","env","REACT_APP_API_URL","transports","on","sid","id","uid","props","userPayload","user","_id","name","fullname","email","emit","chanelId","CHANEL_AN","console","log","res","data","sender","photo","isMe","setState","messageList","state","concat","users","onlineUsers","handleSendMessageFromChanel","window","event","preventDefault","match","params","textMessage","getElementById","value","trim","formData","get","src","classList","remove","token","content","scrollBy","indexOf","player","searchYoutube","handlePasteToInput","items","clipboardData","originalEvent","blob","i","length","type","getAsFile","reader","FileReader","onload","add","result","readAsDataURL","append","clearFormDataImage","delete","previewPhoto","inputAvatar","target","files","checkUserEnter","keyCode","toggleDropdown","drdElement","addEventListener","messageLista","onPlayQueue","onPlaying","componentDidMount","componentWillReceiveProps","nextProps","render","chanel","tabActive","querySelectorAll","Array","from","map","el","idTabElement","tabElement","chanelName","item","LIMIT_MESSAGES","created","fromNow","height","outline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\nimport YouTubePlayer from 'youtube-player';\nimport YoutubePlay from \"./YoutubePlay\";\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport \"./chatServerArea.css\";\n\nconst moment = require(\"moment\");\n\nclass ChatAnonymous extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            onlineUsers: [],\n            messageLista: []\n        }\n        this.CHANEL_AN = \"anonymous\";\n        this.onPlayQueue = [];\n        this.onPlaying = false;\n    }\n\n    componentDidMount() {\n        try {\n            let player = YouTubePlayer('video-player');\n            this.player = new YoutubePlay(player);\n\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter)\n            // Socket realtime\n            this.handleCreateConnectSocket();\n\n        } catch (e) { console.log(e) }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        this.socket.emit(\"join-chanel\", { sid, uid, name, chanelId: this.CHANEL_AN }, () => {\n            console.log(\"User has join this chanel\", this.CHANEL_AN);\n        })\n        this.setState({ messageList: [] });\n    }\n\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    handleCreateConnectSocket = () => {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n        // wait client connect\n        this.socket.on('connect', () => {\n\n            let sid = this.socket.id;\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n            this.socket.emit(\"join-chanel\", { sid, uid, name, chanelId: this.CHANEL_AN }, () => {\n                console.log( name + \" has join this chanel\", this.chanelId);\n            })\n\n            this.socket.on(\"server-send-message-from-chanel\", (res) => {\n                // console.log(\"server-send-message-from-chanel\", sid, res.data);\n                res.data.sender.photo = \"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\";\n                if (uid === res.data.sender._id) res.data.isMe = \"me\";\n                this.setState({ messageList: this.state.messageList.concat(res.data) });\n            });\n            this.socket.on(\"server-send-message-contain-image-from-chanel\", (res) => {\n                console.log(\"server-send-message-contain-image-from-chanel\", sid, res.data);\n                if (uid !== res.data.sender._id) {\n                    this.setState({ messageList: this.state.messageList.concat(res.data) });\n                }\n            });\n\n            this.socket.on(\"list-connected-chanel-users\", users => {\n                this.setState({ onlineUsers: users })\n            });\n            this.socket.on(\"play-music\", data => {\n                console.log(data);\n            })\n\n        });\n    }\n\n    handleSendMessageFromChanel = () => {\n        try {\n            window.event.preventDefault();\n            let { chanelId } = this.props.match.params;\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n                document.querySelector(\".preview-image #preview\").src = \"\";\n                document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                let uid = this.props.userPayload.user._id;\n                let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                let token = this.props.userPayload.token;\n\n                // emit event\n                let data = {};\n                data.sender = {};\n                data.chanelId = chanelId;\n                data.content = textMessage.value;\n                data.sender._id = uid;\n                data.sender.name = name;\n\n                this.socket.emit(\"client-send-message-from-chanel\", data, () => {\n                    textMessage.value = \"\";\n                    document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n                })\n\n\n                \n                if (data.content.indexOf(\">p\") !== -1) {\n                        \n                    this.player.searchYoutube(data.content);\n                }\n            }\n\n\n        } catch (e) { console.log(e) }\n    }\n\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            this.handleSendMessageFromChanel();\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n\n    render() {\n        let { messageList, onlineUsers, chanel } = this.state;\n        let uid = this.props.userPayload.user._id;\n\n        let tabActive = document.querySelectorAll(\".item-discussions.active\");\n        Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n        // active tab\n        let idTabElement = `dcs_${this.chanelId}`;\n        let tabElement = document.getElementById(idTabElement);\n        if (tabElement) {\n            tabElement.classList.add(\"active\")\n        }\n\n        return (\n            <Template tabPenel=\"-none\" widthRight=\"calc(100% - 80px)\">\n                <div id=\"video-player\">\n                    \n                </div>\n                <div id=\"chat-area\" className=\"chat-server\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n\n                            <div className=\"data\">\n                                <h5><a href=\"/chanels\">{chanel.chanelName}</a></h5>\n                            </div>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-info\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a href=\"/\" className=\"voice\">Voice Call</a>\n                                    <a href=\"/\" className=\"voice\">Video Call</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                    <a href=\"/\" className=\"voice\">Delete Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <aside >\n                        <div>\n                            <div className=\"content\">\n                                <div className=\"container\">\n                                    {\n                                        messageList.map((item, i) => {\n                                            if (i === this.LIMIT_MESSAGES - 1) {\n                                                return <>\n                                                    <div id=\"start-of-message\"></div>\n                                                    <ItemMessage\n                                                        key={i}\n                                                        isMe={item.sender._id === uid ? \"me\" : \"\"}\n                                                        content={item.content}\n                                                        contentPhoto={item.photo}\n                                                        photo={item.sender.photo}\n                                                        date={moment(item.created).fromNow() || \"just now\"}\n                                                        name={item.sender.fullname || item.sender.email}\n                                                        uid={item.sender._id}\n                                                    />\n                                                </>\n                                            }\n                                            return (\n                                                <ItemMessage\n                                                    key={i}\n                                                    isMe={item.sender._id === uid ? \"me\" : \"\"}\n                                                    content={item.content}\n                                                    contentPhoto={item.photo}\n                                                    photo={item.sender.photo}\n                                                    date={moment(item.created).fromNow() || \"just now\"}\n                                                    name={item.sender.fullname || item.sender.email}\n                                                    uid={item.sender._id}\n                                                />\n                                            )\n                                        })\n                                    }\n                                    <div id=\"end-of-message\"></div>\n                                </div>\n                                <div className=\"scroller\" />\n                            </div>\n                            <div className=\"bottom\">\n                                <form className=\"text-area\">\n                                    <textarea\n                                        id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                        onPaste={this.handlePasteToInput}\n                                    />\n                                    <div className=\"add-smiles\">\n                                        <span title=\"add icon\" className=\"em em-blush\" />\n                                    </div>\n                                    <button onClick={this.handleSendMessageFromChanel} style={{ height: '56x', outline: \"none\" }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                                    <label className=\"label-input input-file\">\n                                        <input\n                                            type=\"file\" className=\"d-none\"\n                                            accept=\"image/*\"\n                                            onChange={this.previewPhoto}\n                                        />\n                                        <i className=\"ti-clip\" />\n                                    </label>\n                                </form>\n                            </div>\n                            <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                                <img id=\"preview\" src=\"\" alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"container tab-panel\">\n                            <div className=\"chanel user-online\">\n                                <header>Member online</header>\n                                {\n                                    onlineUsers.map((user, i) => {\n                                        return <a key={i} href=\"#list-chat\" className=\"item-discussions single\">\n                                            <img className=\"avatar-md\" src={user.photo} alt=\"avt\" />\n                                            <div className=\"data\">\n                                                <h5>{user.name}</h5>\n                                            </div>\n                                        </a>\n                                    })\n                                }\n                                <a href=\"#list-chat\" className=\"item-discussions single\">\n                                    <img className=\"avatar-md\" src=\"https://res.cloudinary.com/ddrw0yq95/image/upload/v1581392392/kjadclbvhq0gjnwvihnp.png\" alt=\"avt\" />\n                                    <div className=\"status offline\" />\n                                    <div className=\"data\">\n                                        <h5>Bob Frank</h5>\n\n                                    </div>\n                                </a>\n\n                            </div>\n                        </div>\n                    </aside>\n\n                </div>\n            </Template>\n        )\n    }\n}\n\nexport default ChatAnonymous;"]},"metadata":{},"sourceType":"module"}