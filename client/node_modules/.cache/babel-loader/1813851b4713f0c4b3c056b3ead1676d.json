{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from './VideoCallRequest';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat'; // import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          this.orderItemDiscussionToTop(this.toUid);\n          let uid = this.props.userPayload.user._id; // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n          let photo = this.props.userPayload.user.photo;\n          let token = this.props.userPayload.token; // emit event\n\n          this.socket.emit(\"client-send-message-from-individual-user\", {\n            to: this.toUid,\n            message: textMessage.value,\n            photo,\n            from: uid\n          }, () => {\n            this.setState({\n              messages: this.state.messages.concat({\n                isMe: \"me\",\n                content: textMessage.value\n              })\n            });\n            document.querySelector(`#dcs_${this.toUid} p`).innerText = textMessage.value;\n            textMessage.value = \"\";\n            this.scrollToBottom();\n          }); // save private message to db\n\n          this.formData.append(\"sender\", uid);\n          this.formData.append(\"receiver\", this.toUid);\n          this.formData.append(\"content\", textMessage.value);\n          postSavePrivateMessage(this.formData, token).then(res => {\n            console.log(res);\n            this.formData.delete(\"photo\");\n\n            if (res && res.urlContainImage) {\n              let dataImage = {\n                to: this.toUid,\n                from: uid,\n                photo,\n                contentPhoto: res.urlContainImage,\n                isMe: \"me\"\n              };\n              this.setState({\n                messages: this.state.messages.concat(dataImage)\n              });\n              this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {});\n            }\n          }).catch(err => console.log(err));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleCreateConnectSocket = (data, userFriend) => {\n      try {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n          transports: ['websocket']\n        }); // wait client connect\n\n        this.socket.on('connect', () => {\n          console.log(\"socket connected\");\n          this.socket.emit(\"join-individual\", {\n            uid: data.uid,\n            username: data.name\n          }, () => {\n            console.log(`user ${this.props.userPayload.user.email} joined`);\n          });\n          this.socket.on(\"server-send-message-from-individual-user\", res => {\n            console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  content: res.message,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, res.message, userFriend._id);\n          });\n          this.socket.on(\"server-send-message-contain-image-from-individual-user\", res => {\n            console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  contentPhoto: res.contentPhoto,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n          });\n          this.socket.on('request', ({\n            from: callFrom\n          }) => {\n            this.setState({\n              callModal: 'on',\n              callFrom\n            });\n          }).on('call', data => {\n            if (data.sdp) {\n              console.log(\"IFFFFFFF\", data.sdp);\n              this.pc.setRemoteDescription(data.sdp);\n\n              if (data.sdp.type === 'offer') {\n                console.log(\"offer\");\n                this.pc.createAnswer();\n              }\n            } else this.pc.addIceCandidate(data.candidate);\n          }).on('end', this.endCall.bind(this, false));\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.showNewMessageComming = (from, message, userFriendId) => {\n      try {\n        document.querySelector(`#dcs_${from} p`).innerText = message;\n        this.orderItemDiscussionToTop(from);\n        let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n        this.showUnReadMessage(currentUnread, from);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMessageIndividualUser = (cb = null) => {\n      let token = this.props.userPayload.token;\n      let data = {\n        senderId: this.props.userPayload.user._id,\n        receiverId: this.toUid,\n        limit: this.LIMIT_MESSAGES,\n        skip: this.SKIP_MESSAGES\n      };\n      getMessageIndividualUser(data, token).then(res => {\n        console.log(res);\n\n        if (res.length > 0) {\n          let listMessage = [];\n          let countUnreadMessage = 0;\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === data.senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n            objMessage.contentPhoto = mes.photo;\n            if (mes.sender._id !== data.senderId && mes.isRead === false) countUnreadMessage += 1;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: listMessage.concat(this.state.messages)\n          });\n          this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n          this.showUnReadMessage(countUnreadMessage, data.receiverId);\n          cb && cb();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onScrollGetMoreMessages = () => {\n      try {\n        let container = document.querySelector(\"#chat-area .content .container\");\n\n        if (container.scrollTop === 0) {\n          this.getMessageIndividualUser(() => {\n            setTimeout(this.scrollToTop, 0);\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.scrollToTop = () => {\n      try {\n        document.querySelector(\"#start-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.orderItemDiscussionToTop = toUid => {\n      let el = document.querySelector(`#dcs_${toUid}`);\n      console.log(el);\n      el.style.order = this.ORDER_ITEM_DISCUSSION;\n      this.ORDER_ITEM_DISCUSSION -= 1;\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.onCallVideoStreaming = () => {\n      document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n      document.getElementById(\"call\").classList.add(\"on\");\n      this.socket.emit(\"call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.onEndCallVideoStreaming = () => {\n      document.getElementById(\"call\").classList.remove(\"on\");\n      this.socket.emit(\"end-call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.showUnReadMessage = (count, toUid) => {\n      try {\n        if (count > 0) {\n          document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n          document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.showTypingAction = uTyping => {\n      try {\n        document.getElementById(\"typing-action\").classList.add(\"on\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {},\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    this.formData = new FormData();\n    this.ORDER_ITEM_DISCUSSION = 0;\n    this.LIMIT_MESSAGES = 10;\n    this.SKIP_MESSAGES = 0;\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n  }\n\n  async componentWillMount() {\n    let uid = this.props.userPayload.user._id;\n    let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get user that send message to\n\n    let userFriend = await getUserById(this.toUid);\n    this.setState({\n      userFriend\n    });\n    this.handleCreateConnectSocket({\n      uid,\n      name\n    }, userFriend);\n  }\n\n  componentDidMount() {\n    try {\n      this.toUid = this.props.match.params.toUid;\n\n      window.onload = () => {\n        this.scrollToBottom();\n        document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages); // document.getElementById(\"video-call\").addEventListener(\"click\", this.onCallVideoStreaming)\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // get list messages\n\n      this.getMessageIndividualUser();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  startCall(isCaller, friendID, config) {\n    this.config = config;\n    this.pc = new PeerConnection(friendID).on('localStream', src => {\n      const newState = {\n        callWindow: 'active',\n        localSrc: src\n      };\n      if (!isCaller) newState.callModal = '';\n      this.setState(newState);\n    }).on('peerStream', src => this.setState({\n      peerSrc: src\n    })).start(isCaller, config);\n  }\n\n  rejectCall() {\n    const {\n      callFrom\n    } = this.state;\n    this.props.socket.emit('end', {\n      to: callFrom\n    });\n    this.setState({\n      callModal: ''\n    });\n  }\n\n  endCall(isStarter) {\n    if (_.isFunction(this.pc.stop)) {\n      this.pc.stop(isStarter);\n    }\n\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      callModal: '',\n      localSrc: null,\n      peerSrc: null\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      this.SKIP_MESSAGES = 0;\n      this.toUid = nextProps.match.params.toUid;\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // this.orderItemDiscussionToTop(toUid);\n\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.setState({\n        messages: []\n      });\n      this.getMessageIndividualUser(); // get user that send message to\n\n      let userFriend = await getUserById(this.toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      messages\n    } = this.state;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, \"Active now\")), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"video-call\",\n      className: \"btn d-md-block video-call\",\n      title: \"Video call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, messages.map((msg, i) => {\n      if (i === this.LIMIT_MESSAGES - 1) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          id: \"start-of-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }), React.createElement(ItemMessage, {\n          key: i,\n          isMe: msg.isMe,\n          content: msg.content,\n          contentPhoto: msg.contentPhoto,\n          photo: msg.photo,\n          date: moment(msg.date).fromNow() || \"just now\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(ItemMessage, {\n          key: i,\n          isMe: msg.isMe,\n          content: msg.content,\n          contentPhoto: msg.contentPhoto,\n          photo: msg.photo,\n          date: moment(msg.date).fromNow() || \"just now\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"typing-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, \"someone is typing ...\"), React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }))), React.createElement(VideoCallRequest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","_","PeerConnection","socketIOClient","withRouter","ItemMessage","Template","VideoCallRequest","getUserById","getMessageIndividualUser","postSavePrivateMessage","moment","require","ChatArea","Component","constructor","handleSendMessageFromIndividualUser","window","event","preventDefault","textMessage","document","getElementById","value","trim","formData","get","querySelector","src","classList","remove","orderItemDiscussionToTop","toUid","uid","props","userPayload","user","_id","photo","token","socket","emit","to","message","from","setState","messages","state","concat","isMe","content","innerText","scrollToBottom","append","then","res","console","log","delete","urlContainImage","dataImage","contentPhoto","catch","err","e","handleCreateConnectSocket","data","userFriend","process","env","REACT_APP_API_URL","transports","on","username","name","email","showNewMessageComming","callFrom","callModal","sdp","pc","setRemoteDescription","type","createAnswer","addIceCandidate","candidate","endCall","bind","userFriendId","currentUnread","Number","innerHTML","showUnReadMessage","cb","senderId","receiverId","limit","LIMIT_MESSAGES","skip","SKIP_MESSAGES","length","listMessage","countUnreadMessage","map","mes","objMessage","sender","date","created","receiver","isRead","push","onScrollGetMoreMessages","container","scrollTop","setTimeout","scrollToTop","scrollIntoView","behavior","el","style","order","ORDER_ITEM_DISCUSSION","onCallVideoStreaming","addEventListener","onEndCallVideoStreaming","add","count","showTypingAction","uTyping","previewPhoto","reader","FileReader","inputAvatar","onload","result","readAsDataURL","target","files","handlePasteToInput","items","clipboardData","originalEvent","blob","i","indexOf","getAsFile","clearFormDataImage","checkUserEnter","keyCode","toggleDropdown","drdElement","onlineUser","clientId","callWindow","localSrc","peerSrc","FormData","config","startCallHandler","startCall","endCallHandler","rejectCallHandler","rejectCall","componentWillMount","fullname","componentDidMount","match","params","isCaller","friendID","newState","start","isStarter","isFunction","stop","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","idTabElement","tabElement","msg","fromNow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\n\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from './VideoCallRequest';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\n// import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            messages: [],\n            onlineUser: [],\n            userFriend: {},\n\n            clientId: '',\n            callWindow: '',\n            callModal: '',\n            callFrom: '',\n            localSrc: null,\n            peerSrc: null\n        }\n\n        this.formData = new FormData();\n        this.ORDER_ITEM_DISCUSSION = 0;\n        this.LIMIT_MESSAGES = 10;\n        this.SKIP_MESSAGES = 0;\n\n        this.pc = {};\n        this.config = null;\n\n        this.startCallHandler = this.startCall.bind(this);\n        this.endCallHandler = this.endCall.bind(this);\n        this.rejectCallHandler = this.rejectCall.bind(this);\n    }\n\n    async componentWillMount() {\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        // get user that send message to\n        let userFriend = await getUserById(this.toUid);\n        this.setState({ userFriend })\n\n        this.handleCreateConnectSocket({ uid, name }, userFriend);\n    }\n\n    componentDidMount() {\n        try {\n            this.toUid = this.props.match.params.toUid;\n            window.onload = () => {\n                this.scrollToBottom();\n                document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n                // document.getElementById(\"video-call\").addEventListener(\"click\", this.onCallVideoStreaming)\n            }\n\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            // get list messages\n            this.getMessageIndividualUser()\n            \n        } catch (e) { console.log(e) }\n    }\n\n    startCall(isCaller, friendID, config) {\n        this.config = config;\n        this.pc = new PeerConnection(friendID)\n            .on('localStream', (src) => {\n                const newState = { callWindow: 'active', localSrc: src };\n                if (!isCaller) newState.callModal = '';\n                this.setState(newState);\n            })\n            .on('peerStream', src => this.setState({ peerSrc: src }))\n            .start(isCaller, config);\n    }\n\n    rejectCall() {\n        const { callFrom } = this.state;\n        this.props.socket.emit('end', { to: callFrom });\n        this.setState({ callModal: '' });\n    }\n\n    endCall(isStarter) {\n        if (_.isFunction(this.pc.stop)) {\n            this.pc.stop(isStarter);\n        }\n        this.pc = {};\n        this.config = null;\n        this.setState({\n            callWindow: '',\n            callModal: '',\n            localSrc: null,\n            peerSrc: null\n        });\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmount\")\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    async componentWillReceiveProps(nextProps) {\n        try {\n            this.SKIP_MESSAGES = 0;\n            this.toUid = nextProps.match.params.toUid;\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            // this.orderItemDiscussionToTop(toUid);\n\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            // get list messages\n            this.setState({ messages: [] });\n            this.getMessageIndividualUser();\n            // get user that send message to\n            let userFriend = await getUserById(this.toUid);\n            this.setState({ userFriend });\n\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n        } catch (e) { console.log(e) }\n        console.log(\"receive\")\n    }\n\n    handleSendMessageFromIndividualUser = () => {\n        try {\n            window.event.preventDefault();\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n                document.querySelector(\".preview-image #preview\").src = \"\";\n                document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                this.orderItemDiscussionToTop(this.toUid);\n\n                let uid = this.props.userPayload.user._id;\n                // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                let photo = this.props.userPayload.user.photo;\n                let token = this.props.userPayload.token;\n\n                // emit event\n                this.socket.emit(\"client-send-message-from-individual-user\", { to: this.toUid, message: textMessage.value, photo, from: uid }, () => {\n                    this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n                    document.querySelector(`#dcs_${this.toUid} p`).innerText = textMessage.value;\n                    textMessage.value = \"\";\n                    this.scrollToBottom();\n                });\n\n\n                // save private message to db\n                this.formData.append(\"sender\", uid);\n                this.formData.append(\"receiver\", this.toUid);\n                this.formData.append(\"content\", textMessage.value);\n                postSavePrivateMessage(this.formData, token)\n                    .then((res) => {\n                        console.log(res)\n                        this.formData.delete(\"photo\");\n                        if (res && res.urlContainImage) {\n                            let dataImage = {\n                                to: this.toUid,\n                                from: uid,\n                                photo,\n                                contentPhoto: res.urlContainImage,\n                                isMe: \"me\"\n                            }\n                            this.setState({\n                                messages: this.state.messages.concat(dataImage)\n                            });\n\n                            this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {\n\n                            });\n                        }\n                    })\n                    .catch(err => console.log(err));\n            }\n\n        } catch (e) { console.log(e) }\n    }\n\n    handleCreateConnectSocket = (data, userFriend) => {\n        try {\n            this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n            // wait client connect\n            this.socket.on('connect', () => {\n                console.log(\"socket connected\")\n                this.socket.emit(\"join-individual\", { uid: data.uid, username: data.name }, () => {\n                    console.log(`user ${this.props.userPayload.user.email} joined`);\n                });\n\n                this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ content: res.message, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, res.message, userFriend._id);\n\n                });\n\n                this.socket.on(\"server-send-message-contain-image-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend)\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ contentPhoto: res.contentPhoto, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n                });\n                \n                this.socket\n                .on('request', ({ from: callFrom }) => {\n                    this.setState({ callModal: 'on', callFrom });\n                })\n                .on('call', (data) => {\n                    if (data.sdp) {\n                        console.log(\"IFFFFFFF\", data.sdp)\n                        this.pc.setRemoteDescription(data.sdp);\n                        if (data.sdp.type === 'offer') {\n                            console.log(\"offer\");\n                            this.pc.createAnswer();\n                        }\n                    } else this.pc.addIceCandidate(data.candidate);\n                })\n                .on('end', this.endCall.bind(this, false))\n\n                \n            })\n        } catch (e) { console.log(e) }\n    }\n\n    showNewMessageComming = (from, message, userFriendId) => {\n        try {\n            document.querySelector(`#dcs_${from} p`).innerText = message;\n            this.orderItemDiscussionToTop(from);\n            let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n            this.showUnReadMessage(currentUnread, from);\n        } catch (e) { console.log(e) }\n    }\n\n    getMessageIndividualUser = (cb = null) => {\n        let token = this.props.userPayload.token;\n        let data = {\n            senderId: this.props.userPayload.user._id,\n            receiverId: this.toUid,\n            limit: this.LIMIT_MESSAGES,\n            skip: this.SKIP_MESSAGES\n        }\n        getMessageIndividualUser(data, token)\n            .then(res => {\n                console.log(res)\n                if (res.length > 0) {\n                    let listMessage = [];\n                    let countUnreadMessage = 0;\n                    res.map(mes => {\n                        let objMessage = {};\n                        let isMe = mes.sender._id === data.senderId ? true : false;\n                        objMessage.isMe = isMe === true ? \"me\" : \"\";\n                        objMessage.content = mes.content;\n                        objMessage.date = mes.created;\n                        objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n                        objMessage.contentPhoto = mes.photo;\n                        if (mes.sender._id !== data.senderId && mes.isRead === false) countUnreadMessage += 1;\n                        listMessage.push(objMessage);\n                    });\n                    this.setState({ messages: listMessage.concat(this.state.messages) });\n                    this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n                    this.showUnReadMessage(countUnreadMessage, data.receiverId);\n\n                    cb && cb();\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onScrollGetMoreMessages = () => {\n        try {\n            let container = document.querySelector(\"#chat-area .content .container\");\n            if (container.scrollTop === 0) {\n                this.getMessageIndividualUser(() => {\n                    setTimeout(this.scrollToTop, 0);\n                });\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    scrollToTop = () => {\n        try {\n            document.querySelector(\"#start-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    orderItemDiscussionToTop = (toUid) => {\n        let el = document.querySelector(`#dcs_${toUid}`);\n        console.log(el);\n        el.style.order = this.ORDER_ITEM_DISCUSSION;\n        this.ORDER_ITEM_DISCUSSION -= 1;\n        el.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onCallVideoStreaming = () => {\n        document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n        document.getElementById(\"call\").classList.add(\"on\");\n        this.socket.emit(\"call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    onEndCallVideoStreaming = () => {\n        document.getElementById(\"call\").classList.remove(\"on\");\n        this.socket.emit(\"end-call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    showUnReadMessage = (count, toUid) => {\n        try {\n            if (count > 0) {\n                document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n                document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    showTypingAction = (uTyping) => {\n        try {\n            document.getElementById(\"typing-action\").classList.add(\"on\");\n        } catch (e) { console.log(e) }\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            try {\n                this.handleSendMessageFromIndividualUser();\n            } catch (e) { console.log(e) }\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    render() {\n        let { userFriend, messages } = this.state;\n\n        let tabActive = document.querySelectorAll(\".item-discussions.active\");\n        Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n        // active tab\n        let idTabElement = `dcs_${userFriend._id}`;\n        let tabElement = document.getElementById(idTabElement);\n        if (tabElement) {\n            tabElement.classList.add(\"active\")\n        }\n        return (\n            <Template>\n                <div id=\"chat-area\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n                            <div className=\"status online\" />\n                            <div className=\"data\">\n                                <h5><a href=\"/users/\">{userFriend.fullname || userFriend.email}</a></h5>\n                                <span>Active now</span>\n                            </div>\n                            <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button id=\"video-call\" className=\"btn d-md-block video-call\" title=\"Video call\">\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button className=\"btn d-md-block \" title=\"Info\">\n                                <i className=\"ti-info\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block \" title=\"More\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a href=\"/\" className=\"voice\">Voice Call</a>\n                                    <a href=\"/\" className=\"voice\">Video Call</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                    <a href=\"/\" className=\"voice\">Delete Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"container\">\n                            {\n                                messages.map((msg, i) => {\n                                    if (i === this.LIMIT_MESSAGES - 1) {\n                                        return <>\n                                            <div id=\"start-of-message\"></div>\n                                            <ItemMessage\n                                                key={i}\n                                                isMe={msg.isMe}\n                                                content={msg.content}\n                                                contentPhoto={msg.contentPhoto}\n                                                photo={msg.photo}\n                                                date={moment(msg.date).fromNow() || \"just now\"}\n                                            />\n                                        </>\n                                    } else {\n                                        return <ItemMessage\n                                            key={i}\n                                            isMe={msg.isMe}\n                                            content={msg.content}\n                                            contentPhoto={msg.contentPhoto}\n                                            photo={msg.photo}\n                                            date={moment(msg.date).fromNow() || \"just now\"}\n                                        />\n                                    }\n                                })\n                            }\n                            {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n                            <div id=\"end-of-message\"></div>\n                        </div>\n                        <div className=\"scroller\" />\n                    </div>\n                    <div className=\"bottom\">\n                        <form className=\"text-area\">\n                            <div id=\"typing-action\">\n                                someone is typing ...\n              </div>\n                            <textarea\n                                id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                onPaste={this.handlePasteToInput}\n                            />\n                            <div className=\"add-smiles\">\n                                <span title=\"add icon\" className=\"em em-blush\" />\n                            </div>\n\n                            <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                            <label className=\"label-input input-file\">\n                                <input\n                                    type=\"file\" className=\"d-none\"\n                                    onChange={this.previewPhoto}\n                                />\n                                <i className=\"ti-clip\" />\n                            </label>\n                        </form>\n                    </div>\n                    <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                        <img id=\"preview\" src=\"\" alt=\"\" />\n                    </div>\n                </div>\n                <VideoCallRequest />\n            </Template>\n        )\n\n    }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}