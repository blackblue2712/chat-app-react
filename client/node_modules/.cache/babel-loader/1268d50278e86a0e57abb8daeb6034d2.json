{"ast":null,"code":"import { searchYoutube } from '../controllers/ChanelController';\nimport { relativeTimeThreshold } from 'moment';\n\nclass YoutubePlay {\n  constructor(player, onPlayQueue = [], startSeconds = 0) {\n    this.onPlayQueue = onPlayQueue;\n    this.onPlaying = false;\n    this.player = player;\n    this.onPlayingSong = null;\n    this.startSeconds = startSeconds;\n  }\n\n  searchYoutube(q) {\n    searchYoutube(q).then(res => {\n      let vid = res.videoId;\n\n      if (vid) {\n        this.onPlayQueue.push(vid);\n      }\n\n      if (!this.onPlaying) {\n        this.onPlayingSong = this.onPlayQueue.shift();\n        this.player.loadVideoById({\n          videoId: this.onPlayingSong,\n          startSeconds: this.startSeconds\n        });\n        this.player.playVideo();\n        this.onPlaying = true;\n      }\n\n      this.player.on('stateChange', event => {\n        if (event.data === 0) {\n          if (this.onPlayQueue.length > 0) {\n            this.onPlaying = true;\n            this.onPlayingSong = this.onPlayQueue.shift();\n            this.player.loadVideoById(this.onPlayingSong);\n            this.player.playVideo();\n          } else {\n            this.onPlaying = false;\n          }\n        }\n      });\n      console.log(this.player);\n    });\n  }\n\n  getPlayQueue() {\n    return this.onPlayQueue;\n  }\n\n  getIsPlaying() {\n    return this.onPlaying;\n  }\n\n  getCurrentTime() {\n    return this.player.getCurrentTime();\n  }\n\n  getCurrentSong() {\n    return this.onPlayingSong;\n  }\n\n}\n\nexport default YoutubePlay;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/YoutubePlay.js"],"names":["searchYoutube","relativeTimeThreshold","YoutubePlay","constructor","player","onPlayQueue","startSeconds","onPlaying","onPlayingSong","q","then","res","vid","videoId","push","shift","loadVideoById","playVideo","on","event","data","length","console","log","getPlayQueue","getIsPlaying","getCurrentTime","getCurrentSong"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iCAA9B;AACA,SAASC,qBAAT,QAAsC,QAAtC;;AAGA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,MAAD,EAASC,WAAW,GAAG,EAAvB,EAA2BC,YAAY,GAAG,CAA1C,EAA6C;AACpD,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKE,SAAL,GAAiB,KAAjB;AACA,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKI,aAAL,GAAqB,IAArB;AACA,SAAKF,YAAL,GAAoBA,YAApB;AACH;;AAEDN,EAAAA,aAAa,CAACS,CAAD,EAAI;AACbT,IAAAA,aAAa,CAACS,CAAD,CAAb,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIC,GAAG,GAAGD,GAAG,CAACE,OAAd;;AACA,UAAID,GAAJ,EAAS;AACL,aAAKP,WAAL,CAAiBS,IAAjB,CAAsBF,GAAtB;AACH;;AAED,UAAI,CAAC,KAAKL,SAAV,EAAqB;AACjB,aAAKC,aAAL,GAAqB,KAAKH,WAAL,CAAiBU,KAAjB,EAArB;AACA,aAAKX,MAAL,CAAYY,aAAZ,CAA0B;AACtBH,UAAAA,OAAO,EAAE,KAAKL,aADQ;AAEtBF,UAAAA,YAAY,EAAE,KAAKA;AAFG,SAA1B;AAIA,aAAKF,MAAL,CAAYa,SAAZ;AACA,aAAKV,SAAL,GAAiB,IAAjB;AACH;;AAGD,WAAKH,MAAL,CAAYc,EAAZ,CAAe,aAAf,EAA+BC,KAAD,IAAW;AACrC,YAAIA,KAAK,CAACC,IAAN,KAAe,CAAnB,EAAsB;AAClB,cAAI,KAAKf,WAAL,CAAiBgB,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,iBAAKd,SAAL,GAAiB,IAAjB;AACA,iBAAKC,aAAL,GAAqB,KAAKH,WAAL,CAAiBU,KAAjB,EAArB;AACA,iBAAKX,MAAL,CAAYY,aAAZ,CAA0B,KAAKR,aAA/B;AACA,iBAAKJ,MAAL,CAAYa,SAAZ;AACH,WALD,MAKO;AACH,iBAAKV,SAAL,GAAiB,KAAjB;AACH;AACJ;AACJ,OAXD;AAYAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,MAAjB;AACH,KA/BL;AAiCH;;AAEDoB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKnB,WAAZ;AACH;;AAEDoB,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKlB,SAAZ;AACH;;AAEDmB,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKtB,MAAL,CAAYsB,cAAZ,EAAP;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKnB,aAAZ;AACH;;AA3Da;;AA8DlB,eAAeN,WAAf","sourcesContent":["import { searchYoutube } from '../controllers/ChanelController';\nimport { relativeTimeThreshold } from 'moment';\n\n\nclass YoutubePlay {\n    constructor(player, onPlayQueue = [], startSeconds = 0) {\n        this.onPlayQueue = onPlayQueue;\n        this.onPlaying = false;\n        this.player = player;\n        this.onPlayingSong = null;\n        this.startSeconds = startSeconds;\n    }\n\n    searchYoutube(q) {\n        searchYoutube(q)\n            .then(res => {\n                let vid = res.videoId;\n                if (vid) {\n                    this.onPlayQueue.push(vid);\n                }\n\n                if (!this.onPlaying) {\n                    this.onPlayingSong = this.onPlayQueue.shift();\n                    this.player.loadVideoById({\n                        videoId: this.onPlayingSong,\n                        startSeconds: this.startSeconds\n                    });\n                    this.player.playVideo();\n                    this.onPlaying = true;\n                }\n\n\n                this.player.on('stateChange', (event) => {\n                    if (event.data === 0) {\n                        if (this.onPlayQueue.length > 0) {\n                            this.onPlaying = true;\n                            this.onPlayingSong = this.onPlayQueue.shift();\n                            this.player.loadVideoById(this.onPlayingSong);\n                            this.player.playVideo();\n                        } else {\n                            this.onPlaying = false;\n                        }\n                    }\n                });\n                console.log(this.player);\n            })\n\n    }\n    \n    getPlayQueue() {\n        return this.onPlayQueue;\n    }\n\n    getIsPlaying() {\n        return this.onPlaying;\n    }\n\n    getCurrentTime() {\n        return this.player.getCurrentTime();\n    }\n\n    getCurrentSong() {\n        return this.onPlayingSong;\n    }\n}\n\nexport default YoutubePlay;\n"]},"metadata":{},"sourceType":"module"}