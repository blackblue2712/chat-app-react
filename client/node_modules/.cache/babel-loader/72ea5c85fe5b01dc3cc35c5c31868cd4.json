{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\nimport ItemMessage from '../chats/ItemMessage';\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from '../calls/VideoCallRequest';\nimport VideoCallResponse from '../calls/VideoCallResponse'; // import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.callWithVideo = (video, screen) => {\n      const config = {\n        audio: true,\n        video\n      };\n      return () => this.startCall(true, this.toUid, config, screen);\n    };\n\n    this.callScreen = () => {\n      return;\n    };\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          console.log(\"call send\"); // document.querySelector(\".preview-image #preview\").src = \"\";\n          // document.querySelector(\".preview-image\").classList.remove(\"on\");\n          // this.orderItemDiscussionToTop(this.toUid);\n          // let uid = this.props.userPayload.user._id;\n          // // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n          // let photo = this.props.userPayload.user.photo;\n          // let token = this.props.userPayload.token;\n          // // emit event\n          // this.socket.emit(\"client-send-message-from-individual-user\", { to: this.toUid, message: textMessage.value.trim(), photo, from: uid }, () => {\n          //     this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n          //     textMessage.value = \"\";\n          //     this.scrollToBottom();\n          // });\n          // // save private message to db\n          // this.formData.append(\"sender\", uid);\n          // this.formData.append(\"receiver\", this.toUid);\n          // this.formData.append(\"content\", textMessage.value);\n          // postSavePrivateMessage(this.formData, token)\n          //     .then((res) => {\n          //         console.log(res)\n          //         this.formData.delete(\"photo\");\n          //         if (res && res.urlContainImage) {\n          //             let dataImage = {\n          //                 to: this.toUid,\n          //                 from: uid,\n          //                 photo,\n          //                 contentPhoto: res.urlContainImage,\n          //                 isMe: \"me\"\n          //             }\n          //             this.setState({\n          //                 messages: this.state.messages.concat(dataImage)\n          //             });\n          //             this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {\n          //             });\n          //         }\n          //     })\n          //     .catch(err => console.log(err));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleCreateConnectSocket = (data, userFriend) => {\n      try {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n          transports: ['websocket']\n        }); // wait client connect\n\n        this.socket.on('connect', () => {\n          console.log(\"socket connected\");\n          this.socket.emit(\"join-individual\", {\n            uid: data.uid,\n            username: data.name\n          }, () => {\n            console.log(`user ${this.props.userPayload.user.email} joined`);\n          });\n          this.socket.on(\"server-send-message-from-individual-user\", res => {\n            console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  content: res.message,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, res.message, userFriend._id);\n          });\n          this.socket.on(\"server-send-message-contain-image-from-individual-user\", res => {\n            console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  contentPhoto: res.contentPhoto,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n          });\n          this.socket.on('request', ({\n            from: callFrom\n          }) => {\n            this.setState({\n              callModal: 'on',\n              callFrom\n            });\n          }).on('call', data => {\n            if (data.sdp) {\n              console.log(\"IFFFFFFF\", data.sdp);\n              this.pc.setRemoteDescription(data.sdp);\n\n              if (data.sdp.type === 'offer') {\n                console.log(\"offer\");\n                this.pc.createAnswer();\n              }\n            } else this.pc.addIceCandidate(data.candidate);\n          }).on('end', this.endCall.bind(this, false));\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.showNewMessageComming = (from, message, userFriendId) => {\n      try {\n        // document.querySelector(`#dcs_${from} p`).innerText = message;\n        this.orderItemDiscussionToTop(from);\n        let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n        this.showUnReadMessage(currentUnread, from);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMessageIndividualUser = (cb = null) => {\n      let token = this.props.userPayload.token;\n      let data = {\n        senderId: this.props.userPayload.user._id,\n        receiverId: this.toUid,\n        limit: this.LIMIT_MESSAGES,\n        skip: this.SKIP_MESSAGES\n      };\n      getMessageIndividualUser(data, token).then(res => {\n        console.log(res);\n\n        if (res.length > 0) {\n          let listMessage = [];\n          let countUnreadMessage = 0;\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === data.senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n            objMessage.contentPhoto = mes.photo;\n            if (mes.sender._id !== data.senderId && mes.isRead === false) countUnreadMessage += 1;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: listMessage.concat(this.state.messages)\n          });\n          this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n          this.showUnReadMessage(countUnreadMessage, data.receiverId);\n          cb && cb();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onScrollGetMoreMessages = () => {\n      try {\n        let container = document.querySelector(\"#chat-area .content .container\");\n\n        if (container.scrollTop === 0) {\n          this.getMessageIndividualUser(() => {\n            setTimeout(this.scrollToTop, 0);\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.scrollToTop = () => {\n      try {\n        document.querySelector(\"#start-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.orderItemDiscussionToTop = toUid => {\n      let el = document.querySelector(`#dcs_${toUid}`);\n      console.log(el);\n      el.style.order = this.ORDER_ITEM_DISCUSSION;\n      this.ORDER_ITEM_DISCUSSION -= 1;\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.onCallVideoStreaming = () => {\n      document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n      document.getElementById(\"call\").classList.add(\"on\");\n      this.socket.emit(\"call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.onEndCallVideoStreaming = () => {\n      document.getElementById(\"call\").classList.remove(\"on\");\n      this.socket.emit(\"end-call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.showUnReadMessage = (count, toUid) => {\n      try {\n        if (count > 0) {\n          console.log(`#dcs_${toUid} .count-unread`);\n          document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n          document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.showTypingAction = uTyping => {\n      try {\n        document.getElementById(\"typing-action\").classList.add(\"on\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {},\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    this.formData = new FormData();\n    this.ORDER_ITEM_DISCUSSION = 0;\n    this.LIMIT_MESSAGES = 10;\n    this.SKIP_MESSAGES = 0;\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.toUid = this.props.match.params.toUid;\n\n      window.onload = () => {\n        this.scrollToBottom();\n        document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // get list messages\n\n      this.getMessageIndividualUser();\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get user that send message to\n\n      let userFriend = await getUserById(this.toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  startCall(isCaller, friendID, config, screen) {\n    this.config = config;\n    this.pc = new PeerConnection(friendID, this.props.userPayload.user._id).on('localStream', src => {\n      const newState = {\n        callWindow: 'on',\n        localSrc: src\n      };\n      if (!isCaller) newState.callModal = '';\n      this.setState(newState);\n    }).on('peerStream', src => this.setState({\n      peerSrc: src\n    })).start(isCaller, config, screen);\n  }\n\n  rejectCall() {\n    const {\n      callFrom\n    } = this.state;\n    this.socket.emit('end', {\n      to: callFrom\n    });\n    this.setState({\n      callModal: ''\n    });\n  }\n\n  endCall(isStarter) {\n    if (_.isFunction(this.pc.stop)) {\n      this.pc.stop(isStarter);\n    }\n\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      callModal: '',\n      localSrc: null,\n      peerSrc: null\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      this.SKIP_MESSAGES = 0;\n      this.toUid = nextProps.match.params.toUid;\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // this.orderItemDiscussionToTop(toUid);\n\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.setState({\n        messages: []\n      });\n      this.getMessageIndividualUser(); // get user that send message to\n\n      let userFriend = await getUserById(this.toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      messages,\n      callFrom,\n      callModal,\n      callWindow,\n      localSrc,\n      peerSrc\n    } = this.state;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      onClick: this.callWithVideo(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"video-call\",\n      className: \"btn d-md-block video-call\",\n      title: \"Video call\",\n      onClick: this.callWithVideo(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"Video screen\",\n      onClick: this.callWithVideo(true, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-layout-media-left-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.callWithVideo(false),\n      href: \"#voice-call\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      onClick: this.callWithVideo(true),\n      href: \"#video-call\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"a\", {\n      onClick: this.callWithVideo(true, true),\n      href: \"#video-screen\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"Video Screen\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"Block Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, messages.map((msg, i) => {\n      if (i === this.LIMIT_MESSAGES - 1) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          id: \"start-of-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }), React.createElement(ItemMessage, {\n          key: i,\n          isMe: msg.isMe,\n          content: msg.content,\n          contentPhoto: msg.contentPhoto,\n          photo: msg.photo,\n          date: moment(msg.date).fromNow() || \"just now\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(ItemMessage, {\n          key: i,\n          isMe: msg.isMe,\n          content: msg.content,\n          contentPhoto: msg.contentPhoto,\n          photo: msg.photo,\n          date: moment(msg.date).fromNow() || \"just now\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"typing-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, \"someone is typing ...\"), React.createElement(\"input\", {\n      autoComplete: \"off\",\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }))), !_.isEmpty(this.config) && React.createElement(VideoCallRequest, {\n      status: callWindow,\n      localSrc: localSrc,\n      peerSrc: peerSrc,\n      config: this.config,\n      mediaDevice: this.pc.mediaDevice,\n      endCall: this.endCallHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), React.createElement(VideoCallResponse, {\n      status: callModal,\n      startCall: this.startCallHandler,\n      rejectCall: this.rejectCallHandler,\n      callFrom: callFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","_","PeerConnection","socketIOClient","withRouter","getUserById","getMessageIndividualUser","postSavePrivateMessage","ItemMessage","Template","VideoCallRequest","VideoCallResponse","moment","require","ChatArea","Component","constructor","callWithVideo","video","screen","config","audio","startCall","toUid","callScreen","handleSendMessageFromIndividualUser","window","event","preventDefault","textMessage","document","getElementById","value","trim","formData","get","console","log","e","handleCreateConnectSocket","data","userFriend","socket","process","env","REACT_APP_API_URL","transports","on","emit","uid","username","name","props","userPayload","user","email","res","_id","from","setState","messages","state","concat","content","message","photo","showNewMessageComming","contentPhoto","callFrom","callModal","sdp","pc","setRemoteDescription","type","createAnswer","addIceCandidate","candidate","endCall","bind","userFriendId","orderItemDiscussionToTop","currentUnread","Number","querySelector","innerHTML","showUnReadMessage","cb","token","senderId","receiverId","limit","LIMIT_MESSAGES","skip","SKIP_MESSAGES","then","length","listMessage","countUnreadMessage","map","mes","objMessage","isMe","sender","date","created","receiver","isRead","push","catch","err","onScrollGetMoreMessages","container","scrollTop","setTimeout","scrollToTop","scrollIntoView","behavior","el","style","order","ORDER_ITEM_DISCUSSION","onCallVideoStreaming","addEventListener","onEndCallVideoStreaming","classList","add","to","remove","count","showTypingAction","uTyping","previewPhoto","reader","FileReader","inputAvatar","onload","src","result","readAsDataURL","target","files","append","handlePasteToInput","items","clipboardData","originalEvent","blob","i","indexOf","getAsFile","clearFormDataImage","delete","checkUserEnter","keyCode","toggleDropdown","drdElement","scrollToBottom","onlineUser","clientId","callWindow","localSrc","peerSrc","FormData","startCallHandler","endCallHandler","rejectCallHandler","rejectCall","componentDidMount","match","params","fullname","isCaller","friendID","newState","start","isStarter","isFunction","stop","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","idTabElement","tabElement","msg","fromNow","height","isEmpty","mediaDevice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\n\nimport ItemMessage from '../chats/ItemMessage';\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from '../calls/VideoCallRequest';\nimport VideoCallResponse from '../calls/VideoCallResponse';\n\n// import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            messages: [],\n            onlineUser: [],\n            userFriend: {},\n\n            clientId: '',\n            callWindow: '',\n            callModal: '',\n            callFrom: '',\n            localSrc: null,\n            peerSrc: null\n        }\n\n        this.formData = new FormData();\n        this.ORDER_ITEM_DISCUSSION = 0;\n        this.LIMIT_MESSAGES = 10;\n        this.SKIP_MESSAGES = 0;\n\n        this.pc = {};\n        this.config = null;\n\n        this.startCallHandler = this.startCall.bind(this);\n        this.endCallHandler = this.endCall.bind(this);\n        this.rejectCallHandler = this.rejectCall.bind(this);\n    }\n\n\n    async componentDidMount() {\n        try {\n            this.toUid = this.props.match.params.toUid;\n            window.onload = () => {\n                this.scrollToBottom();\n                document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n            }\n\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            // get list messages\n            this.getMessageIndividualUser();\n\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            // get user that send message to\n            let userFriend = await getUserById(this.toUid);\n            this.setState({ userFriend })\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n            \n        } catch (e) { console.log(e) }\n    }\n\n    callWithVideo = (video, screen) => {\n        const config = { audio: true, video };\n        return () => this.startCall(true, this.toUid, config, screen);\n    }\n\n    callScreen = () => {\n        return \n    }\n\n    startCall(isCaller, friendID, config, screen) {\n        this.config = config;\n        this.pc = new PeerConnection(friendID, this.props.userPayload.user._id)\n            .on('localStream', (src) => {\n                const newState = { callWindow: 'on', localSrc: src };\n                if (!isCaller) newState.callModal = '';\n                this.setState(newState);\n            })\n            .on('peerStream', src => this.setState({ peerSrc: src }))\n            .start(isCaller, config, screen);\n    }\n\n    rejectCall() {\n        const { callFrom } = this.state;\n        this.socket.emit('end', { to: callFrom });\n        this.setState({ callModal: '' });\n    }\n\n    endCall(isStarter) {\n        if (_.isFunction(this.pc.stop)) {\n            this.pc.stop(isStarter);\n        }\n        this.pc = {};\n        this.config = null;\n        this.setState({\n            callWindow: '',\n            callModal: '',\n            localSrc: null,\n            peerSrc: null\n        });\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmount\")\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    async componentWillReceiveProps(nextProps) {\n        try {\n            this.SKIP_MESSAGES = 0;\n            this.toUid = nextProps.match.params.toUid;\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            // this.orderItemDiscussionToTop(toUid);\n\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            // get list messages\n            this.setState({ messages: [] });\n            this.getMessageIndividualUser();\n            // get user that send message to\n            let userFriend = await getUserById(this.toUid);\n            this.setState({ userFriend });\n\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n        } catch (e) { console.log(e) }\n        console.log(\"receive\")\n    }\n\n    handleSendMessageFromIndividualUser = () => {\n        try {\n            window.event.preventDefault();\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n\n                console.log(\"call send\")\n                // document.querySelector(\".preview-image #preview\").src = \"\";\n                // document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                // this.orderItemDiscussionToTop(this.toUid);\n\n                // let uid = this.props.userPayload.user._id;\n                // // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                // let photo = this.props.userPayload.user.photo;\n                // let token = this.props.userPayload.token;\n\n                // // emit event\n                // this.socket.emit(\"client-send-message-from-individual-user\", { to: this.toUid, message: textMessage.value.trim(), photo, from: uid }, () => {\n                //     this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n                //     textMessage.value = \"\";\n                //     this.scrollToBottom();\n                // });\n\n\n                // // save private message to db\n                // this.formData.append(\"sender\", uid);\n                // this.formData.append(\"receiver\", this.toUid);\n                // this.formData.append(\"content\", textMessage.value);\n                // postSavePrivateMessage(this.formData, token)\n                //     .then((res) => {\n                //         console.log(res)\n                //         this.formData.delete(\"photo\");\n                //         if (res && res.urlContainImage) {\n                //             let dataImage = {\n                //                 to: this.toUid,\n                //                 from: uid,\n                //                 photo,\n                //                 contentPhoto: res.urlContainImage,\n                //                 isMe: \"me\"\n                //             }\n                //             this.setState({\n                //                 messages: this.state.messages.concat(dataImage)\n                //             });\n\n                //             this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {\n\n                //             });\n                //         }\n                //     })\n                //     .catch(err => console.log(err));\n            }\n\n        } catch (e) { console.log(e) }\n    }\n\n    handleCreateConnectSocket = (data, userFriend) => {\n        try {\n            this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n            // wait client connect\n            this.socket.on('connect', () => {\n                console.log(\"socket connected\")\n                this.socket.emit(\"join-individual\", { uid: data.uid, username: data.name }, () => {\n                    console.log(`user ${this.props.userPayload.user.email} joined`);\n                });\n\n                this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ content: res.message, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, res.message, userFriend._id);\n\n                });\n\n                this.socket.on(\"server-send-message-contain-image-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend)\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ contentPhoto: res.contentPhoto, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from, \"You have new photo.\", userFriend._id);\n                });\n                \n                this.socket\n                .on('request', ({ from: callFrom }) => {\n                    this.setState({ callModal: 'on', callFrom });\n                })\n                .on('call', (data) => {\n                    if (data.sdp) {\n                        console.log(\"IFFFFFFF\", data.sdp)\n                        this.pc.setRemoteDescription(data.sdp);\n                        if (data.sdp.type === 'offer') {\n                            console.log(\"offer\");\n                            this.pc.createAnswer();\n                        }\n                    } else this.pc.addIceCandidate(data.candidate);\n                })\n                .on('end', this.endCall.bind(this, false))\n\n                \n            })\n        } catch (e) { console.log(e) }\n    }\n\n    showNewMessageComming = (from, message, userFriendId) => {\n        try {\n            // document.querySelector(`#dcs_${from} p`).innerText = message;\n            this.orderItemDiscussionToTop(from);\n            let currentUnread = Number(document.querySelector(`#dcs_${userFriendId} .count-unread span`).innerHTML) + 1;\n            this.showUnReadMessage(currentUnread, from);\n        } catch (e) { console.log(e) }\n    }\n\n    getMessageIndividualUser = (cb = null) => {\n        let token = this.props.userPayload.token;\n        let data = {\n            senderId: this.props.userPayload.user._id,\n            receiverId: this.toUid,\n            limit: this.LIMIT_MESSAGES,\n            skip: this.SKIP_MESSAGES\n        }\n        getMessageIndividualUser(data, token)\n            .then(res => {\n                console.log(res)\n                if (res.length > 0) {\n                    let listMessage = [];\n                    let countUnreadMessage = 0;\n                    res.map(mes => {\n                        let objMessage = {};\n                        let isMe = mes.sender._id === data.senderId ? true : false;\n                        objMessage.isMe = isMe === true ? \"me\" : \"\";\n                        objMessage.content = mes.content;\n                        objMessage.date = mes.created;\n                        objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n                        objMessage.contentPhoto = mes.photo;\n                        if (mes.sender._id !== data.senderId && mes.isRead === false) countUnreadMessage += 1;\n                        listMessage.push(objMessage);\n                    });\n                    this.setState({ messages: listMessage.concat(this.state.messages) });\n                    this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n                    this.showUnReadMessage(countUnreadMessage, data.receiverId);\n\n                    cb && cb();\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onScrollGetMoreMessages = () => {\n        try {\n            let container = document.querySelector(\"#chat-area .content .container\");\n            if (container.scrollTop === 0) {\n                this.getMessageIndividualUser(() => {\n                    setTimeout(this.scrollToTop, 0);\n                });\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    scrollToTop = () => {\n        try {\n            document.querySelector(\"#start-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    orderItemDiscussionToTop = (toUid) => {\n        let el = document.querySelector(`#dcs_${toUid}`);\n        console.log(el);\n        el.style.order = this.ORDER_ITEM_DISCUSSION;\n        this.ORDER_ITEM_DISCUSSION -= 1;\n        el.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onCallVideoStreaming = () => {\n        document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n        document.getElementById(\"call\").classList.add(\"on\");\n        this.socket.emit(\"call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    onEndCallVideoStreaming = () => {\n        document.getElementById(\"call\").classList.remove(\"on\");\n        this.socket.emit(\"end-call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    showUnReadMessage = (count, toUid) => {\n        try {\n            if (count > 0) {\n                console.log(`#dcs_${toUid} .count-unread`)\n                document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n                document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    showTypingAction = (uTyping) => {\n        try {\n            document.getElementById(\"typing-action\").classList.add(\"on\");\n        } catch (e) { console.log(e) }\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            try {\n                this.handleSendMessageFromIndividualUser();\n            } catch (e) { console.log(e) }\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    render() {\n        let { userFriend, messages, callFrom, callModal, callWindow, localSrc, peerSrc } = this.state;\n\n        let tabActive = document.querySelectorAll(\".item-discussions.active\");\n        Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n        // active tab\n        let idTabElement = `dcs_${userFriend._id}`;\n        let tabElement = document.getElementById(idTabElement);\n        if (tabElement) {\n            tabElement.classList.add(\"active\")\n        }\n        return (\n            <Template>\n                <div id=\"chat-area\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n                            {/* <div className=\"status online\" /> */}\n                            <div className=\"data\">\n                                <h5><a href=\"/users/\">{userFriend.fullname || userFriend.email}</a></h5>\n                                {/* <span>Active now</span> */}\n                            </div>\n                            <button\n                                className=\"btn d-md-block audio-call\" title=\"Audio call\"\n                                onClick={this.callWithVideo(false)}\n                            >\n                                \n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button\n                                id=\"video-call\" className=\"btn d-md-block video-call\" title=\"Video call\"\n                                onClick={this.callWithVideo(true)}\n                            >\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button\n                                className=\"btn d-md-block \" title=\"Video screen\"\n                                onClick={this.callWithVideo(true, true)}\n                            >\n                                <i className=\"ti-layout-media-left-alt\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block \" title=\"More\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a onClick={this.callWithVideo(false)} href=\"#voice-call\" className=\"voice\">Voice Call</a>\n                                    <a onClick={this.callWithVideo(true)} href=\"#video-call\" className=\"voice\">Video Call</a>\n                                    <a onClick={this.callWithVideo(true, true)} href=\"#video-screen\" className=\"voice\">Video Screen</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"container\">\n                            {\n                                messages.map((msg, i) => {\n                                    if (i === this.LIMIT_MESSAGES - 1) {\n                                        return <>\n                                            <div id=\"start-of-message\"></div>\n                                            <ItemMessage\n                                                key={i}\n                                                isMe={msg.isMe}\n                                                content={msg.content}\n                                                contentPhoto={msg.contentPhoto}\n                                                photo={msg.photo}\n                                                date={moment(msg.date).fromNow() || \"just now\"}\n                                            />\n                                        </>\n                                    } else {\n                                        return <ItemMessage\n                                            key={i}\n                                            isMe={msg.isMe}\n                                            content={msg.content}\n                                            contentPhoto={msg.contentPhoto}\n                                            photo={msg.photo}\n                                            date={moment(msg.date).fromNow() || \"just now\"}\n                                        />\n                                    }\n                                })\n                            }\n                            {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n                            <div id=\"end-of-message\"></div>\n                        </div>\n                        <div className=\"scroller\" />\n                    </div>\n                    <div className=\"bottom\">\n                        <div className=\"text-area\">\n                            <div id=\"typing-action\">\n                                someone is typing ...\n              </div>\n                            <input\n                                autoComplete={\"off\"}\n                                id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                onPaste={this.handlePasteToInput}\n                            />\n                            <div className=\"add-smiles\">\n                                <span title=\"add icon\" className=\"em em-blush\" />\n                            </div>\n\n                            <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                            <label className=\"label-input input-file\">\n                                <input\n                                    type=\"file\" className=\"d-none\"\n                                    onChange={this.previewPhoto}\n                                />\n                                <i className=\"ti-clip\" />\n                            </label>\n                        </div>\n                    </div>\n                    <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                        <img id=\"preview\" src=\"\" alt=\"\" />\n                    </div>\n                </div>\n                {\n                    !_.isEmpty(this.config) && (\n                        <VideoCallRequest\n                            status={callWindow}\n                            localSrc={localSrc}\n                            peerSrc={peerSrc}\n                            config={this.config}\n                            mediaDevice={this.pc.mediaDevice}\n                            endCall={this.endCallHandler}\n                        />\n                    )\n                }\n                {\n                    <VideoCallResponse\n                        status={callModal}\n                        startCall={this.startCallHandler}\n                        rejectCall={this.rejectCallHandler}\n                        callFrom={callFrom}\n                    />\n                }\n            </Template>\n        )\n\n    }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}