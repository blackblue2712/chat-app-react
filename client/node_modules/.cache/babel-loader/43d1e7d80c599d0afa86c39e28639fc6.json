{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          toUid\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n        let uid = this.props.userPayload.user._id; // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n        let photo = this.props.userPayload.user.photo;\n        let token = this.props.userPayload.token;\n        this.socket.emit(\"client-send-message-from-individual-user\", {\n          to: toUid,\n          message: textMessage.value,\n          photo,\n          from: uid\n        }, () => {\n          this.setState({\n            messages: this.state.messages.concat({\n              isMe: \"me\",\n              content: textMessage.value\n            })\n          });\n          document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n          textMessage.value = \"\";\n          document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n        }); // save private message to db\n\n        postSavePrivateMessage({\n          sender: uid,\n          receiver: toUid,\n          content: textMessage.value\n        }, token).then(() => {}).catch(err => console.log(err));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleCreateConnectSocket = (data, userFriend) => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      }); // wait client connect\n\n      this.socket.on('connect', () => {\n        this.socket.emit(\"join-individual\", {\n          uid: data.uid,\n          username: data.name\n        }, () => {\n          console.log(`user ${this.props.userPayload.user.email} joined`);\n        });\n        this.socket.on(\"server-send-message-from-individual-user\", res => {\n          if (res.from === userFriend._id) {\n            this.setState({\n              messages: this.state.messages.concat({\n                content: res.message,\n                photo: res.photo\n              })\n            });\n          }\n\n          document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n          let currentUnread = Number(document.querySelector(`#dcs_${data.uid} .count-unread span`).innerHTML) + 1;\n          console.log(\"currentUnread\", currentUnread);\n          this.showUnReadMessage(currentUnread, res.from);\n        });\n        this.socket.on(\"server-send-message-contain-image-from-individual-user\", res => {\n          if (res.from === userFriend._id) {\n            this.setState({\n              messages: this.state.messages.concat({\n                content: res.message,\n                photo: res.photo\n              })\n            });\n          }\n\n          console.log(\"server-send-message-contain-image-from-individual-user\", sid, res.data);\n          document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n          let currentUnread = Number(document.querySelector(`#dcs_${data.uid} .count-unread span`).innerHTML) + 1;\n          this.showUnReadMessage(currentUnread, res.from);\n        });\n      });\n    };\n\n    this.getMessageIndividualUser = (senderId, receiverId, token) => {\n      getMessageIndividualUser(senderId, receiverId, token).then(res => {\n        console.log(res);\n\n        if (!res.message) {\n          let listMessage = [];\n          let countUnreadMessage = 0;\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n            if (mes.sender._id !== senderId && mes.isRead === false) countUnreadMessage += 1;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: this.state.messages.concat(listMessage)\n          });\n          this.showUnReadMessage(countUnreadMessage, receiverId);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.showUnReadMessage = (count, toUid) => {\n      try {\n        if (count > 0) {\n          document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n          document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.showTypingAction = uTyping => {\n      try {\n        document.getElementById(\"typing-action\").classList.add(\"on\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {}\n    };\n    this.formData = new FormData();\n  }\n\n  async componentDidMount() {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        toUid\n      } = this.props.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.getMessageIndividualUser(uid, toUid, token); // get user that send message to\n\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        toUid\n      } = nextProps.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token; // get list messages\n\n      this.setState({\n        messages: []\n      });\n      this.getMessageIndividualUser(uid, toUid, token); // get user that send message to\n\n      let userFriend = await getUserById(toUid);\n      this.setState({\n        userFriend\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      messages\n    } = this.state;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Active now\")), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, messages.map((msg, i) => {\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: msg.isMe,\n        content: item.content,\n        contentPhoto: item.photo,\n        photo: item.sender.photo,\n        date: moment(item.created).fromNow() || \"just now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"typing-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"someone is typing ...\"), React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","withRouter","ItemMessage","Template","socketIOClient","getUserById","getMessageIndividualUser","postSavePrivateMessage","moment","require","ChatArea","Component","constructor","handleSendMessageFromIndividualUser","window","event","preventDefault","toUid","props","match","params","textMessage","document","getElementById","uid","userPayload","user","_id","photo","token","socket","emit","to","message","value","from","setState","messages","state","concat","isMe","content","querySelector","innerText","scrollBy","sender","receiver","then","catch","err","console","log","e","handleCreateConnectSocket","data","userFriend","process","env","REACT_APP_API_URL","transports","on","username","name","email","res","currentUnread","Number","innerHTML","showUnReadMessage","sid","senderId","receiverId","listMessage","countUnreadMessage","map","mes","objMessage","date","created","isRead","push","count","classList","add","showTypingAction","uTyping","previewPhoto","reader","FileReader","inputAvatar","onload","src","result","readAsDataURL","target","files","formData","append","handlePasteToInput","items","clipboardData","originalEvent","blob","i","length","type","indexOf","getAsFile","clearFormDataImage","remove","delete","checkUserEnter","keyCode","toggleDropdown","drdElement","addEventListener","onlineUser","FormData","componentDidMount","fullname","componentWillUnmount","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","el","idTabElement","tabElement","msg","item","fromNow","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport Template from '../component/TemplateWithNavigation';\nimport socketIOClient from 'socket.io-client';\nimport { getUserById } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage } from '../controllers/PrivateChat';\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {}\n    }\n\n    this.formData = new FormData();\n  }\n\n  async componentDidMount() {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let { toUid } = this.props.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      // get list messages\n      this.getMessageIndividualUser(uid, toUid, token)\n      // get user that send message to\n      let userFriend = await getUserById(toUid);\n      this.setState({userFriend})\n\n      this.handleCreateConnectSocket({uid, name}, userFriend);\n    } catch(e) { console.log(e) }\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\")\n  }\n\n  handleSendMessageFromIndividualUser = () => {\n    try {\n      window.event.preventDefault();\n      let { toUid } = this.props.match.params;\n      let textMessage = document.getElementById(\"text-message\");\n      let uid = this.props.userPayload.user._id;\n      // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n      let token = this.props.userPayload.token;\n\n      this.socket.emit(\"client-send-message-from-individual-user\", { to: toUid, message: textMessage.value, photo, from: uid }, () => {\n        this.setState( {messages: this.state.messages.concat( {isMe: \"me\", content: textMessage.value} )} );\n        document.querySelector(`#dcs_${toUid} p`).innerText = textMessage.value;\n        textMessage.value = \"\";\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n      });\n\n\n      // save private message to db\n      postSavePrivateMessage({\n        sender: uid,\n        receiver: toUid,\n        content: textMessage.value\n      }, token)\n      .then( () => {} )\n      .catch( err => console.log(err) );\n\n    } catch (e) { console.log(e) }\n  }\n\n  handleCreateConnectSocket = (data, userFriend) => {\n    this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n    // wait client connect\n    this.socket.on('connect', () => {\n\n      this.socket.emit(\"join-individual\", {uid: data.uid, username: data.name}, () => {\n        console.log(`user ${this.props.userPayload.user.email} joined`);\n      });\n\n      this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n        if(res.from === userFriend._id) {\n          this.setState( {messages: this.state.messages.concat( {content: res.message, photo: res.photo} )} );\n        }\n        document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n        let currentUnread = Number(document.querySelector(`#dcs_${data.uid} .count-unread span`).innerHTML) + 1;\n        console.log(\"currentUnread\", currentUnread);\n        this.showUnReadMessage(currentUnread, res.from);\n      });\n\n      this.socket.on(\"server-send-message-contain-image-from-individual-user\", (res) => {\n        if(res.from === userFriend._id) {\n          this.setState( {messages: this.state.messages.concat( {content: res.message, photo: res.photo} )} );\n        }\n        console.log(\"server-send-message-contain-image-from-individual-user\", sid, res.data);\n        document.querySelector(`#dcs_${res.from} p`).innerText = res.message;\n        let currentUnread = Number(document.querySelector(`#dcs_${data.uid} .count-unread span`).innerHTML) + 1;\n        this.showUnReadMessage(currentUnread, res.from);\n      });\n    })\n  }\n\n  getMessageIndividualUser = (senderId, receiverId, token) => {\n    getMessageIndividualUser(senderId, receiverId, token)\n    .then( res => {\n      console.log(res)\n      if(!res.message) {\n        let listMessage = [];\n        let countUnreadMessage = 0;\n        res.map( mes => {\n          let objMessage = {};\n          let isMe = mes.sender._id === senderId ? true : false;\n          objMessage.isMe = isMe === true ? \"me\" : \"\";\n          objMessage.content = mes.content;\n          objMessage.date = mes.created;\n          objMessage.photo = isMe === true? mes.receiver.photo : mes.sender.photo;\n          if(mes.sender._id !== senderId && mes.isRead === false) countUnreadMessage += 1;\n          listMessage.push(objMessage);\n        });\n        this.setState( {messages: this.state.messages.concat(listMessage) });\n        this.showUnReadMessage(countUnreadMessage, receiverId);\n      }\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  showUnReadMessage = (count, toUid) => {\n    try {\n      if(count > 0) {\n        document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n        document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n      }\n    } catch (err) { console.log(err) } \n  }\n\n  showTypingAction = (uTyping) => {\n    try {\n      document.getElementById(\"typing-action\").classList.add(\"on\");\n    } catch (e) { console.log(e) }\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let { toUid } = nextProps.match.params;\n      let uid = this.props.userPayload.user._id;\n      let token = this.props.userPayload.token;\n      // get list messages\n      this.setState({messages: []});\n      this.getMessageIndividualUser(uid, toUid, token)\n      // get user that send message to\n      let userFriend = await getUserById(toUid);\n      this.setState({userFriend})\n\n\n    } catch(e) { console.log(e) }\n    console.log(\"receive\")\n  }\n\n  previewPhoto = (event) => {\n    let reader = new FileReader();\n    document.querySelector('.preview-image').classList.add(\"on\");\n    let inputAvatar = document.querySelector('.preview-image #preview');\n    reader.onload = function () {\n      inputAvatar.src = reader.result;\n    }\n    try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n    } catch(e) {\n        // do nothing\n    }\n  }\n  handlePasteToInput = (event) => {\n    try {\n      let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n      // find pasted image among pasted items\n      let blob = null;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf(\"image\") === 0) {\n          blob = items[i].getAsFile();\n        }\n      }\n      // load image if there is a pasted image\n      if (blob !== null) {\n        let reader = new FileReader();\n        reader.onload = function(event) {\n          document.querySelector('.preview-image').classList.add(\"on\");\n          document.querySelector(\".preview-image #preview\").src = this.result;\n        };\n        reader.readAsDataURL(blob);\n        this.formData.append(\"photo\", blob);\n      }\n    } catch (e) { console.log(e) }\n  }\n\n  clearFormDataImage = () => {\n    document.querySelector('.preview-image').classList.remove(\"on\");\n    document.querySelector('.preview-image #preview').src = \"\";\n    this.formData.delete(\"photo\");\n  }\n\n  checkUserEnter = (e) => {\n    if (e.keyCode === 13) {\n      try {\n        this.handleSendMessageFromIndividualUser();\n      } catch (e) { console.log(e) }\n    }\n  }\n\n  toggleDropdown = () => {\n    try {\n      let drdElement = document.querySelector(\"#chat-area .list-more\");\n      if (drdElement.classList.length > 2) {\n        drdElement.classList.remove(\"active\");\n      } else {\n        drdElement.classList.add(\"active\");\n        document.getElementById(\"root\").addEventListener(\"click\", () => {\n          drdElement.classList.remove(\"active\");\n        });\n      }\n    } catch (e) { }\n  }\n\n  render() {\n    let { userFriend, messages } = this.state;\n\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map( el => { el.classList.remove(\"active\") } );\n    // active tab\n    let idTabElement = `dcs_${userFriend._id}`;\n    let tabElement = document.getElementById(idTabElement);\n    if(tabElement) {\n      tabElement.classList.add(\"active\")\n    }\n    return (\n      <Template>\n        <div id=\"chat-area\">\n          <div className=\"top\">\n            <div className=\"inside\">\n              <div className=\"status online\" />\n              <div className=\"data\">\n                <h5><a href=\"/users/\">{ userFriend.fullname || userFriend.email }</a></h5>\n                <span>Active now</span>\n              </div>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-headphone-alt\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-video-camera\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-info\" />\n              </button>\n\n              <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                  <i className=\"ti-gird\" />\n                </button>\n\n                <div className=\"dropdown-list list-more\">\n                  <a href=\"/\" className=\"voice\">Voice Call</a>\n                  <a href=\"/\" className=\"voice\">Video Call</a>\n                  <hr />\n                  <a href=\"/\" className=\"voice\">Clear History</a>\n                  <a href=\"/\" className=\"voice\">Block Contact</a>\n                  <a href=\"/\" className=\"voice\">Delete Contact</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"content\">\n            <div className=\"container\">\n              {\n                messages.map( (msg, i) => {\n                  return <ItemMessage \n                    key={i}\n                    isMe={msg.isMe}\n                    content={item.content}\n                    contentPhoto={item.photo}\n                    photo={item.sender.photo}\n                    date={moment(item.created).fromNow() || \"just now\"}\n                  />\n                })\n              }\n              {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n              \n            </div>\n            <div className=\"scroller\" />\n          </div>\n          <div className=\"bottom\">\n            <form className=\"text-area\">\n              <div id=\"typing-action\">\n                someone is typing ... \n              </div>\n              <textarea\n                id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                onPaste={this.handlePasteToInput}\n              />\n              <div className=\"add-smiles\">\n                <span title=\"add icon\" className=\"em em-blush\" />\n              </div>\n              \n              <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n              <label className=\"label-input input-file\">\n                <input\n                  type=\"file\" className=\"d-none\"\n                  onChange={this.previewPhoto}\n                />\n                <i className=\"ti-clip\" />\n              </label>\n            </form>\n          </div>\n          <div onClick={this.clearFormDataImage} className=\"preview-image\">\n            <img id=\"preview\" src=\"\" alt=\"\"/>\n          </div>\n        </div>\n        {/* <div id=\"call-area\">\n            </div> */}\n      </Template>\n    )\n\n  }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}