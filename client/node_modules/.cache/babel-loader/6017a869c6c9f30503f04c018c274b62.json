{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\nimport { getUserById, isAuthenticated } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage, getTotalUnreadMessages, readMessage } from '../controllers/PrivateChat';\nimport ItemMessage from '../chats/ItemMessage';\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from '../calls/VideoCallRequest';\nimport VideoCallResponse from '../calls/VideoCallResponse';\nimport NTF_SOUND from '../imgs/ntf.mp3'; // import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n  constructor() {\n    super();\n\n    this.callWithVideo = (video, screen) => {\n      const config = {\n        audio: true,\n        video\n      };\n      return () => this.startCall(true, this.toUid, config, screen);\n    };\n\n    this.handleSendMessageFromIndividualUser = () => {\n      try {\n        window.event.preventDefault();\n        let textMessage = document.getElementById(\"text-message\");\n\n        if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n          document.querySelector(\".preview-image #preview\").src = \"\";\n          document.querySelector(\".preview-image\").classList.remove(\"on\");\n          this.orderItemDiscussionToTop(this.toUid);\n          let uid = this.props.userPayload.user._id; // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n\n          let photo = this.props.userPayload.user.photo;\n          let token = this.props.userPayload.token; // emit event\n\n          this.socket.emit(\"client-send-message-from-individual-user\", {\n            to: this.toUid,\n            message: textMessage.value.trim(),\n            photo,\n            from: uid\n          }, () => {\n            this.setState({\n              messages: this.state.messages.concat({\n                isMe: \"me\",\n                content: textMessage.value\n              })\n            });\n            textMessage.value = \"\";\n            this.scrollToBottom();\n          }); // save private message to db\n\n          this.formData.append(\"sender\", uid);\n          this.formData.append(\"receiver\", this.toUid);\n          this.formData.append(\"content\", textMessage.value);\n          postSavePrivateMessage(this.formData, token).then(res => {\n            console.log(res);\n            this.formData.delete(\"photo\");\n\n            if (res && res.urlContainImage) {\n              let dataImage = {\n                to: this.toUid,\n                from: uid,\n                photo,\n                contentPhoto: res.urlContainImage,\n                isMe: \"me\"\n              };\n              this.setState({\n                messages: this.state.messages.concat(dataImage)\n              });\n              this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {});\n            }\n          }).catch(err => console.log(err));\n          this.readMessage(uid);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleCreateConnectSocket = (data, userFriend) => {\n      try {\n        this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n          transports: ['websocket']\n        }); // wait client connect\n\n        this.socket.on('connect', () => {\n          this.socket.emit(\"join-individual\", {\n            uid: data.uid,\n            username: data.name\n          }, () => {\n            console.log(`user ${this.props.userPayload.user.email} joined`);\n          });\n          this.socket.on(\"server-send-message-from-individual-user\", res => {\n            document.getElementById(\"ntfSound\").play();\n            console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  content: res.message,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from);\n          });\n          this.socket.on(\"user-online\", data => {\n            let userOnline = document.querySelector(`#dcs_${data} .status`);\n\n            if (userOnline) {\n              userOnline.classList.add(\"online\");\n            }\n          });\n          this.socket.on(\"user-offline\", data => {\n            let userOffline = document.querySelector(`#dcs_${data} .status`);\n\n            if (userOffline) {\n              userOffline.classList.remove(\"online\");\n            }\n          });\n          this.socket.on(\"server-send-message-contain-image-from-individual-user\", res => {\n            console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend);\n\n            if (res.from === userFriend._id) {\n              this.setState({\n                messages: this.state.messages.concat({\n                  contentPhoto: res.contentPhoto,\n                  photo: res.photo\n                })\n              });\n            }\n\n            this.showNewMessageComming(res.from);\n          });\n          this.socket.on('request', ({\n            from: callFrom\n          }) => {\n            this.setState({\n              callModal: 'on',\n              callFrom\n            });\n          }).on('call', data => {\n            if (data.sdp) {\n              console.log(\"IFFFFFFF\", data.sdp);\n              this.pc.setRemoteDescription(data.sdp);\n\n              if (data.sdp.type === 'offer') {\n                console.log(\"offer\");\n                this.pc.createAnswer();\n              }\n            } else this.pc.addIceCandidate(data.candidate);\n          }).on('end', this.endCall.bind(this, false));\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.showNewMessageComming = from => {\n      try {\n        this.orderItemDiscussionToTop(from);\n        let currentUnread = Number(document.querySelector(`#dcs_${from} .count-unread span`).innerHTML) + 1;\n        console.log(currentUnread);\n        this.showUnReadMessage(currentUnread, from);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.readMessage = uid => {\n      try {\n        let el = document.querySelector(`#dcs_${this.toUid} .count-unread span`);\n\n        if (Number(el.innerHTML) > 0) {\n          readMessage(uid, this.toUid).then(() => {\n            el.innerHTML = 0;\n            document.querySelector(`#dcs_${this.toUid} .count-unread`).classList.remove(\"on\");\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getMessageIndividualUser = (cb = null) => {\n      let token = this.props.userPayload.token;\n      let data = {\n        senderId: this.props.userPayload.user._id,\n        receiverId: this.toUid,\n        limit: this.LIMIT_MESSAGES,\n        skip: this.SKIP_MESSAGES\n      };\n      getMessageIndividualUser(data, token).then(res => {\n        if (res.length > 0) {\n          let listMessage = [];\n          res.map(mes => {\n            let objMessage = {};\n            let isMe = mes.sender._id === data.senderId ? true : false;\n            objMessage.isMe = isMe === true ? \"me\" : \"\";\n            objMessage.content = mes.content;\n            objMessage.date = mes.created;\n            objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n            objMessage.contentPhoto = mes.photo;\n            listMessage.push(objMessage);\n          });\n          this.setState({\n            messages: listMessage.concat(this.state.messages)\n          });\n          this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n          cb && cb();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getTotalUnreadMessages = (uid, token) => {\n      getTotalUnreadMessages(uid, token).then(res => {\n        if (res && res.totalUnreadObject.length > 0) {\n          res.totalUnreadObject.forEach(obj => {\n            this.showUnReadMessage(obj.n, obj._id);\n          });\n        }\n      });\n    };\n\n    this.onScrollGetMoreMessages = () => {\n      try {\n        let container = document.querySelector(\"#chat-area .content .container\");\n\n        if (container.scrollTop === 0) {\n          this.getMessageIndividualUser(() => {\n            setTimeout(this.scrollToTop, 0);\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.scrollToTop = () => {\n      try {\n        document.querySelector(\"#start-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.orderItemDiscussionToTop = toUid => {\n      let el = document.querySelector(`#dcs_${toUid}`);\n      el.style.order = this.ORDER_ITEM_DISCUSSION;\n      this.ORDER_ITEM_DISCUSSION -= 1;\n      el.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.onCallVideoStreaming = () => {\n      document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n      document.getElementById(\"call\").classList.add(\"on\");\n      this.socket.emit(\"call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.onEndCallVideoStreaming = () => {\n      document.getElementById(\"call\").classList.remove(\"on\");\n      this.socket.emit(\"end-call-video-from-individual-user\", {\n        from: this.props.userPayload.user._id,\n        to: this.toUid\n      });\n    };\n\n    this.showUnReadMessage = (count, toUid) => {\n      try {\n        if (count > 0) {\n          document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n          document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.showTypingAction = uTyping => {\n      try {\n        document.getElementById(\"typing-action\").classList.add(\"on\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.previewPhoto = event => {\n      let reader = new FileReader();\n      document.querySelector('.preview-image').classList.add(\"on\");\n      let inputAvatar = document.querySelector('.preview-image #preview');\n\n      reader.onload = function () {\n        inputAvatar.src = reader.result;\n      };\n\n      try {\n        reader.readAsDataURL(event.target.files[0]);\n        this.formData.append(\"photo\", event.target.files[0]);\n      } catch (e) {// do nothing\n      }\n    };\n\n    this.handlePasteToInput = event => {\n      try {\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items; // find pasted image among pasted items\n\n        let blob = null;\n\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].type.indexOf(\"image\") === 0) {\n            blob = items[i].getAsFile();\n          }\n        } // load image if there is a pasted image\n\n\n        if (blob !== null) {\n          let reader = new FileReader();\n\n          reader.onload = function (event) {\n            document.querySelector('.preview-image').classList.add(\"on\");\n            document.querySelector(\".preview-image #preview\").src = this.result;\n          };\n\n          reader.readAsDataURL(blob);\n          this.formData.append(\"photo\", blob);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.clearFormDataImage = () => {\n      document.querySelector('.preview-image').classList.remove(\"on\");\n      document.querySelector('.preview-image #preview').src = \"\";\n      this.formData.delete(\"photo\");\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        try {\n          this.handleSendMessageFromIndividualUser();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.renderMessages = () => {\n      let {\n        messages\n      } = this.state;\n\n      if (messages.length > 0) {\n        return messages.map((msg, i) => {\n          if (i === this.LIMIT_MESSAGES - 1) {\n            return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n              id: \"start-of-message\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 470\n              },\n              __self: this\n            }), React.createElement(ItemMessage, {\n              key: i,\n              isMe: msg.isMe,\n              content: msg.content,\n              contentPhoto: msg.contentPhoto,\n              photo: msg.photo,\n              date: moment(msg.date).fromNow() || \"just now\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 471\n              },\n              __self: this\n            }));\n          } else {\n            return React.createElement(ItemMessage, {\n              key: i,\n              isMe: msg.isMe,\n              content: msg.content,\n              contentPhoto: msg.contentPhoto,\n              photo: msg.photo,\n              date: moment(msg.date).fromNow() || \"just now\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 481\n              },\n              __self: this\n            });\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"loading-messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      messages: [],\n      onlineUser: [],\n      userFriend: {},\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null\n    };\n    this.formData = new FormData();\n    this.ORDER_ITEM_DISCUSSION = 0;\n    this.LIMIT_MESSAGES = 10;\n    this.SKIP_MESSAGES = 0;\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      this.toUid = this.props.match.params.toUid;\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let token = this.props.userPayload.token;\n\n      window.onload = () => {\n        this.scrollToBottom();\n        document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n        document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      }; // get list messages & total unread messages\n\n\n      this.getMessageIndividualUser();\n      this.getTotalUnreadMessages(uid, token); // get user that send message to\n\n      let userFriend = await getUserById(this.toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n  } // onTypingAction = () => {\n  //     let uid = this.props.userPayload.user._id;\n  //     this.socket.emit(\"typing-action\", { to: this.toUid, from: uid }, () => {\n  //         this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n  //         textMessage.value = \"\";\n  //         this.scrollToBottom();\n  //     });\n  // }\n\n\n  startCall(isCaller, friendID, config, screen) {\n    this.config = config;\n    this.pc = new PeerConnection(friendID, this.props.userPayload.user._id).on('localStream', src => {\n      const newState = {\n        callWindow: 'on',\n        localSrc: src\n      };\n      if (!isCaller) newState.callModal = '';\n      this.setState(newState);\n    }).on('peerStream', src => this.setState({\n      peerSrc: src\n    })).start(isCaller, config, screen);\n  }\n\n  rejectCall() {\n    const {\n      callFrom\n    } = this.state;\n    this.socket.emit('end', {\n      to: callFrom\n    });\n    this.setState({\n      callModal: ''\n    });\n  }\n\n  endCall(isStarter) {\n    if (_.isFunction(this.pc.stop)) {\n      this.pc.stop(isStarter);\n    }\n\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      callModal: '',\n      localSrc: null,\n      peerSrc: null\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.emit(\"user-offline\", isAuthenticated().user._id);\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n    document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    try {\n      this.SKIP_MESSAGES = 0;\n      this.toUid = nextProps.match.params.toUid;\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter); // this.orderItemDiscussionToTop(toUid);\n\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email; // get list messages\n\n      this.setState({\n        messages: []\n      });\n      this.getMessageIndividualUser(); // get user that send message to\n\n      let userFriend = await getUserById(this.toUid);\n      this.setState({\n        userFriend\n      });\n      this.handleCreateConnectSocket({\n        uid,\n        name\n      }, userFriend);\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"receive\");\n  }\n\n  render() {\n    let {\n      userFriend,\n      callFrom,\n      callModal,\n      callWindow,\n      localSrc,\n      peerSrc\n    } = this.state;\n    return React.createElement(Template, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/users/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, userFriend.fullname || userFriend.email))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      onClick: this.callWithVideo(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"video-call\",\n      className: \"btn d-md-block video-call\",\n      title: \"Video call\",\n      onClick: this.callWithVideo(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"Video screen\",\n      onClick: this.callWithVideo(true, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-layout-media-left-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block \",\n      title: \"More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.callWithVideo(false),\n      href: \"#voice-call\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      onClick: this.callWithVideo(true),\n      href: \"#video-call\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"a\", {\n      onClick: this.callWithVideo(true, true),\n      href: \"#video-screen\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, \"Video Screen\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, \"Block Contact\"))))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, this.renderMessages(), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"typing-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, \"someone is typing ...\"), React.createElement(\"input\", {\n      autoComplete: \"off\",\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      onPaste: this.handlePasteToInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromIndividualUser,\n      style: {\n        height: '56x'\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"label-input input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      onChange: this.previewPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.clearFormDataImage,\n      className: \"preview-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"preview\",\n      src: \"\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }))), !_.isEmpty(this.config) && React.createElement(VideoCallRequest, {\n      status: callWindow,\n      localSrc: localSrc,\n      peerSrc: peerSrc,\n      config: this.config,\n      mediaDevice: this.pc.mediaDevice,\n      endCall: this.endCallHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }), React.createElement(VideoCallResponse, {\n      status: callModal,\n      startCall: this.startCallHandler,\n      rejectCall: this.rejectCallHandler,\n      callFrom: callFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"ntfSound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: NTF_SOUND,\n      type: \"audio/mpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(ChatArea);","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatArea.js"],"names":["React","_","PeerConnection","socketIOClient","withRouter","getUserById","isAuthenticated","getMessageIndividualUser","postSavePrivateMessage","getTotalUnreadMessages","readMessage","ItemMessage","Template","VideoCallRequest","VideoCallResponse","NTF_SOUND","moment","require","ChatArea","Component","constructor","callWithVideo","video","screen","config","audio","startCall","toUid","handleSendMessageFromIndividualUser","window","event","preventDefault","textMessage","document","getElementById","value","trim","formData","get","querySelector","src","classList","remove","orderItemDiscussionToTop","uid","props","userPayload","user","_id","photo","token","socket","emit","to","message","from","setState","messages","state","concat","isMe","content","scrollToBottom","append","then","res","console","log","delete","urlContainImage","dataImage","contentPhoto","catch","err","e","handleCreateConnectSocket","data","userFriend","process","env","REACT_APP_API_URL","transports","on","username","name","email","play","showNewMessageComming","userOnline","add","userOffline","callFrom","callModal","sdp","pc","setRemoteDescription","type","createAnswer","addIceCandidate","candidate","endCall","bind","currentUnread","Number","innerHTML","showUnReadMessage","el","cb","senderId","receiverId","limit","LIMIT_MESSAGES","skip","SKIP_MESSAGES","length","listMessage","map","mes","objMessage","sender","date","created","receiver","push","totalUnreadObject","forEach","obj","n","onScrollGetMoreMessages","container","scrollTop","setTimeout","scrollToTop","scrollIntoView","behavior","style","order","ORDER_ITEM_DISCUSSION","onCallVideoStreaming","addEventListener","onEndCallVideoStreaming","count","showTypingAction","uTyping","previewPhoto","reader","FileReader","inputAvatar","onload","result","readAsDataURL","target","files","handlePasteToInput","items","clipboardData","originalEvent","blob","i","indexOf","getAsFile","clearFormDataImage","checkUserEnter","keyCode","toggleDropdown","drdElement","renderMessages","msg","fromNow","onlineUser","clientId","callWindow","localSrc","peerSrc","FormData","startCallHandler","endCallHandler","rejectCallHandler","rejectCall","componentDidMount","match","params","fullname","isCaller","friendID","newState","start","isStarter","isFunction","stop","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","render","height","isEmpty","mediaDevice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PeerConnection from '../calls/PeerConnection';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router-dom';\nimport { getUserById, isAuthenticated } from '../controllers/UserController';\nimport { getMessageIndividualUser, postSavePrivateMessage, getTotalUnreadMessages, readMessage } from '../controllers/PrivateChat';\n\nimport ItemMessage from '../chats/ItemMessage';\nimport Template from '../component/TemplateWithNavigation';\nimport VideoCallRequest from '../calls/VideoCallRequest';\nimport VideoCallResponse from '../calls/VideoCallResponse';\nimport NTF_SOUND from '../imgs/ntf.mp3';\n\n// import socket from \"../socket\";\n\nconst moment = require(\"moment\");\n\nclass ChatArea extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            messages: [],\n            onlineUser: [],\n            userFriend: {},\n\n            clientId: '',\n            callWindow: '',\n            callModal: '',\n            callFrom: '',\n            localSrc: null,\n            peerSrc: null\n        }\n\n        this.formData = new FormData();\n\n        this.ORDER_ITEM_DISCUSSION = 0;\n        this.LIMIT_MESSAGES = 10;\n        this.SKIP_MESSAGES = 0;\n\n        this.pc = {};\n        this.config = null;\n\n        this.startCallHandler = this.startCall.bind(this);\n        this.endCallHandler = this.endCall.bind(this);\n        this.rejectCallHandler = this.rejectCall.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            this.toUid = this.props.match.params.toUid;\n            \n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            let token = this.props.userPayload.token;\n\n            window.onload = () => {\n                this.scrollToBottom();\n                document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n                document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            }\n            // get list messages & total unread messages\n            this.getMessageIndividualUser();\n            this.getTotalUnreadMessages(uid, token);\n            // get user that send message to\n            let userFriend = await getUserById(this.toUid);\n            this.setState({ userFriend })\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n            \n        } catch (e) { console.log(e) }\n    }\n\n        // onTypingAction = () => {\n        //     let uid = this.props.userPayload.user._id;\n        //     this.socket.emit(\"typing-action\", { to: this.toUid, from: uid }, () => {\n        //         this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n        //         textMessage.value = \"\";\n        //         this.scrollToBottom();\n        //     });\n\n        // }\n\n    \n\n    callWithVideo = (video, screen) => {\n        const config = { audio: true, video };\n        return () => this.startCall(true, this.toUid, config, screen);\n    }\n\n    startCall(isCaller, friendID, config, screen) {\n        this.config = config;\n        this.pc = new PeerConnection(friendID, this.props.userPayload.user._id)\n            .on('localStream', (src) => {\n                const newState = { callWindow: 'on', localSrc: src };\n                if (!isCaller) newState.callModal = '';\n                this.setState(newState);\n            })\n            .on('peerStream', src => this.setState({ peerSrc: src }))\n            .start(isCaller, config, screen);\n    }\n\n    rejectCall() {\n        const { callFrom } = this.state;\n        this.socket.emit('end', { to: callFrom });\n        this.setState({ callModal: '' });\n    }\n\n    endCall(isStarter) {\n        if (_.isFunction(this.pc.stop)) {\n            this.pc.stop(isStarter);\n        }\n        this.pc = {};\n        this.config = null;\n        this.setState({\n            callWindow: '',\n            callModal: '',\n            localSrc: null,\n            peerSrc: null\n        });\n    }\n\n    componentWillUnmount() {\n        this.socket.emit(\"user-offline\", isAuthenticated().user._id)\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n        document.querySelector(\"#chat-area .content .container\").addEventListener(\"scroll\", this.onScrollGetMoreMessages);\n    }\n\n    async componentWillReceiveProps(nextProps) {\n        try {\n            this.SKIP_MESSAGES = 0;\n            this.toUid = nextProps.match.params.toUid;\n            document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n            // this.orderItemDiscussionToTop(toUid);\n\n            let uid = this.props.userPayload.user._id;\n            let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n            // get list messages\n            this.setState({ messages: [] });\n            this.getMessageIndividualUser();\n            // get user that send message to\n            let userFriend = await getUserById(this.toUid);\n            this.setState({ userFriend });\n\n\n            this.handleCreateConnectSocket({ uid, name }, userFriend);\n        } catch (e) { console.log(e) }\n        console.log(\"receive\")\n    }\n\n    handleSendMessageFromIndividualUser = () => {\n        try {\n            window.event.preventDefault();\n            let textMessage = document.getElementById(\"text-message\");\n            if (textMessage.value.trim() || this.formData.get(\"photo\")) {\n\n                document.querySelector(\".preview-image #preview\").src = \"\";\n                document.querySelector(\".preview-image\").classList.remove(\"on\");\n\n                this.orderItemDiscussionToTop(this.toUid);\n\n                let uid = this.props.userPayload.user._id;\n                // let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n                let photo = this.props.userPayload.user.photo;\n                let token = this.props.userPayload.token;\n\n                // emit event\n                this.socket.emit(\"client-send-message-from-individual-user\", { to: this.toUid, message: textMessage.value.trim(), photo, from: uid }, () => {\n                    this.setState({ messages: this.state.messages.concat({ isMe: \"me\", content: textMessage.value }) });\n                    textMessage.value = \"\";\n                    this.scrollToBottom();\n                });\n\n\n                // save private message to db\n                this.formData.append(\"sender\", uid);\n                this.formData.append(\"receiver\", this.toUid);\n                this.formData.append(\"content\", textMessage.value);\n                postSavePrivateMessage(this.formData, token)\n                    .then((res) => {\n                        console.log(res)\n                        this.formData.delete(\"photo\");\n                        if (res && res.urlContainImage) {\n                            let dataImage = {\n                                to: this.toUid,\n                                from: uid,\n                                photo,\n                                contentPhoto: res.urlContainImage,\n                                isMe: \"me\"\n                            }\n                            this.setState({\n                                messages: this.state.messages.concat(dataImage)\n                            });\n\n                            this.socket.emit(\"client-send-message-contain-image-from-individual-user\", dataImage, () => {\n\n                            });\n                        }\n                    })\n                    .catch(err => console.log(err));\n\n                    this.readMessage(uid);\n            }\n\n        } catch (e) { console.log(e) }\n    }\n\n    handleCreateConnectSocket = (data, userFriend) => {\n        try {\n            this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n            // wait client connect\n            this.socket.on('connect', () => {\n                this.socket.emit(\"join-individual\", { uid: data.uid, username: data.name }, () => {\n                    console.log(`user ${this.props.userPayload.user.email} joined`);\n                });\n\n                this.socket.on(\"server-send-message-from-individual-user\", (res) => {\n                    document.getElementById(\"ntfSound\").play();\n                    console.log(\"server-send-message-from-individual-user\", res, userFriend._id);\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ content: res.message, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from);\n                });\n                this.socket.on(\"user-online\", data => {\n                    let userOnline = document.querySelector(`#dcs_${data} .status`);\n                    if(userOnline) {\n                        userOnline.classList.add(\"online\")\n                    }\n                })\n                this.socket.on(\"user-offline\", data => {\n                    let userOffline = document.querySelector(`#dcs_${data} .status`);\n                    if(userOffline) {\n                        userOffline.classList.remove(\"online\")\n                    }\n                })\n\n                this.socket.on(\"server-send-message-contain-image-from-individual-user\", (res) => {\n                    console.log(\"server-send-message-contain-image-from-individual-user\", res, userFriend)\n                    if (res.from === userFriend._id) {\n                        this.setState({ messages: this.state.messages.concat({ contentPhoto: res.contentPhoto, photo: res.photo }) });\n                    }\n                    this.showNewMessageComming(res.from);\n                });\n                \n                this.socket\n                .on('request', ({ from: callFrom }) => {\n                    this.setState({ callModal: 'on', callFrom });\n                })\n                .on('call', (data) => {\n                    if (data.sdp) {\n                        console.log(\"IFFFFFFF\", data.sdp)\n                        this.pc.setRemoteDescription(data.sdp);\n                        if (data.sdp.type === 'offer') {\n                            console.log(\"offer\");\n                            this.pc.createAnswer();\n                        }\n                    } else this.pc.addIceCandidate(data.candidate);\n                })\n                .on('end', this.endCall.bind(this, false))\n\n                \n            })\n        } catch (e) { console.log(e) }\n    }\n\n    showNewMessageComming = (from) => {\n        try {\n            this.orderItemDiscussionToTop(from);\n            let currentUnread = Number(document.querySelector(`#dcs_${from} .count-unread span`).innerHTML) + 1;\n            console.log(currentUnread)\n            this.showUnReadMessage(currentUnread, from);\n        } catch (e) { console.log(e) }\n    }\n\n    readMessage = (uid) => {\n        try {\n            let el = document.querySelector(`#dcs_${this.toUid} .count-unread span`);\n            if(Number(el.innerHTML) > 0) {\n                readMessage(uid, this.toUid)\n                .then( () => {\n                    el.innerHTML = 0;\n                    document.querySelector(`#dcs_${this.toUid} .count-unread`).classList.remove(\"on\");\n                });\n            }\n        } catch(err) { console.log(err) }\n    }\n\n    getMessageIndividualUser = (cb = null) => {\n        let token = this.props.userPayload.token;\n        let data = {\n            senderId: this.props.userPayload.user._id,\n            receiverId: this.toUid,\n            limit: this.LIMIT_MESSAGES,\n            skip: this.SKIP_MESSAGES\n        }\n        getMessageIndividualUser(data, token)\n            .then(res => {\n                if (res.length > 0) {\n                    let listMessage = [];\n                    res.map(mes => {\n                        let objMessage = {};\n                        let isMe = mes.sender._id === data.senderId ? true : false;\n                        objMessage.isMe = isMe === true ? \"me\" : \"\";\n                        objMessage.content = mes.content;\n                        objMessage.date = mes.created;\n                        objMessage.photo = isMe === true ? mes.receiver.photo : mes.sender.photo;\n                        objMessage.contentPhoto = mes.photo;\n                        listMessage.push(objMessage);\n                    });\n                    this.setState({ messages: listMessage.concat(this.state.messages) });\n                    this.SKIP_MESSAGES += this.LIMIT_MESSAGES;\n\n                    cb && cb();\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    getTotalUnreadMessages = (uid, token) => {\n        getTotalUnreadMessages(uid, token)\n            .then( res => {\n                if(res && res.totalUnreadObject.length > 0) {\n                    res.totalUnreadObject.forEach( obj => {\n                        this.showUnReadMessage(obj.n, obj._id);\n                    });\n                }\n            });\n    }\n\n    onScrollGetMoreMessages = () => {\n        try {\n            let container = document.querySelector(\"#chat-area .content .container\");\n            if (container.scrollTop === 0) {\n                this.getMessageIndividualUser(() => {\n                    setTimeout(this.scrollToTop, 0);\n                });\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    scrollToTop = () => {\n        try {\n            document.querySelector(\"#start-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    orderItemDiscussionToTop = (toUid) => {\n        let el = document.querySelector(`#dcs_${toUid}`);\n        el.style.order = this.ORDER_ITEM_DISCUSSION;\n        this.ORDER_ITEM_DISCUSSION -= 1;\n        el.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onCallVideoStreaming = () => {\n        document.getElementById(\"end-call-video\").addEventListener(\"click\", this.onEndCallVideoStreaming);\n        document.getElementById(\"call\").classList.add(\"on\");\n        this.socket.emit(\"call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    onEndCallVideoStreaming = () => {\n        document.getElementById(\"call\").classList.remove(\"on\");\n        this.socket.emit(\"end-call-video-from-individual-user\", {\n            from: this.props.userPayload.user._id,\n            to: this.toUid\n        });\n    }\n\n    showUnReadMessage = (count, toUid) => {\n        try {\n            if (count > 0) {\n                document.querySelector(`#dcs_${toUid} .count-unread`).classList.add(\"on\");\n                document.querySelector(`#dcs_${toUid} .count-unread span`).innerHTML = count;\n            }\n        } catch (err) { console.log(err) }\n    }\n\n    showTypingAction = (uTyping) => {\n        try {\n            document.getElementById(\"typing-action\").classList.add(\"on\");\n        } catch (e) { console.log(e) }\n    }\n\n    previewPhoto = (event) => {\n        let reader = new FileReader();\n        document.querySelector('.preview-image').classList.add(\"on\");\n        let inputAvatar = document.querySelector('.preview-image #preview');\n        reader.onload = function () {\n            inputAvatar.src = reader.result;\n        }\n        try {\n            reader.readAsDataURL(event.target.files[0]);\n            this.formData.append(\"photo\", event.target.files[0]);\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    handlePasteToInput = (event) => {\n        try {\n            let items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            // find pasted image among pasted items\n            let blob = null;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf(\"image\") === 0) {\n                    blob = items[i].getAsFile();\n                }\n            }\n            // load image if there is a pasted image\n            if (blob !== null) {\n                let reader = new FileReader();\n                reader.onload = function (event) {\n                    document.querySelector('.preview-image').classList.add(\"on\");\n                    document.querySelector(\".preview-image #preview\").src = this.result;\n                };\n                reader.readAsDataURL(blob);\n                this.formData.append(\"photo\", blob);\n            }\n        } catch (e) { console.log(e) }\n    }\n\n    clearFormDataImage = () => {\n        document.querySelector('.preview-image').classList.remove(\"on\");\n        document.querySelector('.preview-image #preview').src = \"\";\n        this.formData.delete(\"photo\");\n    }\n\n    checkUserEnter = (e) => {\n        if (e.keyCode === 13) {\n            try {\n                this.handleSendMessageFromIndividualUser();\n            } catch (e) { console.log(e) }\n        }\n    }\n\n    toggleDropdown = () => {\n        try {\n            let drdElement = document.querySelector(\"#chat-area .list-more\");\n            if (drdElement.classList.length > 2) {\n                drdElement.classList.remove(\"active\");\n            } else {\n                drdElement.classList.add(\"active\");\n                document.getElementById(\"root\").addEventListener(\"click\", () => {\n                    drdElement.classList.remove(\"active\");\n                });\n            }\n        } catch (e) { }\n    }\n\n    scrollToBottom = () => {\n        try {\n            document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n        } catch (e) { }\n    }\n\n    renderMessages = () => {\n        let { messages } = this.state;\n        if(messages.length > 0) {\n            return messages.map((msg, i) => {\n                if (i === this.LIMIT_MESSAGES - 1) {\n                    return <>\n                        <div id=\"start-of-message\"></div>\n                        <ItemMessage\n                            key={i}\n                            isMe={msg.isMe}\n                            content={msg.content}\n                            contentPhoto={msg.contentPhoto}\n                            photo={msg.photo}\n                            date={moment(msg.date).fromNow() || \"just now\"}\n                        />\n                    </>\n                } else {\n                    return <ItemMessage\n                        key={i}\n                        isMe={msg.isMe}\n                        content={msg.content}\n                        contentPhoto={msg.contentPhoto}\n                        photo={msg.photo}\n                        date={moment(msg.date).fromNow() || \"just now\"}\n                    />\n                }\n            })\n        }\n        return <div className=\"loading-messages\"></div>\n    }\n\n    \n\n    render() {\n        let { userFriend, callFrom, callModal, callWindow, localSrc, peerSrc } = this.state;\n        return (\n            <Template>\n                <div id=\"chat-area\">\n                    <div className=\"top\">\n                        <div className=\"inside\">\n                            {/* <div className=\"status online\" /> */}\n                            <div className=\"data\">\n                                <h5><a href=\"/users/\">{userFriend.fullname || userFriend.email}</a></h5>\n                                {/* <span>Active now</span> */}\n                            </div>\n                            <button\n                                className=\"btn d-md-block audio-call\" title=\"Audio call\"\n                                onClick={this.callWithVideo(false)}\n                            >\n                                \n                                <i className=\"ti-headphone-alt\" />\n                            </button>\n                            <button\n                                id=\"video-call\" className=\"btn d-md-block video-call\" title=\"Video call\"\n                                onClick={this.callWithVideo(true)}\n                            >\n                                <i className=\"ti-video-camera\" />\n                            </button>\n                            <button\n                                className=\"btn d-md-block \" title=\"Video screen\"\n                                onClick={this.callWithVideo(true, true)}\n                            >\n                                <i className=\"ti-layout-media-left-alt\" />\n                            </button>\n\n                            <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                                <button className=\"btn d-md-block \" title=\"More\">\n                                    <i className=\"ti-gird\" />\n                                </button>\n\n                                <div className=\"dropdown-list list-more\">\n                                    <a onClick={this.callWithVideo(false)} href=\"#voice-call\" className=\"voice\">Voice Call</a>\n                                    <a onClick={this.callWithVideo(true)} href=\"#video-call\" className=\"voice\">Video Call</a>\n                                    <a onClick={this.callWithVideo(true, true)} href=\"#video-screen\" className=\"voice\">Video Screen</a>\n                                    <hr />\n                                    <a href=\"/\" className=\"voice\">Clear History</a>\n                                    <a href=\"/\" className=\"voice\">Block Contact</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"container\">\n                            { this.renderMessages() }\n                            {/* <div className=\"date\">\n                    <hr />\n                    <span>Yesterday</span>\n                    <hr />\n                  </div>\n              */}\n                            <div id=\"end-of-message\"></div>\n                        </div>\n                        <div className=\"scroller\" />\n                    </div>\n                    <div className=\"bottom\">\n                        <div className=\"text-area\">\n                            <div id=\"typing-action\">\n                                someone is typing ...\n              </div>\n                            <input\n                                autoComplete={\"off\"}\n                                id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n                                onPaste={this.handlePasteToInput}\n                            />\n                            <div className=\"add-smiles\">\n                                <span title=\"add icon\" className=\"em em-blush\" />\n                            </div>\n\n                            <button onClick={this.handleSendMessageFromIndividualUser} style={{ height: '56x' }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                            <label className=\"label-input input-file\">\n                                <input\n                                    type=\"file\" className=\"d-none\"\n                                    onChange={this.previewPhoto}\n                                />\n                                <i className=\"ti-clip\" />\n                            </label>\n                        </div>\n                    </div>\n                    <div onClick={this.clearFormDataImage} className=\"preview-image\">\n                        <img id=\"preview\" src=\"\" alt=\"\" />\n                    </div>\n                </div>\n                {\n                    !_.isEmpty(this.config) && (\n                        <VideoCallRequest\n                            status={callWindow}\n                            localSrc={localSrc}\n                            peerSrc={peerSrc}\n                            config={this.config}\n                            mediaDevice={this.pc.mediaDevice}\n                            endCall={this.endCallHandler}\n                        />\n                    )\n                }\n                {\n                    <VideoCallResponse\n                        status={callModal}\n                        startCall={this.startCallHandler}\n                        rejectCall={this.rejectCallHandler}\n                        callFrom={callFrom}\n                    />\n                }\n                <audio id=\"ntfSound\">\n                    <source src={NTF_SOUND} type=\"audio/mpeg\" />\n                </audio>\n            </Template>\n        )\n\n    }\n}\n\nexport default withRouter(ChatArea);"]},"metadata":{},"sourceType":"module"}