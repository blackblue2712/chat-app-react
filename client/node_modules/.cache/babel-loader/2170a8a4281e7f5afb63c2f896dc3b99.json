{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js\";\nimport React from 'react';\nimport ItemMessage from '../chats/ItemMessage'; // import ItemMessageAttachment from '../chats/ItemMessageAttachment';\n\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n\n    this.scrollToBottom = () => {\n      try {\n        document.querySelector(\"#end-of-message\").scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } catch (e) {}\n    };\n\n    this.handleCreateConnectSocket = () => {\n      this.socket = socketIOClient(process.env.REACT_APP_API_URL, {\n        transports: ['websocket']\n      });\n      let {\n        chanelId\n      } = this.props.match.params; // wait client connect\n\n      this.socket.on('connect', () => {\n        let sid = this.socket.id;\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        this.socket.emit(\"join-chanel\", {\n          sid,\n          uid,\n          name,\n          photo,\n          chanelId\n        }, () => {\n          console.log(\"User has join this chanel\", chanelId);\n        });\n        this.socket.on(\"server-send-message-from-chanel\", res => {\n          console.log(\"server-send-message-from-chanel\", sid, res.data);\n          if (uid === res.data.sender._id) res.data.isMe = \"me\";\n          this.setState({\n            messageList: this.state.messageList.concat(res.data)\n          });\n        });\n        this.socket.on(\"list-connected-chanel-users\", users => {\n          this.setState({\n            onlineUsers: users\n          });\n        });\n      });\n    };\n\n    this.handleSendMessageFromChanel = () => {\n      try {\n        window.event.preventDefault();\n        let {\n          chanelId\n        } = this.props.match.params;\n        let textMessage = document.getElementById(\"text-message\");\n        let uid = this.props.userPayload.user._id;\n        let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n        let photo = this.props.userPayload.user.photo;\n        let token = this.props.userPayload.token;\n        this.socket.emit(\"client-send-message-from-chanel\", {\n          chanelId,\n          content: textMessage.value,\n          sender: {\n            _id: uid,\n            name,\n            photo\n          }\n        }, () => {\n          textMessage.value = \"\";\n          document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n        });\n        postSaveChanelMessage({\n          cid: chanelId,\n          uid,\n          content: textMessage.value\n        }, token).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.checkUserEnter = e => {\n      if (e.keyCode === 13) {\n        this.handleSendMessageFromChanel();\n      }\n    };\n\n    this.toggleDropdown = () => {\n      try {\n        let drdElement = document.querySelector(\"#chat-area .list-more\");\n\n        if (drdElement.classList.length > 2) {\n          drdElement.classList.remove(\"active\");\n        } else {\n          drdElement.classList.add(\"active\");\n          document.getElementById(\"root\").addEventListener(\"click\", () => {\n            drdElement.classList.remove(\"active\");\n          });\n        }\n      } catch (e) {}\n    };\n\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    };\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      window.onload = () => {\n        let CONTENT_HEIGHT = document.querySelector(\"#chat-area .content\").scrollHeight;\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, CONTENT_HEIGHT);\n      };\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter);\n      let {\n        chanelId\n      } = this.props.match.params; // Get chanel info\n\n      getSingleChanel(chanelId).then(res => {\n        if (!res.message) {\n          this.setState({\n            chanel: res,\n            messageList: res.chanelMessages\n          });\n        }\n      }); // Socket realtime\n\n      this.handleCreateConnectSocket();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"receive props\");\n    this.handleCreateConnectSocket();\n    let {\n      chanelId\n    } = nextProps.match.params;\n    getSingleChanel(chanelId).then(res => {\n      if (!res.message) {\n        this.setState({\n          chanel: res,\n          messageList: res.chanelMessages\n        });\n      }\n    });\n  }\n\n  render() {\n    let {\n      messageList,\n      onlineUsers,\n      chanel\n    } = this.state;\n    let uid = this.props.userPayload.user._id;\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => {\n      el.classList.remove(\"active\");\n    }); // active tab\n\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n\n    if (tabElement) {\n      tabElement.classList.add(\"active\");\n    }\n\n    return React.createElement(Template, {\n      tabPenel: \"-none\",\n      widthRight: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chat-area\",\n      className: \"chat-server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/chanels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, chanel.chanelName))), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-headphone-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown\",\n      onClick: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn d-md-block audio-call\",\n      title: \"Audio call\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-gird\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdown-list list-more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Voice Call\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Video Call\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Clear History\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Block Contact\"), React.createElement(\"a\", {\n      href: \"/\",\n      className: \"voice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Delete Contact\"))))), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, messageList.map((item, i) => {\n      return React.createElement(ItemMessage, {\n        key: i,\n        isMe: item.sender._id === uid ? \"me\" : \"\",\n        content: item.content,\n        date: moment(item.created).fromNow() || \"just now\",\n        photo: item.sender.photo,\n        name: item.sender.fullname || item.sender.email,\n        uid: item.sender._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      id: \"end-of-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scroller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"text-message\",\n      className: \"form-control\",\n      placeholder: \"Start typing for reply...\",\n      rows: 1,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-smiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"add icon\",\n      className: \"em em-blush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleSendMessageFromChanel,\n      style: {\n        height: '56x',\n        outline: \"none\"\n      },\n      type: \"submit\",\n      className: \"btn send\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"d-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"btn attach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ti-clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"container tab-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chanel user-online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Member online\"), onlineUsers.map((user, i) => {\n      return React.createElement(\"a\", {\n        key: i,\n        href: \"#list-chat\",\n        className: \"item-discussions single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatar-md\",\n        src: user.photo,\n        alt: \"avt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, user.name)));\n    }), React.createElement(\"a\", {\n      href: \"#list-chat\",\n      className: \"item-discussions single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar-md\",\n      src: settingImage,\n      alt: \"avt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"status offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Bob Frank\"))))))));\n  }\n\n}\n\nexport default ChatServerArea;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/chat-app/src/chats/ChatServerArea.js"],"names":["React","ItemMessage","socketIOClient","Template","settingImage","getSingleChanel","postSaveChanelMessage","moment","require","ChatServerArea","Component","constructor","scrollToBottom","document","querySelector","scrollIntoView","behavior","e","handleCreateConnectSocket","socket","process","env","REACT_APP_API_URL","transports","chanelId","props","match","params","on","sid","id","uid","userPayload","user","_id","name","fullname","email","photo","emit","console","log","res","data","sender","isMe","setState","messageList","state","concat","users","onlineUsers","handleSendMessageFromChanel","window","event","preventDefault","textMessage","getElementById","token","content","value","scrollBy","cid","then","catch","err","checkUserEnter","keyCode","toggleDropdown","drdElement","classList","length","remove","add","addEventListener","chanel","componentDidMount","onload","CONTENT_HEIGHT","scrollHeight","message","chanelMessages","componentWillReceiveProps","nextProps","render","tabActive","querySelectorAll","Array","from","map","el","idTabElement","tabElement","chanelName","item","i","created","fromNow","height","outline"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ItemMessage from '../chats/ItemMessage';\n// import ItemMessageAttachment from '../chats/ItemMessageAttachment';\nimport socketIOClient from 'socket.io-client';\nimport Template from '../component/TemplateWithNavigationForChanel';\nimport settingImage from '../imgs/867443.jpg';\nimport \"./chatServerArea.css\";\n\nimport { getSingleChanel, postSaveChanelMessage } from \"../controllers/ChanelController\";\n\nconst moment = require(\"moment\");\n\nclass ChatServerArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messageList: [],\n      onlineUsers: [],\n      chanel: {}\n    }\n  }\n\n  componentDidMount() {\n    try {\n      // Scroll content message to bottom\n      window.onload = () => {\n        let CONTENT_HEIGHT = document.querySelector(\"#chat-area .content\").scrollHeight;\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, CONTENT_HEIGHT);\n      }\n\n      document.getElementById(\"text-message\").addEventListener(\"keyup\", this.checkUserEnter)\n      let { chanelId } = this.props.match.params;\n      // Get chanel info\n      getSingleChanel(chanelId)\n        .then(res => {\n          if (!res.message) {\n            this.setState({\n              chanel: res,\n              messageList: res.chanelMessages\n            });\n          }\n        });\n\n      // Socket realtime\n      this.handleCreateConnectSocket();\n\n    } catch (e) { console.log(e) }\n  }\n\n  scrollToBottom = () => {\n    try {\n      document.querySelector(\"#end-of-message\").scrollIntoView({ behavior: \"smooth\" });\n    } catch(e) { }\n  }\n\n  handleCreateConnectSocket = () => {\n    this.socket = socketIOClient(process.env.REACT_APP_API_URL, { transports: ['websocket'] });\n    let { chanelId } = this.props.match.params;\n    // wait client connect\n    this.socket.on('connect', () => {\n\n      let sid = this.socket.id;\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n\n      this.socket.emit(\"join-chanel\", { sid, uid, name, photo, chanelId }, () => {\n        console.log(\"User has join this chanel\", chanelId);\n      })\n\n      this.socket.on(\"server-send-message-from-chanel\", (res) => {\n        console.log(\"server-send-message-from-chanel\", sid, res.data);\n        if (uid === res.data.sender._id) res.data.isMe = \"me\";\n        this.setState({ messageList: this.state.messageList.concat(res.data) })\n      });\n      this.socket.on(\"list-connected-chanel-users\", users => {\n        this.setState({ onlineUsers: users })\n      })\n\n    });\n  }\n\n  handleSendMessageFromChanel = () => {\n    try {\n      window.event.preventDefault();\n      let { chanelId } = this.props.match.params;\n      let textMessage = document.getElementById(\"text-message\");\n\n      let uid = this.props.userPayload.user._id;\n      let name = this.props.userPayload.user.fullname || this.props.userPayload.user.email;\n      let photo = this.props.userPayload.user.photo;\n      let token = this.props.userPayload.token;\n\n      this.socket.emit(\"client-send-message-from-chanel\", { chanelId, content: textMessage.value, sender: { _id: uid, name, photo } }, () => {\n        textMessage.value = \"\";\n        document.querySelector(\"#chat-area .content .container\").scrollBy(0, 2000);\n      })\n\n      postSaveChanelMessage({ cid: chanelId, uid, content: textMessage.value }, token)\n        .then(res => {\n          console.log(res)\n        })\n        .catch(err => { console.log(err) })\n\n    } catch (e) { console.log(e) }\n  }\n\n  checkUserEnter = (e) => {\n    if (e.keyCode === 13) {\n      this.handleSendMessageFromChanel();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"receive props\");\n    this.handleCreateConnectSocket();\n    let { chanelId } = nextProps.match.params;\n    getSingleChanel(chanelId)\n      .then(res => {\n        if (!res.message) {\n          this.setState({\n            chanel: res,\n            messageList: res.chanelMessages\n          });\n        }\n      });\n  }\n\n  toggleDropdown = () => {\n    try {\n      let drdElement = document.querySelector(\"#chat-area .list-more\");\n      if (drdElement.classList.length > 2) {\n        drdElement.classList.remove(\"active\");\n      } else {\n        drdElement.classList.add(\"active\");\n        document.getElementById(\"root\").addEventListener(\"click\", () => {\n          drdElement.classList.remove(\"active\");\n        });\n      }\n    } catch (e) { }\n  }\n\n  render() {\n    let { messageList, onlineUsers, chanel } = this.state;\n    let uid = this.props.userPayload.user._id;\n\n    let tabActive = document.querySelectorAll(\".item-discussions.active\");\n    Array.from(tabActive).map(el => { el.classList.remove(\"active\") });\n    // active tab\n    let idTabElement = `dcs_${chanel._id}`;\n    let tabElement = document.getElementById(idTabElement);\n    if (tabElement) {\n      tabElement.classList.add(\"active\")\n    }\n    \n    return (\n      <Template tabPenel=\"-none\" widthRight=\"100%\">\n        <div id=\"chat-area\" className=\"chat-server\">\n          <div className=\"top\">\n            <div className=\"inside\">\n\n              <div className=\"data\">\n                <h5><a href=\"/chanels\">{chanel.chanelName}</a></h5>\n              </div>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-headphone-alt\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-video-camera\" />\n              </button>\n              <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                <i className=\"ti-info\" />\n              </button>\n\n              <div className=\"dropdown\" onClick={this.toggleDropdown}>\n                <button className=\"btn d-md-block audio-call\" title=\"Audio call\">\n                  <i className=\"ti-gird\" />\n                </button>\n\n                <div className=\"dropdown-list list-more\">\n                  <a href=\"/\" className=\"voice\">Voice Call</a>\n                  <a href=\"/\" className=\"voice\">Video Call</a>\n                  <hr />\n                  <a href=\"/\" className=\"voice\">Clear History</a>\n                  <a href=\"/\" className=\"voice\">Block Contact</a>\n                  <a href=\"/\" className=\"voice\">Delete Contact</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <aside >\n            <div>\n              <div className=\"content\">\n                <div className=\"container\">\n                  {\n                    messageList.map((item, i) => {\n                      return (\n                        <ItemMessage\n                          key={i}\n                          isMe={item.sender._id === uid ? \"me\" : \"\"}\n                          content={item.content}\n                          date={moment(item.created).fromNow() || \"just now\"}\n                          photo={item.sender.photo}\n                          name={item.sender.fullname || item.sender.email}\n                          uid={item.sender._id}\n                        />\n                      )\n                    })\n                  }\n                  <div id=\"end-of-message\"></div>\n                </div>\n                <div className=\"scroller\" />\n              </div>\n              <div className=\"bottom\">\n                <form className=\"text-area\">\n                  <textarea\n                    id=\"text-message\" className=\"form-control\" placeholder=\"Start typing for reply...\" rows={1} defaultValue={\"\"}\n\n                  />\n                  <div className=\"add-smiles\">\n                    <span title=\"add icon\" className=\"em em-blush\" />\n                  </div>\n                  <button onClick={this.handleSendMessageFromChanel} style={{ height: '56x', outline: \"none\" }} type=\"submit\" className=\"btn send\"><i className=\"ti-location-arrow\" /></button>\n                </form>\n                <label>\n                  <input type=\"file\" className=\"d-none\" />\n                  <span className=\"btn attach\"><i className=\"ti-clip\" /></span>\n                </label>\n              </div>\n            </div>\n            <div className=\"container tab-panel\">\n              <div className=\"chanel user-online\">\n                <header>Member online</header>\n                {\n                  onlineUsers.map((user, i) => {\n                    return <a key={i} href=\"#list-chat\" className=\"item-discussions single\">\n                      <img className=\"avatar-md\" src={user.photo} alt=\"avt\" />\n                      <div className=\"data\">\n                        <h5>{user.name}</h5>\n                      </div>\n                    </a>\n                  })\n                }\n                <a href=\"#list-chat\" className=\"item-discussions single\">\n                  <img className=\"avatar-md\" src={settingImage} alt=\"avt\" />\n                  <div className=\"status offline\" />\n                  <div className=\"data\">\n                    <h5>Bob Frank</h5>\n\n                  </div>\n                </a>\n\n              </div>\n            </div>\n          </aside>\n\n        </div>\n      </Template>\n    )\n  }\n}\n\nexport default ChatServerArea;"]},"metadata":{},"sourceType":"module"}